%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Chatgpt-Illustration-syahrul.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Lenovo
%%CreationDate: 3/28/2023
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.6%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.6 x637 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Chatgpt-Illustration-syahrul</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2023-03-28T16:04:53+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2023-03-28T16:04:53+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2023-03-28T16:04:53+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8AiGdk8u7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FW8VV4rG5k3CUHi22TGM&#xA;liZgIlNIb9uQD2UV/E5YMLA5VZdJtx1Zj9I/pkvBDHxCu/Rlr4H78PhBHiFo6VanpyHyP9Rg8IJ8&#xA;QqbaQn7MhHzFf6YDhT4qHk0u5X7NH+RofxyBxFkMgQ0kUkZo6lT7jKyCGYNrMCXYqirPS9RvTS0t&#xA;pZvdEJA+Z6DASxMgOafWX5ea9PQz+nar35tyb7k5D8ciZhrOeITGTyn5S0gctb1ZVYb+mzpDX5LV&#xA;nP0YjilyDX40jyChH52/Kqwf0oI1lHQy/V3k/wCGlHLLPy+QoMcha836dot55ZbzL5eEbJCPUkWM&#xA;cUkjB4v8NBwdevTx2wYweLhknHMg0WC2F/FeQl0HFlNHQ9jlmSBiXKROVq7FXYq7FXYq7FXYq7FX&#xA;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&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:60c872f6-26d3-6045-a9b3-50f0daca2487</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:60c872f6-26d3-6045-a9b3-50f0daca2487</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:d4d15e04-a658-48aa-955e-ab0a1f4dc9b4</stRef:instanceID>
            <stRef:documentID>xmp.did:a3fc00fd-bbf2-3444-8bdc-20eabc9d0796</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b14dd9b0-4987-244f-be3c-b1a62c5f1589</stEvt:instanceID>
                  <stEvt:when>2023-03-15T05:23:14+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:31f52da8-faac-e74b-90c2-f51afa22b99a</stEvt:instanceID>
                  <stEvt:when>2023-03-17T17:06:56+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:111d7c3b-d392-fc45-b989-127432bc2b63</stEvt:instanceID>
                  <stEvt:when>2023-03-17T17:18:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 27.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28622b44-8f7f-7f48-a2bf-9e8f30ac7db1</stEvt:instanceID>
                  <stEvt:when>2023-03-25T07:04:32+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ce157b24-1a93-7048-aac9-9c6518315647</stEvt:instanceID>
                  <stEvt:when>2023-03-25T14:00:13+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bf1588df-d4e3-5f42-8d18-b15c134530cc</stEvt:instanceID>
                  <stEvt:when>2023-03-28T11:26:03+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:60c872f6-26d3-6045-a9b3-50f0daca2487</stEvt:instanceID>
                  <stEvt:when>2023-03-28T16:04:53+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>AIRobin</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 16.03</pdf:Producer>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=43 G=120 B=185</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>119</xmpG:green>
                           <xmpG:blue>184</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=254 G=149 B=7</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>7</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 0 mo
2000 2000 li
0 2000 li
0 0 li
2000 0 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.172549 .403922 .670588 rgb
f
308.111 729.351 mo
205.281 821.159 103.027 932.014 88.5441 1070.74 cv
72.3827 1225.55 170.143 1367.78 274.896 1480.85 cv
389.834 1604.91 521.646 1716.12 675.172 1783.8 cv
828.697 1851.47 1006.1 1872.61 1164.43 1817.72 cv
1329.91 1760.34 1458.47 1628.41 1580.59 1500.73 cv
1660.23 1417.47 1740.39 1333.56 1803.25 1236.46 cv
1866.12 1139.37 1911.33 1027.15 1913.16 910.748 cv
1916.49 698.445 1776.74 509.752 1614.61 376.898 cv
1498.93 282.105 1366.99 205.342 1223.17 168.389 cv
1079.35 131.437 922.973 136.242 787.291 197.388 cv
674.88 248.047 611.637 328.611 564.254 440.585 cv
513.246 561.124 402.264 645.291 308.111 729.351 cv
.223529 .517647 .858824 rgb
f
1734.04 189.818 mo
1705.58 138.008 li
1765.31 165.659 li
1734.04 189.818 li
cp
0 .215686 .623529 rgb
f
1688.51 1831.33 mo
954.942 1650.83 li
941.102 1647.61 929.986 1616.37 929.986 1581.03 cv
929.986 426.623 li
929.986 391.277 941.102 359.87 954.942 356.441 cv
1745.07 160.699 li
1768.49 154.898 1787.71 187.992 1787.71 234.689 cv
1787.71 1759.8 li
1787.71 1806.5 1737.57 1844.6 1688.51 1831.33 cv
f
889.005 441.248 mo
886.404 425.67 li
879.469 425.198 872.813 423.885 866.543 421.814 cv
855.246 434.694 li
845.112 428.523 li
839.752 425.249 li
829.618 419.078 li
836.619 403.563 li
831.935 398.931 827.829 393.678 824.385 387.882 cv
808.833 392.391 li
804.994 380.633 li
802.959 374.408 li
799.12 362.65 li
813.059 353.142 li
812.687 349.659 812.496 346.095 812.51 342.458 cv
812.521 338.822 812.736 335.201 813.132 331.609 cv
799.245 326.022 li
803.167 313.17 li
805.247 306.366 li
809.17 293.514 li
824.707 293.642 li
828.193 286.869 832.339 280.454 837.059 274.496 cv
830.157 260.941 li
840.343 251.907 li
845.731 247.118 li
855.916 238.083 li
867.137 247.791 li
873.426 243.951 880.098 240.759 887.043 238.331 cv
889.752 222.005 li
921.523 217.529 li
924.124 233.106 li
931.059 233.579 937.715 234.892 943.985 236.962 cv
955.282 224.081 li
965.416 230.252 li
970.776 233.527 li
980.91 239.698 li
973.909 255.213 li
978.593 259.845 982.699 265.098 986.143 270.893 cv
1001.7 266.385 li
1005.53 278.143 li
1007.57 284.368 li
1011.41 296.126 li
997.469 305.634 li
997.486 305.786 997.501 305.937 997.517 306.089 cv
963.61 314.88 li
960.925 287.581 940.084 268.393 913.489 268.393 cv
910.869 268.393 908.19 268.58 905.47 268.963 cv
873.081 273.527 846.74 304.274 846.626 337.651 cv
846.522 368.224 868.458 390.383 897.039 390.383 cv
899.659 390.383 902.338 390.196 905.058 389.813 cv
907.171 389.515 909.258 389.106 911.315 388.592 cv
911.261 390.39 911.234 392.203 911.234 394.024 cv
911.234 438.116 li
889.005 441.248 li
.329412 .662745 .913725 rgb
f
876.217 923.73 mo
874.944 923.592 li
874.944 914.023 li
867.085 913.964 li
867.085 912.679 li
874.944 912.62 li
874.944 903.051 li
876.217 902.912 li
876.217 912.611 li
885.916 912.539 li
885.916 914.104 li
876.217 914.032 li
876.217 923.73 li
f
764.217 366.73 mo
762.944 366.592 li
762.944 357.022 li
755.085 356.964 li
755.085 355.679 li
762.944 355.62 li
762.944 346.051 li
764.217 345.912 li
764.217 355.611 li
773.916 355.539 li
773.916 357.104 li
764.217 357.032 li
764.217 366.73 li
f
890.217 1403.73 mo
888.944 1403.59 li
888.944 1394.02 li
881.085 1393.96 li
881.085 1392.68 li
888.944 1392.62 li
888.944 1383.05 li
890.217 1382.91 li
890.217 1392.61 li
899.916 1392.54 li
899.916 1394.1 li
890.217 1394.03 li
890.217 1403.73 li
f
774.217 686.73 mo
772.944 686.592 li
772.944 677.022 li
765.085 676.964 li
765.085 675.679 li
772.944 675.62 li
772.944 666.051 li
774.217 665.912 li
774.217 675.611 li
783.916 675.539 li
783.916 677.104 li
774.217 677.032 li
774.217 686.73 li
f
823.743 869.213 mo
821.763 869.213 819.786 869.135 817.815 868.98 cv
817.223 862.452 li
818.679 862.545 820.137 862.592 821.596 862.592 cv
826.535 862.592 831.482 862.056 836.35 860.973 cv
838.914 867.663 li
833.897 868.701 828.813 869.213 823.743 869.213 cv
841.864 866.993 mo
839.009 860.326 li
840.204 860.008 841.402 859.655 842.57 859.275 cv
845.817 865.891 li
844.518 866.291 843.19 866.662 841.864 866.993 cv
805.252 866.925 mo
804.844 866.823 804.438 866.717 804.034 866.609 cv
804.627 860.47 li
804.996 860.564 805.366 860.654 805.737 860.741 cv
805.252 866.925 li
800.446 865.55 mo
799.567 865.266 798.698 864.968 797.838 864.656 cv
798.941 858.762 li
799.732 859.037 800.531 859.299 801.338 859.548 cv
800.446 865.55 li
847.127 865.474 mo
843.75 858.881 li
847.702 857.516 851.572 855.769 855.241 853.681 cv
859.926 859.906 li
855.832 862.16 851.523 864.03 847.127 865.474 cv
780.72 855.785 mo
777.522 853.561 774.485 851.073 771.686 848.393 cv
774.816 844.135 li
777.412 846.574 780.226 848.83 783.184 850.839 cv
780.72 855.785 li
770.859 847.588 mo
770.044 846.784 769.238 845.95 768.463 845.111 cv
771.825 841.145 li
772.544 841.91 773.292 842.67 774.048 843.403 cv
770.859 847.588 li
878.134 845.874 mo
871.495 840.822 li
872.162 840.102 872.818 839.367 873.459 838.616 cv
880.341 843.452 li
879.622 844.277 878.886 845.085 878.134 845.874 cv
766.768 843.212 mo
762.831 838.645 759.479 833.646 756.776 828.341 cv
760.935 825.764 li
763.457 830.645 766.582 835.232 770.248 839.409 cv
766.768 843.212 li
883.158 840.019 mo
875.953 835.512 li
876.222 835.155 876.487 834.796 876.75 834.433 cv
884.049 838.842 li
883.755 839.237 883.458 839.63 883.158 840.019 cv
891.675 826.015 mo
883.502 822.854 li
886.507 816.266 888.431 809.226 889.193 801.972 cv
898.122 802.779 li
897.259 810.861 895.078 818.696 891.675 826.015 cv
752.526 818.197 mo
752.41 817.851 752.298 817.504 752.188 817.155 cv
756.649 815.461 li
756.752 815.781 756.858 816.101 756.966 816.42 cv
752.526 818.197 li
751.266 814.01 mo
751.056 813.229 750.859 812.443 750.674 811.652 cv
755.235 810.384 li
755.408 811.114 755.593 811.839 755.789 812.559 cv
751.266 814.01 li
898.405 799.403 mo
889.443 798.938 li
889.524 797.589 889.565 796.21 889.565 794.842 cv
898.544 794.843 li
898.544 796.366 898.497 797.9 898.405 799.403 cv
753.429 794.472 mo
748.745 794.445 li
748.762 790.831 749.043 787.202 749.583 783.653 cv
754.214 784.488 li
753.709 787.77 753.446 791.127 753.429 794.472 cv
889.315 788.981 mo
889.226 787.963 889.116 786.953 888.985 785.948 cv
897.887 784.947 li
898.036 786.061 898.159 787.181 898.259 788.308 cv
889.315 788.981 li
754.375 783.499 mo
749.754 782.579 li
749.932 781.514 750.137 780.437 750.362 779.377 cv
754.944 780.538 li
754.733 781.518 754.541 782.515 754.375 783.499 cv
888.334 781.928 mo
888.245 781.475 888.154 781.025 888.057 780.576 cv
896.835 778.966 li
896.942 779.455 897.043 779.944 897.143 780.435 cv
888.334 781.928 li
755.454 778.355 mo
750.907 777.009 li
752.312 771.344 754.398 765.835 757.127 760.612 cv
761.263 763.244 li
758.716 768.049 756.767 773.127 755.454 778.355 cv
883.888 767.691 mo
881.006 761.131 877.104 755.096 872.334 749.774 cv
879.075 744.813 li
884.448 750.673 888.854 757.348 892.114 764.627 cv
883.888 767.691 li
766.764 754.537 mo
763.028 751.13 li
763.25 750.827 763.474 750.526 763.7 750.226 cv
767.392 753.707 li
767.181 753.983 766.971 754.259 766.764 754.537 cv
769.355 751.266 mo
765.808 747.561 li
766.347 746.91 766.899 746.267 767.461 745.633 cv
770.889 749.508 li
770.368 750.085 769.856 750.672 769.355 751.266 cv
870.323 747.627 mo
869.414 746.696 868.46 745.775 867.488 744.889 cv
873.634 739.454 li
874.723 740.422 875.793 741.432 876.815 742.454 cv
870.323 747.627 li
866.513 744.017 mo
863.267 741.168 859.738 738.623 856.034 736.447 cv
860.81 730.261 li
864.95 732.615 868.9 735.385 872.539 738.5 cv
866.513 744.017 li
783.801 738.39 mo
781.389 733.397 li
784.676 731.165 788.182 729.173 791.816 727.481 cv
793.413 733.088 li
790.069 734.594 786.836 736.379 783.801 738.39 cv
794.431 732.64 mo
792.925 726.977 li
794.036 726.481 795.177 726.006 796.316 725.564 cv
797.549 731.388 li
796.502 731.779 795.453 732.201 794.431 732.64 cv
799.916 730.556 mo
798.899 724.617 li
805.182 722.442 811.95 721.063 818.698 720.613 cv
818.028 727.158 li
811.874 727.478 805.678 728.65 799.916 730.556 cv
837.463 728.947 mo
836.573 728.734 835.678 728.538 834.778 728.359 cv
837.174 721.661 li
838.168 721.842 839.158 722.043 840.141 722.264 cv
837.463 728.947 li
831.165 727.745 mo
830.765 727.688 830.364 727.634 829.962 727.584 cv
831.845 720.886 li
832.287 720.934 832.731 720.987 833.173 721.043 cv
831.165 727.745 li
f
820.469 856.75 mo
820.444 856.685 li
817.614 838.131 li
817.688 838.113 li
818.023 838.097 818.371 838.07 818.694 838.041 cv
818.757 838.046 li
822.044 856.71 li
821.981 856.714 li
821.501 856.721 821.01 856.739 820.532 856.747 cv
820.469 856.75 li
817.675 856.714 mo
817.614 856.705 li
817.082 856.692 816.613 856.662 816.181 856.638 cv
816.107 856.627 li
814.587 838.173 li
814.697 838.159 li
814.709 838.173 li
814.921 838.173 815.107 838.175 815.279 838.175 cv
815.414 838.175 815.541 838.174 815.665 838.17 cv
815.726 838.176 li
815.726 838.237 li
817.675 856.714 li
824.868 856.544 mo
824.83 856.488 li
820.658 837.85 li
820.721 837.844 li
821.073 837.804 821.401 837.75 821.741 837.708 cv
821.804 837.701 li
826.449 856.399 li
826.397 856.404 li
825.908 856.449 825.42 856.495 824.919 856.538 cv
824.868 856.544 li
813.368 856.41 mo
813.308 856.401 li
812.823 856.356 812.374 856.305 811.952 856.245 cv
811.819 856.166 li
811.566 838.006 li
811.626 838.011 li
811.964 838.045 812.29 838.065 812.641 838.088 cv
812.701 838.095 li
812.701 838.155 li
813.368 856.41 li
829.277 856.019 mo
829.251 855.965 li
823.681 837.36 li
823.795 837.309 li
823.808 837.347 li
824.127 837.278 824.446 837.208 824.766 837.139 cv
824.83 837.133 li
824.843 837.184 li
830.876 855.755 li
830.81 855.772 li
830.311 855.856 829.839 855.931 829.408 856.011 cv
829.277 856.019 li
809.133 855.82 mo
809.074 855.812 li
808.609 855.734 808.147 855.644 807.684 855.554 cv
807.625 855.546 li
807.614 855.484 li
808.657 837.654 li
808.979 837.71 809.312 837.756 809.634 837.8 cv
809.694 837.806 li
809.694 837.866 li
809.133 855.82 li
833.694 855.18 mo
826.707 836.659 li
826.758 836.639 li
826.784 836.691 li
826.771 836.64 li
827.107 836.546 827.43 836.45 827.768 836.356 cv
827.82 836.335 li
827.846 836.401 li
835.27 854.789 li
835.204 854.806 li
834.628 854.96 834.174 855.065 833.747 855.161 cv
833.734 855.173 li
833.694 855.18 li
804.992 854.958 mo
804.933 854.949 li
804.455 854.834 804.036 854.715 803.628 854.61 cv
803.628 854.622 li
803.489 854.579 li
803.5 854.521 li
805.658 837.055 li
805.752 837.1 li
806.069 837.18 806.387 837.247 806.692 837.302 cv
806.692 837.361 li
806.751 837.379 li
804.992 854.958 li
838.076 853.987 mo
838.009 853.94 li
829.669 835.737 li
829.669 835.724 li
829.734 835.704 li
830.075 835.583 830.416 835.463 830.705 835.349 cv
830.77 835.33 li
839.63 853.504 li
839.562 853.521 li
839.042 853.7 838.594 853.848 838.159 853.972 cv
838.076 853.987 li
800.94 853.829 mo
800.882 853.809 li
800.516 853.698 800.116 853.56 799.614 853.395 cv
799.512 853.357 li
799.512 853.346 li
799.5 853.297 li
802.909 836.355 li
802.921 836.356 li
803.245 836.459 803.57 836.55 803.814 836.622 cv
803.872 836.64 li
800.94 853.829 li
842.365 852.502 mo
842.31 852.43 li
832.579 834.577 li
832.632 834.556 li
832.924 834.43 833.215 834.302 833.521 834.151 cv
833.468 834.095 li
833.908 834.133 li
833.722 834.206 li
843.905 851.886 li
843.849 851.906 li
843.39 852.096 842.932 852.286 842.435 852.485 cv
842.365 852.502 li
797.01 852.435 mo
796.953 852.415 li
796.527 852.251 796.089 852.074 795.687 851.901 cv
795.609 851.89 li
795.631 851.812 li
800.036 835.388 li
800.196 835.44 li
800.185 835.45 li
800.448 835.546 800.723 835.643 801.02 835.744 cv
801.48 835.906 li
801.043 835.864 li
797.01 852.435 li
793.219 850.796 mo
793.164 850.778 li
792.81 850.614 792.436 850.424 791.985 850.202 cv
791.887 850.153 li
791.887 850.142 li
791.887 850.095 li
791.908 850.052 li
797.347 834.261 li
797.45 834.318 li
797.709 834.424 797.98 834.555 798.297 834.692 cv
798.353 834.709 li
798.331 834.765 li
793.219 850.796 li
846.579 850.708 mo
846.536 850.625 li
835.419 833.215 li
835.472 833.181 li
835.513 833.236 li
835.526 833.237 li
835.485 833.183 li
835.795 833.017 836.104 832.838 836.413 832.671 cv
836.468 832.637 li
836.508 832.704 li
848.091 849.93 li
848.034 849.962 li
847.624 850.177 847.185 850.387 846.705 850.619 cv
846.719 850.633 li
846.579 850.708 li
789.572 848.933 mo
789.517 848.903 li
789.149 848.694 788.781 848.485 788.392 848.261 cv
788.295 848.203 li
788.295 848.191 li
788.285 848.19 li
794.76 832.968 li
794.816 833.008 li
795.095 833.151 795.385 833.305 795.664 833.448 cv
795.698 833.521 li
795.698 833.533 li
789.572 848.933 li
850.713 848.559 mo
850.656 848.459 li
838.172 831.633 li
838.267 831.563 li
838.566 831.381 838.838 831.196 839.125 831.013 cv
839.206 831.006 li
839.22 831.033 li
852.164 847.65 li
852.107 847.684 li
851.689 847.942 851.258 848.197 850.827 848.453 cv
850.87 848.51 li
850.713 848.559 li
786.085 846.842 mo
786.042 846.814 li
785.68 846.574 785.307 846.332 784.914 846.066 cv
784.872 846.038 li
784.883 845.982 li
792.271 831.522 li
792.392 831.557 li
792.381 831.578 li
792.634 831.741 792.888 831.902 793.142 832.053 cv
793.197 832.081 li
793.164 832.136 li
786.085 846.842 li
854.673 846.024 mo
854.615 845.978 li
840.822 829.839 li
840.835 829.827 li
840.917 829.756 li
841.206 829.545 841.468 829.344 841.729 829.143 cv
841.784 829.109 li
841.826 829.151 li
856.076 845.053 li
856.017 845.1 li
855.635 845.367 855.227 845.657 854.789 845.956 cv
854.673 846.024 li
782.782 844.551 mo
782.73 844.511 li
782.416 844.28 782.08 844.024 781.673 843.715 cv
781.62 843.664 li
781.641 843.621 li
789.876 829.882 li
789.898 829.906 li
789.898 829.895 li
789.952 829.946 li
790.235 830.155 790.519 830.352 790.726 830.496 cv
790.781 830.524 li
782.782 844.551 li
858.477 843.236 mo
858.418 843.19 li
843.35 827.832 li
843.446 827.748 li
843.697 827.531 843.961 827.302 844.211 827.072 cv
844.282 827.063 li
844.309 827.079 li
859.813 842.145 li
859.753 842.18 li
859.426 842.47 859.055 842.77 858.579 843.153 cv
858.596 843.154 li
858.492 843.224 li
858.477 843.236 li
779.657 842.077 mo
779.605 842.038 li
779.275 841.752 778.956 841.479 778.647 841.207 cv
778.647 841.219 li
778.616 841.181 li
778.533 841.172 li
787.66 828.146 li
787.703 828.195 li
787.982 828.424 788.22 828.616 788.435 828.783 cv
788.49 828.822 li
779.657 842.077 li
862.147 840.195 mo
845.736 825.647 li
845.806 825.547 li
845.82 825.548 li
846.031 825.34 846.284 825.082 846.536 824.81 cv
846.579 824.76 li
846.635 824.816 li
863.353 838.937 li
863.292 838.972 li
862.975 839.296 862.584 839.667 862.177 840.049 cv
862.222 840.107 li
862.147 840.1 li
862.147 840.195 li
776.712 839.422 mo
776.671 839.384 li
776.376 839.095 776.062 838.793 775.747 838.468 cv
775.696 838.419 li
785.531 826.263 li
785.541 826.264 li
785.701 826.412 li
785.69 826.411 li
785.882 826.587 786.085 826.773 786.277 826.948 cv
786.32 826.986 li
776.712 839.422 li
865.539 836.791 mo
847.948 823.257 li
848.005 823.208 li
848.218 822.945 848.459 822.67 848.701 822.368 cv
848.744 822.318 li
866.638 835.424 li
866.592 835.488 li
866.271 835.871 865.904 836.263 865.539 836.669 cv
865.539 836.791 li
773.971 836.624 mo
773.94 836.576 li
773.629 836.245 773.319 835.902 773.069 835.611 cv
773.029 835.552 li
783.55 824.249 li
783.603 824.299 li
783.814 824.518 784.025 824.75 784.247 824.982 cv
784.289 825.019 li
773.971 836.624 li
771.436 833.671 mo
771.396 833.623 li
771.148 833.324 770.891 832.991 770.595 832.611 cv
770.565 832.553 li
770.595 832.523 li
781.725 822.119 li
781.756 822.166 li
781.955 822.416 782.154 822.657 782.363 822.886 cv
782.395 822.933 li
782.353 822.976 li
771.436 833.671 li
868.669 833.096 mo
850.011 820.716 li
850.011 820.703 li
850.169 820.461 li
850.183 820.488 li
850.341 820.259 850.497 820.043 850.656 819.826 cv
850.44 819.722 li
850.813 819.742 li
850.827 819.769 li
869.69 831.662 li
869.644 831.714 li
869.272 832.208 868.962 832.61 868.669 832.985 cv
868.669 833.096 li
769.099 830.586 mo
769.06 830.538 li
768.845 830.224 768.6 829.885 768.337 829.49 cv
768.318 829.466 li
768.318 829.456 li
768.307 829.443 li
768.346 829.392 li
780.03 819.891 li
780.06 819.926 li
780.154 819.932 li
780.102 819.985 li
780.268 820.22 780.433 820.444 780.621 820.693 cv
780.652 820.74 li
769.099 830.586 li
871.48 829.12 mo
871.448 829.104 li
871.417 829.102 li
871.402 829.086 li
851.862 818.008 li
851.876 817.996 li
852.035 817.699 li
852.035 817.738 li
852.194 817.481 852.338 817.236 852.481 817.004 cv
852.511 816.952 li
852.583 816.982 li
872.435 827.637 li
872.403 827.691 li
872.121 828.142 871.823 828.578 871.51 829.053 cv
871.48 829.12 li
766.965 827.378 mo
766.936 827.332 li
766.713 826.965 766.501 826.622 766.307 826.291 cv
766.268 826.342 li
766.22 826.209 li
778.503 817.566 li
778.523 817.612 li
778.708 817.914 778.893 818.194 779.027 818.404 cv
779.059 818.451 li
779.017 818.482 li
766.965 827.378 li
811.445 825.533 mo
811.385 825.469 li
811.505 825.478 li
811.445 825.533 li
874.039 824.941 mo
873.96 824.909 li
853.625 815.209 li
853.378 815.424 li
853.525 815.151 li
853.509 815.151 li
853.553 815.086 li
853.713 814.773 853.872 814.474 854.061 814.109 cv
854.09 814.044 li
854.148 814.072 li
874.878 823.38 li
874.845 823.434 li
874.609 823.879 874.355 824.35 874.103 824.82 cv
874.118 824.821 li
874.323 824.931 li
874.039 824.941 li
765.056 824.079 mo
765.026 824.023 li
764.825 823.651 764.634 823.28 764.442 822.909 cv
764.423 822.833 li
764.452 822.823 li
777.12 815.167 li
777.181 815.259 li
777.171 815.27 li
777.324 815.557 777.467 815.809 777.59 816.028 cv
777.621 816.086 li
777.58 816.106 li
765.056 824.079 li
763.354 820.665 mo
763.326 820.62 li
763.135 820.187 762.975 819.843 762.832 819.521 cv
762.795 819.422 li
762.832 819.392 li
775.899 812.679 li
775.909 812.691 li
775.93 812.747 li
776.051 813.009 776.173 813.281 776.315 813.578 cv
776.345 813.635 li
776.295 813.655 li
763.354 820.665 li
876.259 820.547 mo
876.227 820.532 li
876.196 820.53 li
854.964 812.172 li
855.124 811.777 li
855.124 811.791 li
855.227 811.554 855.314 811.317 855.417 811.08 cv
855.431 811.027 li
876.976 818.91 li
876.96 818.978 li
876.722 819.511 876.515 820.003 876.291 820.479 cv
876.259 820.547 li
761.876 817.185 mo
761.858 817.13 li
761.707 816.757 761.555 816.362 761.405 815.957 cv
761.396 815.892 li
774.857 810.147 li
774.877 810.203 li
774.978 810.496 775.089 810.767 775.21 811.06 cv
775.21 811.127 li
775.18 811.136 li
761.876 817.185 li
878.13 815.986 mo
878.05 815.955 li
856.178 809.086 li
856.207 808.98 li
856.309 808.649 856.427 808.304 856.544 807.96 cv
856.56 807.893 li
856.633 807.922 li
878.724 814.288 li
878.707 814.344 li
878.531 814.855 878.354 815.38 878.161 815.903 cv
878.13 815.986 li
760.616 813.625 mo
760.597 813.57 li
760.484 813.212 760.363 812.821 760.241 812.42 cv
760.232 812.43 li
760.232 812.398 li
759.988 812.387 li
773.86 807.596 li
773.86 807.585 li
774.001 807.656 li
773.991 807.656 li
774.081 807.935 774.172 808.216 774.263 808.496 cv
774.283 808.541 li
760.616 813.625 li
879.659 811.266 mo
879.561 811.248 li
857.134 805.912 li
857.207 805.846 li
857.148 805.832 li
857.237 805.485 857.325 805.126 857.412 804.766 cv
857.487 804.714 li
857.502 804.714 li
880.095 809.524 li
880.079 809.594 li
879.933 810.138 879.804 810.681 879.659 811.182 cv
879.659 811.266 li
759.578 810 mo
759.559 809.946 li
759.457 809.515 759.354 809.117 759.27 808.73 cv
759.251 808.676 li
759.298 808.657 li
773.249 804.914 li
773.309 805.025 li
773.269 805.036 li
773.339 805.314 773.409 805.592 773.479 805.859 cv
773.499 805.915 li
773.449 805.936 li
759.578 810 li
880.759 806.422 mo
880.743 806.421 li
880.694 806.42 li
880.678 806.42 li
857.84 802.668 li
857.871 802.547 li
857.944 802.145 857.989 801.81 858.048 801.489 cv
858.121 801.436 li
881.066 804.656 li
881.05 804.726 li
880.969 805.288 880.873 805.833 880.775 806.352 cv
880.759 806.422 li
758.759 806.328 mo
758.75 806.274 li
758.666 805.814 758.6 805.418 758.536 805.044 cv
758.527 804.991 li
758.573 804.971 li
772.689 802.196 li
772.709 802.295 li
772.749 802.561 772.809 802.849 772.869 803.192 cv
772.839 803.258 li
758.759 806.328 li
758.174 802.612 mo
758.174 802.558 li
758.119 802.133 758.073 801.696 758.026 801.323 cv
758.026 801.27 li
758.073 801.25 li
772.31 799.521 li
772.33 799.588 li
772.35 799.864 772.39 800.15 772.43 800.493 cv
772.44 800.548 li
772.39 800.559 li
758.174 802.612 li
881.407 801.523 mo
858.328 799.236 li
858.373 798.833 858.403 798.498 858.418 798.175 cv
858.432 798.108 li
881.652 799.722 li
881.652 799.793 li
881.603 800.371 881.555 800.891 881.506 801.369 cv
881.522 801.369 li
881.49 801.509 li
881.472 801.509 li
881.407 801.523 li
757.823 798.889 mo
757.823 798.836 li
757.795 798.4 757.768 797.964 757.749 797.593 cv
757.795 797.53 li
772.111 796.787 li
772.111 796.853 li
772.131 797.194 772.151 797.492 772.161 797.768 cv
772.171 797.823 li
772.121 797.833 li
757.823 798.889 li
881.832 796.567 mo
881.733 796.567 li
858.536 795.959 li
858.551 795.583 858.551 795.206 858.551 794.83 cv
858.551 794.668 858.551 794.494 858.551 794.332 cv
858.551 794.266 li
881.848 794.016 li
881.848 794.27 li
881.848 794.467 881.848 794.651 881.848 794.834 cv
881.848 795.384 881.848 795.947 881.832 796.483 cv
881.832 796.567 li
757.693 795.151 mo
757.693 794.812 li
757.693 794.493 757.693 794.175 757.693 793.857 cv
757.693 793.804 li
757.749 793.793 li
772.071 794.099 li
772.071 794.11 li
772.071 794.352 772.071 794.583 772.071 794.815 cv
772.022 795.078 li
757.693 795.151 li
772.082 792.336 mo
757.786 791.415 li
757.786 791.362 li
757.805 790.916 757.841 790.491 757.869 790.119 cv
757.915 790.065 li
772.21 791.31 li
772.27 791.31 li
772.201 791.398 li
772.181 791.696 772.161 791.983 772.141 792.28 cv
772.131 792.336 li
772.082 792.336 li
858.492 792.169 mo
858.463 792.115 li
858.447 791.726 858.418 791.363 858.388 790.987 cv
858.373 790.92 li
881.587 789.073 li
881.587 789.128 li
881.636 789.734 881.685 790.268 881.717 790.776 cv
881.701 790.833 li
881.636 790.875 li
858.492 792.169 li
772.32 789.611 mo
758.101 787.683 li
758.101 787.63 li
758.147 787.236 758.203 786.842 758.258 786.447 cv
758.248 786.447 li
758.267 786.341 li
758.285 786.351 li
758.351 786.339 li
758.351 786.349 li
772.51 788.594 li
772.5 788.705 li
772.49 788.705 li
772.45 788.992 772.42 789.268 772.38 789.556 cv
772.37 789.611 li
772.32 789.611 li
858.15 788.853 mo
858.136 788.787 li
858.093 788.451 858.034 788.102 857.959 787.674 cv
857.959 787.607 li
880.92 784.142 li
880.938 784.212 li
881.034 784.773 881.115 785.32 881.196 785.839 cv
881.131 785.939 li
858.15 788.853 li
772.789 786.913 mo
758.637 783.971 li
758.647 783.917 li
758.731 783.489 758.805 783.093 758.879 782.718 cv
758.898 782.643 li
758.907 782.642 li
758.972 782.641 li
758.972 782.651 li
772.989 785.893 li
772.969 785.959 li
772.909 786.281 772.849 786.58 772.799 786.857 cv
772.789 786.913 li
857.575 785.574 mo
857.561 785.561 li
857.53 785.454 li
857.457 785.08 857.369 784.733 857.296 784.426 cv
857.28 784.36 li
879.869 779.293 li
879.885 779.362 li
880.014 779.85 880.144 780.338 880.273 780.924 cv
880.304 781.036 li
880.208 781.066 li
857.575 785.574 li
773.369 784.227 mo
773.319 784.217 li
759.409 780.292 li
759.419 780.238 li
759.541 779.775 759.634 779.388 759.736 779.02 cv
759.736 778.946 li
759.745 778.956 li
759.755 778.934 li
759.792 778.976 li
773.62 783.235 li
773.569 783.281 li
773.609 783.291 li
773.54 783.57 773.459 783.859 773.379 784.182 cv
773.369 784.227 li
856.735 782.363 mo
856.706 782.284 li
856.706 782.271 li
856.676 782.204 li
856.692 782.203 li
856.589 781.859 856.486 781.54 856.384 781.235 cv
856.354 781.169 li
878.434 774.549 li
878.467 774.619 li
878.643 775.143 878.804 775.627 878.965 776.126 cv
878.965 776.112 li
878.965 776.154 li
879.513 776.133 li
856.735 782.363 li
774.121 781.593 mo
774.071 781.573 li
760.41 776.651 li
760.428 776.598 li
760.55 776.207 760.672 775.815 760.812 775.392 cv
760.841 775.315 li
760.878 775.356 li
774.453 780.607 li
774.443 780.618 li
774.464 780.628 li
774.423 780.674 li
774.302 781.022 774.212 781.291 774.131 781.537 cv
774.121 781.593 li
855.68 779.224 mo
855.635 779.159 li
855.49 778.763 855.359 778.434 855.227 778.131 cv
855.197 778.065 li
876.641 769.963 li
876.658 770.018 li
876.896 770.537 877.104 771.057 877.296 771.536 cv
877.328 771.619 li
855.68 779.224 li
775.039 778.999 mo
761.64 773.065 li
761.659 773.011 li
761.792 772.66 761.933 772.286 762.112 771.836 cv
762.131 771.781 li
762.179 771.789 li
775.433 778.039 li
775.382 778.152 li
775.271 778.412 775.16 778.683 775.059 778.942 cv
775.039 778.999 li
776.132 776.462 mo
776.082 776.431 li
763.088 769.549 li
763.107 769.505 li
763.288 769.106 763.459 768.728 763.641 768.349 cv
763.679 768.293 li
763.707 768.312 li
776.59 775.527 li
776.56 775.573 li
776.417 775.847 776.285 776.121 776.152 776.405 cv
776.132 776.462 li
854.367 776.189 mo
854.323 776.125 li
854.162 775.758 854.003 775.445 853.843 775.131 cv
853.799 775.041 li
853.901 775.036 li
874.482 765.558 li
874.513 765.611 li
874.799 766.137 875.036 766.609 875.258 767.042 cv
875.305 767.109 li
875.29 767.124 li
875.241 767.168 li
854.367 776.189 li
777.385 773.993 mo
764.758 766.121 li
764.777 766.076 li
764.979 765.704 765.171 765.333 765.373 764.971 cv
765.373 764.884 li
765.43 764.912 li
765.449 764.911 li
765.459 764.921 li
777.897 773.083 li
777.867 773.196 li
777.836 773.176 li
777.703 773.406 777.56 773.66 777.406 773.947 cv
777.385 773.993 li
852.829 773.275 mo
852.8 773.209 li
852.613 772.899 852.439 772.589 852.236 772.266 cv
852.208 772.215 li
871.996 761.352 li
872.027 761.405 li
872.293 761.815 872.576 762.266 872.89 762.786 cv
872.921 762.812 li
872.936 762.838 li
872.843 762.9 li
852.829 773.275 li
778.79 771.6 mo
766.636 762.788 li
766.665 762.742 li
766.917 762.34 767.139 761.984 767.344 761.651 cv
767.373 761.605 li
767.421 761.623 li
779.368 770.714 li
779.337 770.761 li
779.192 770.982 779.007 771.262 778.822 771.553 cv
778.79 771.6 li
851.099 770.495 mo
851.058 770.431 li
850.842 770.112 850.626 769.805 850.455 769.563 cv
850.24 769.575 li
850.455 769.445 li
869.21 757.377 li
869.24 757.43 li
869.597 757.911 869.923 758.327 870.202 758.72 cv
870.234 758.758 li
870.171 758.846 li
851.099 770.495 li
780.361 769.293 mo
780.32 769.262 li
768.737 759.567 li
768.767 759.521 li
769.031 759.136 769.305 758.761 769.511 758.468 cv
769.551 758.421 li
780.995 768.453 li
780.953 768.501 li
780.766 768.75 780.569 768.998 780.392 769.246 cv
780.361 769.293 li
849.156 767.853 mo
849.156 767.841 li
849.127 767.816 li
848.942 767.826 li
849.07 767.74 li
848.828 767.438 848.616 767.188 848.417 766.949 cv
848.374 766.899 li
848.43 766.856 li
866.119 753.653 li
866.164 753.704 li
866.592 754.174 866.914 754.544 867.207 754.902 cv
867.406 754.886 li
849.156 767.853 li
782.08 767.082 mo
782.049 767.051 li
771.04 756.458 li
771.079 756.422 li
771.346 756.065 771.604 755.754 771.852 755.454 cv
771.842 755.444 li
771.872 755.43 li
771.872 755.32 li
771.882 755.33 li
771.882 755.308 li
782.762 766.267 li
782.699 766.362 li
782.688 766.363 li
782.499 766.591 782.311 766.807 782.122 767.035 cv
782.08 767.082 li
847.044 765.377 mo
846.988 765.328 li
846.748 765.082 846.523 764.833 846.284 764.587 cv
846.227 764.656 li
846.2 764.488 li
846.227 764.394 li
846.284 764.416 li
862.794 750.205 li
862.84 750.255 li
863.217 750.614 863.595 750.974 863.928 751.323 cv
863.942 751.309 li
864.019 751.411 li
863.973 751.47 li
847.044 765.377 li
783.951 764.98 mo
773.549 753.493 li
773.589 753.444 li
773.9 753.102 774.182 752.796 774.453 752.501 cv
774.453 752.379 li
784.691 764.22 li
784.681 764.221 li
784.734 764.275 li
784.628 764.282 li
784.406 764.503 784.194 764.712 783.983 764.944 cv
783.951 764.98 li
844.756 763.08 mo
844.687 763.033 li
844.407 762.765 844.128 762.522 843.891 762.305 cv
843.836 762.269 li
843.891 762.213 li
859.219 747.035 li
859.278 747.082 li
859.71 747.431 860.096 747.771 860.484 748.097 cv
860.515 748.134 li
860.469 748.233 li
844.756 763.08 li
785.956 762.996 mo
776.254 750.661 li
776.295 750.623 li
776.59 750.334 776.896 750.043 777.202 749.752 cv
777.212 749.739 li
777.243 749.713 li
777.334 749.692 li
777.334 749.725 li
786.748 762.271 li
786.704 762.309 li
786.438 762.547 786.181 762.785 786 762.958 cv
785.956 762.996 li
788.09 761.133 mo
788.058 761.089 li
779.151 747.995 li
779.192 747.956 li
779.564 747.643 779.895 747.358 780.206 747.107 cv
780.247 747.069 li
780.289 747.109 li
788.932 760.477 li
788.878 760.505 li
788.641 760.697 788.392 760.89 788.133 761.095 cv
788.09 761.133 li
842.282 760.976 mo
842.24 760.914 li
841.978 760.712 841.716 760.498 841.44 760.298 cv
841.371 760.369 li
841.344 760.228 li
841.371 760.109 li
841.426 760.131 li
855.445 744.178 li
855.504 744.212 li
855.929 744.501 856.339 744.806 856.751 745.111 cv
856.897 745.096 li
856.839 745.169 li
856.794 745.24 li
842.282 760.976 li
790.355 759.413 mo
782.247 745.486 li
782.289 745.459 li
782.667 745.175 783.024 744.915 783.361 744.67 cv
783.424 744.65 li
783.434 744.683 li
791.251 758.805 li
791.196 758.833 li
791.185 758.834 li
790.9 759.031 790.639 759.216 790.41 759.373 cv
790.355 759.413 li
839.711 759.046 mo
839.656 759.011 li
839.328 758.792 839.042 758.595 838.771 758.41 cv
838.716 758.376 li
851.502 741.617 li
851.559 741.651 li
851.991 741.907 852.439 742.175 852.887 742.471 cv
852.944 742.505 li
852.916 742.574 li
839.711 759.046 li
792.745 757.839 mo
792.723 757.784 li
785.509 743.185 li
785.563 743.143 li
785.882 742.932 786.244 742.703 786.64 742.447 cv
786.63 742.426 li
786.748 742.399 li
786.769 742.453 li
793.672 757.28 li
793.617 757.32 li
793.352 757.472 793.086 757.623 792.789 757.801 cv
792.745 757.839 li
837.021 757.341 mo
836.953 757.309 li
836.684 757.151 836.4 756.982 836.049 756.793 cv
835.942 756.802 li
836.01 756.694 li
847.411 739.399 li
847.468 739.418 li
847.891 739.632 848.346 739.854 848.785 740.093 cv
848.871 739.964 li
848.871 740.122 li
848.956 740.112 li
837.021 757.341 li
795.24 756.415 mo
795.217 756.359 li
788.954 741.059 li
788.998 741.03 li
789.377 740.819 789.757 740.608 790.138 740.408 cv
790.138 740.397 li
790.235 740.349 li
790.267 740.402 li
796.213 755.916 li
796.112 755.973 li
795.843 756.102 795.564 756.245 795.295 756.387 cv
795.24 756.415 li
834.215 755.836 mo
834.147 755.816 li
833.908 755.696 833.601 755.544 833.282 755.393 cv
833.162 755.824 li
833.149 755.328 li
843.196 737.491 li
843.252 737.509 li
843.71 737.701 844.183 737.903 844.644 738.109 cv
844.77 738.093 li
834.215 755.836 li
797.89 755.138 mo
797.834 755.097 li
792.557 739.161 li
792.612 739.13 li
792.998 738.951 793.396 738.758 793.85 738.557 cv
793.916 738.536 li
798.852 754.717 li
798.727 754.8 li
798.727 754.776 li
798.467 754.883 798.195 755.003 797.901 755.137 cv
797.89 755.138 li
831.323 754.561 mo
831.204 754.521 li
831.204 754.509 li
830.942 754.405 830.639 754.294 830.285 754.161 cv
830.233 754.14 li
838.88 735.91 li
838.948 735.939 li
839.383 736.077 839.862 736.236 840.328 736.396 cv
840.451 736.445 li
840.409 736.554 li
831.337 754.56 li
831.323 754.549 li
831.323 754.561 li
800.551 754.071 mo
800.539 754.013 li
796.325 737.484 li
796.381 737.465 li
796.819 737.288 797.235 737.125 797.63 736.977 cv
797.63 736.719 li
797.754 737.019 li
801.594 753.71 li
801.537 753.727 li
801.192 753.844 800.871 753.958 800.608 754.054 cv
800.551 754.071 li
828.391 753.499 mo
828.313 753.469 li
828.014 753.383 827.69 753.287 827.327 753.183 cv
827.262 753.164 li
834.508 734.668 li
834.562 734.687 li
835.057 734.814 835.553 734.94 836.023 735.071 cv
836.09 735.139 li
828.391 753.499 li
803.339 753.159 mo
803.327 753.114 li
800.23 736.051 li
800.288 736.031 li
800.746 735.885 801.192 735.74 801.618 735.609 cv
801.686 735.599 li
801.698 735.645 li
804.408 752.864 li
804.338 752.895 li
803.989 752.989 803.675 753.067 803.397 753.154 cv
803.339 753.159 li
825.394 752.649 mo
825.329 752.642 li
824.971 752.564 824.637 752.483 824.318 752.414 cv
824.254 752.406 li
824.267 752.343 li
830.088 733.76 li
830.154 733.776 li
830.691 733.869 831.165 733.956 831.626 734.047 cv
831.706 734.036 li
831.679 734.116 li
825.394 752.649 li
831.548 734.083 mo
831.6 734.101 li
831.548 734.083 li
806.198 752.448 mo
806.198 752.388 li
804.257 734.87 li
804.314 734.862 li
804.793 734.735 805.237 734.624 805.682 734.526 cv
805.741 734.518 li
805.764 734.562 li
807.294 752.232 li
807.235 752.238 li
806.87 752.309 806.552 752.377 806.258 752.43 cv
806.198 752.448 li
822.36 752.065 mo
822.284 752.035 li
821.968 751.978 821.627 751.937 821.287 751.883 cv
821.224 751.877 li
821.237 751.814 li
825.663 733.181 li
825.727 733.198 li
826.255 733.238 826.732 733.298 827.198 733.347 cv
827.262 733.364 li
827.262 733.426 li
822.36 752.065 li
809.133 751.929 mo
808.384 733.964 li
808.443 733.955 li
808.895 733.868 809.372 733.788 809.837 733.71 cv
809.897 733.702 li
809.909 733.76 li
810.256 751.769 li
810.184 751.788 li
809.825 751.824 809.503 751.868 809.193 751.911 cv
809.133 751.929 li
819.331 751.665 mo
819.255 751.648 li
818.881 751.623 818.558 751.594 818.247 751.575 cv
818.184 751.569 li
821.262 732.922 li
821.324 732.924 li
821.754 732.939 822.221 732.961 822.791 732.981 cv
822.868 732.97 li
822.855 733.046 li
819.331 751.665 li
812.12 751.595 mo
812.605 733.33 li
812.665 733.321 li
813.126 733.268 813.612 733.223 814.087 733.18 cv
814.147 733.172 li
814.16 733.231 li
813.259 751.53 li
813.126 751.543 li
813.126 751.531 li
812.834 751.548 812.532 751.566 812.181 751.589 cv
812.12 751.595 li
816.218 751.493 mo
816.042 751.483 815.862 751.481 815.676 751.481 cv
815.621 751.481 815.566 751.482 815.51 751.482 cv
815.445 751.482 815.379 751.482 815.312 751.482 cv
815.278 751.482 815.245 751.482 815.211 751.482 cv
815.15 751.476 li
816.896 732.979 li
816.958 732.971 li
817.391 732.959 817.85 732.944 818.408 732.926 cv
818.483 732.928 li
818.483 732.989 li
816.292 751.485 li
816.218 751.493 li
f
824.715 815.854 mo
813.822 815.337 li
811.37 807.975 li
796.678 807.526 li
794.415 814.418 li
785.04 813.974 li
798.473 774.816 li
809.578 774.288 li
824.715 815.854 li
803.897 785.411 mo
799.13 800.106 li
808.831 800.23 li
803.897 785.411 li
f
840.559 816.604 mo
829.516 816.081 li
829.516 773.34 li
840.559 772.815 li
840.559 816.604 li
f
724.346 542.206 mo
722.77 532.768 li
718.568 532.481 714.535 531.686 710.736 530.431 cv
703.891 538.236 li
697.75 534.496 li
694.503 532.512 li
688.362 528.773 li
692.604 519.372 li
689.766 516.566 687.278 513.383 685.191 509.871 cv
675.768 512.603 li
673.442 505.479 li
672.209 501.706 li
669.882 494.582 li
678.328 488.821 li
678.103 486.711 677.988 484.551 677.996 482.348 cv
678.003 480.144 678.133 477.95 678.373 475.773 cv
669.958 472.388 li
672.335 464.601 li
673.595 460.478 li
675.972 452.691 li
685.386 452.769 li
687.498 448.665 690.011 444.778 692.871 441.167 cv
688.689 432.954 li
694.861 427.48 li
698.125 424.578 li
704.297 419.104 li
711.095 424.986 li
714.907 422.659 718.949 420.726 723.157 419.255 cv
724.799 409.362 li
744.05 406.65 li
745.625 416.088 li
749.828 416.375 753.861 417.17 757.66 418.425 cv
764.505 410.62 li
770.646 414.359 li
773.893 416.344 li
780.034 420.083 li
775.792 429.483 li
778.63 432.29 781.117 435.473 783.205 438.985 cv
792.628 436.253 li
794.954 443.377 li
796.187 447.149 li
798.513 454.274 li
790.068 460.034 li
790.293 462.145 790.408 464.305 790.401 466.508 cv
790.393 468.712 790.263 470.906 790.023 473.082 cv
798.438 476.468 li
796.061 484.255 li
794.801 488.378 li
792.424 496.165 li
783.01 496.087 li
780.898 500.191 778.385 504.078 775.525 507.689 cv
779.708 515.902 li
773.535 521.376 li
770.271 524.278 li
764.099 529.752 li
757.3 523.87 li
753.489 526.197 749.447 528.13 745.239 529.602 cv
743.597 539.494 li
724.346 542.206 li
739.182 437.47 mo
737.594 437.47 735.971 437.583 734.323 437.815 cv
714.697 440.581 698.737 459.211 698.668 479.435 cv
698.604 497.96 711.896 511.386 729.214 511.386 cv
730.802 511.386 732.425 511.273 734.073 511.041 cv
753.699 508.275 769.659 489.645 769.728 469.421 cv
769.792 450.896 756.499 437.47 739.182 437.47 cv
f
900.428 1593.35 mo
876.087 1589.91 li
874.011 1577.41 li
868.69 1575.55 863.579 1573.1 858.76 1570.16 cv
850.164 1577.6 li
842.36 1570.68 li
838.233 1567.01 li
830.429 1560.08 li
835.716 1549.7 li
832.1 1545.13 828.924 1540.22 826.253 1535.03 cv
814.349 1535.13 li
811.344 1525.28 li
809.751 1520.07 li
806.746 1510.22 li
817.385 1505.94 li
817.082 1503.19 816.917 1500.42 816.908 1497.63 cv
816.898 1494.85 817.045 1492.12 817.329 1489.45 cv
806.65 1482.16 li
809.591 1473.15 li
811.15 1468.38 li
814.091 1459.38 li
826.007 1462.83 li
828.645 1458.39 831.791 1454.37 835.38 1450.82 cv
830.016 1438.93 li
837.78 1434.2 li
841.886 1431.69 li
849.65 1426.97 li
858.306 1436.83 li
863.109 1435.25 868.209 1434.24 873.522 1433.88 cv
875.514 1421.95 li
899.855 1425.37 li
901.931 1437.88 li
905.113 1439 908.22 1440.32 911.234 1441.83 cv
911.234 1471.41 li
904.405 1466.16 896.386 1462.56 887.814 1461.35 cv
885.728 1461.06 883.678 1460.91 881.669 1460.91 cv
859.774 1460.91 842.966 1477.89 843.046 1501.31 cv
843.133 1526.89 863.314 1550.44 888.129 1553.94 cv
890.215 1554.23 892.265 1554.38 894.273 1554.38 cv
900.414 1554.38 906.154 1553.04 911.234 1550.6 cv
911.234 1575.29 li
911.234 1576.92 911.257 1578.55 911.304 1580.17 cv
908.423 1580.79 905.456 1581.2 902.42 1581.41 cv
900.428 1593.35 li
f
1670.38 1828.01 mo
944.025 1649.94 li
922.693 1645.52 911.234 1611.46 911.234 1575.29 cv
911.234 394.024 li
911.234 357.855 921.97 325.717 935.339 322.209 cv
1662.91 133.584 li
1703.44 124.736 1739.71 149.841 1739.71 197.624 cv
1739.71 1758.22 li
1739.71 1806 1710.91 1841.28 1670.38 1828.01 cv
.431373 .807843 .964706 rgb
f
1652.25 1787.09 mo
946.158 1627.82 li
932.292 1624.5 919.307 1602.39 919.307 1581.82 cv
919.307 387.212 li
919.307 366.373 925.847 349.036 934.518 346.886 cv
1636.25 173.401 li
1637.07 173.197 1705.58 152.387 1710.91 201.358 cv
1710.91 1754.98 li
1710.91 1778.49 1687.44 1798.15 1652.25 1787.09 cv
0 .215686 .623529 rgb
f
945.912 1534.12 mo
945.912 434.412 li
945.912 419.267 951.286 406.547 958.384 404.889 cv
1626.65 249.716 li
1645.85 244.187 1663.36 255.688 1663.36 273.379 cv
1663.36 1683.7 li
1663.36 1701.3 1647.98 1715.2 1622.38 1707.45 cv
965.357 1564.78 li
958.212 1563.23 945.912 1549.35 945.912 1534.12 cv
0 .305882 .878431 rgb
f
1586.45 1181.88 mo
1586.07 1181.88 1585.7 1181.87 1585.31 1181.85 cv
1007.4 1150.5 li
998.65 1150.02 991.596 1140.2 991.596 1128.55 cv
991.596 947.79 li
991.596 839.477 li
991.596 451.896 li
991.596 440.246 998.65 429.409 1007.4 427.683 cv
1585.31 313.618 li
1586.69 313.345 1588.05 313.214 1589.36 313.214 cv
1600.15 313.214 1608.39 322.083 1608.39 334.71 cv
1608.39 805.971 li
1608.39 893.015 li
1608.39 1157.45 li
1608.39 1171.19 1598.64 1181.88 1586.45 1181.88 cv
1046.25 1114.54 mo
1049.59 1116.23 1053.17 1117.54 1056.95 1118.42 cv
1058.41 1127.48 li
1076.44 1128.06 li
1078 1118.77 li
1082.11 1117.99 1086.11 1116.71 1089.92 1115 cv
1096.89 1121.89 li
1103.31 1117.39 li
1106.76 1114.96 li
1113.39 1110.32 li
1108.84 1101.36 li
1111.91 1098.05 1114.62 1094.38 1116.92 1090.41 cv
1127.45 1091.59 li
1130.14 1083.69 li
1131.57 1079.48 li
1134.28 1071.49 li
1124.65 1067.27 li
1124.91 1065.02 1125.05 1062.74 1125.05 1060.44 cv
1125.05 1058.15 1124.91 1055.89 1124.65 1053.68 cv
1134.28 1048.04 li
1131.57 1040.44 li
1130.14 1036.45 li
1127.45 1028.95 li
1116.92 1031.68 li
1114.62 1028.05 1111.91 1024.78 1108.84 1021.93 cv
1113.39 1012.29 li
1106.76 1008.63 li
1103.31 1006.71 li
1096.89 1003.16 li
1089.92 1011.08 li
1086.11 1009.93 1082.11 1009.25 1078 1009.07 cv
1076.44 1000.01 li
1058.41 1003.26 li
1056.95 1012.54 li
1053.17 1013.97 1049.59 1015.82 1046.25 1017.99 cv
1040.37 1012.72 li
1035.16 1017.74 li
1032.45 1020.36 li
1027.38 1025.24 li
1030.84 1032.57 li
1028.5 1035.73 1026.46 1039.13 1024.76 1042.69 cv
1017.26 1042.37 li
1015.42 1049.05 li
1014.45 1052.57 li
1012.63 1059.19 li
1019.21 1062.57 li
1019.03 1064.46 1018.93 1066.37 1018.93 1068.29 cv
1018.93 1070.21 1019.03 1072.1 1019.21 1073.96 cv
1012.63 1078.32 li
1014.45 1084.66 li
1015.42 1088.04 li
1017.26 1094.45 li
1024.76 1093.02 li
1026.46 1096.34 1028.5 1099.43 1030.84 1102.25 cv
1027.38 1110.08 li
1032.45 1114.21 li
1035.16 1116.44 li
1040.37 1120.68 li
1046.25 1114.54 li
1059.05 526.887 mo
1059.68 531.506 1060.81 539.874 1062.3 550.861 cv
1070.13 608.721 1087.75 739.16 1092.57 776.426 cv
1092.84 778.536 1093.07 780.348 1093.26 781.829 cv
1093.25 782.042 1093.23 782.253 1093.23 782.465 cv
1093.23 783.853 1093.42 785.201 1093.79 786.504 cv
1098.42 802.878 1131.69 811.716 1180.21 811.716 cv
1210.48 811.716 1246.67 808.282 1285.56 801.098 cv
1348.88 789.405 1405.06 770.419 1440.1 750.641 cv
1448.38 745.975 1455.48 741.262 1461.21 736.596 cv
1471.93 727.867 1477.89 719.288 1477.89 711.422 cv
1477.89 710.191 1477.73 709.007 1477.44 707.854 cv
1477.46 707.846 li
1453.98 450.261 li
1453.77 457.93 1448.1 466.243 1438.02 474.712 cv
1431.02 480.602 1421.88 486.562 1410.96 492.428 cv
1374.73 511.924 1318.89 530.431 1256.24 541.999 cv
1216.26 549.383 1179.04 552.914 1147.93 552.914 cv
1097.92 552.914 1063.69 543.792 1059.05 526.887 cv
1499 469.563 mo
1502.38 471.135 1506 472.329 1509.82 473.086 cv
1511.29 482 li
1529.37 482 li
1530.93 472.813 li
1535.02 471.92 1539 470.552 1542.79 468.762 cv
1549.68 475.311 li
1556.01 470.72 li
1559.41 468.254 li
1565.91 463.539 li
1561.45 454.919 li
1564.46 451.616 1567.13 447.976 1569.38 444.059 cv
1579.65 444.966 li
1582.26 437.241 li
1583.65 433.129 li
1586.28 425.322 li
1576.92 421.387 li
1577.17 419.197 1577.31 416.982 1577.31 414.751 cv
1577.31 412.52 1577.17 410.329 1576.92 408.184 cv
1586.28 402.586 li
1583.65 395.247 li
1582.26 391.382 li
1579.65 384.12 li
1569.38 386.851 li
1567.13 383.333 1564.46 380.167 1561.45 377.398 cv
1565.91 367.986 li
1559.41 364.426 li
1556.01 362.562 li
1549.68 359.095 li
1542.79 366.869 li
1539 365.751 1535.02 365.088 1530.93 364.922 cv
1529.37 356.011 li
1511.29 359.222 li
1509.82 368.398 li
1506 369.831 1502.38 371.668 1499 373.84 cv
1493.03 368.632 li
1487.73 373.637 li
1484.96 376.259 li
1479.79 381.144 li
1483.32 388.415 li
1480.93 391.589 1478.84 394.987 1477.1 398.563 cv
1469.4 398.32 li
1467.5 405.018 li
1466.5 408.55 li
1464.63 415.189 li
1471.41 418.469 li
1471.22 420.354 1471.12 422.258 1471.12 424.176 cv
1471.12 426.095 1471.22 427.981 1471.41 429.832 cv
1464.63 434.317 li
1466.5 440.623 li
1467.5 443.976 li
1469.4 450.338 li
1477.1 448.729 li
1478.84 451.995 1480.93 455.024 1483.32 457.771 cv
1479.79 465.67 li
1484.96 469.636 li
1487.73 471.766 li
1493.03 475.83 li
1499 469.563 li
1066.79 1099.47 mo
1049.2 1099.47 1035.77 1085.05 1035.77 1067.04 cv
1035.77 1048.86 1049.46 1032.32 1067.29 1029.96 cv
1068.74 1029.77 1070.17 1029.67 1071.59 1029.67 cv
1088.65 1029.67 1102.54 1043.33 1102.54 1062.11 cv
1102.54 1082.45 1086.25 1099.18 1067.29 1099.47 cv
1067.12 1099.47 1066.95 1099.47 1066.79 1099.47 cv
1518.91 454.12 mo
1501.58 454.12 1488.36 440.278 1488.36 422.646 cv
1488.36 404.575 1502.25 388.017 1520.21 385.543 cv
1521.75 385.332 1523.26 385.229 1524.76 385.229 cv
1541.65 385.229 1555.26 398.44 1555.26 416.708 cv
1555.26 436.587 1539.15 453.34 1520.21 454.094 cv
1519.77 454.111 1519.34 454.12 1518.91 454.12 cv
.215686 .556863 .921569 rgb
f
1076.44 1128.06 mo
1058.41 1127.48 li
1056.95 1118.42 li
1053.17 1117.54 1049.59 1116.23 1046.25 1114.54 cv
1040.37 1120.68 li
1035.16 1116.44 li
1032.45 1114.21 li
1027.38 1110.08 li
1030.84 1102.25 li
1028.5 1099.43 1026.46 1096.34 1024.76 1093.02 cv
1017.26 1094.45 li
1015.42 1088.04 li
1014.45 1084.66 li
1012.63 1078.32 li
1019.21 1073.96 li
1019.03 1072.1 1018.93 1070.21 1018.93 1068.29 cv
1018.93 1066.37 1019.03 1064.46 1019.21 1062.57 cv
1012.63 1059.19 li
1014.45 1052.57 li
1015.42 1049.05 li
1017.26 1042.37 li
1024.76 1042.69 li
1026.46 1039.13 1028.5 1035.73 1030.84 1032.57 cv
1027.38 1025.24 li
1032.45 1020.36 li
1035.16 1017.74 li
1040.37 1012.72 li
1046.25 1017.99 li
1049.59 1015.82 1053.17 1013.97 1056.95 1012.54 cv
1058.41 1003.26 li
1076.44 1000.01 li
1078 1009.07 li
1082.11 1009.25 1086.11 1009.93 1089.92 1011.08 cv
1096.89 1003.16 li
1103.31 1006.71 li
1106.76 1008.63 li
1113.39 1012.29 li
1108.84 1021.93 li
1111.91 1024.78 1114.62 1028.05 1116.92 1031.68 cv
1127.45 1028.95 li
1130.14 1036.45 li
1131.57 1040.44 li
1134.28 1048.04 li
1124.65 1053.68 li
1124.91 1055.89 1125.05 1058.15 1125.05 1060.44 cv
1125.05 1062.74 1124.91 1065.02 1124.65 1067.27 cv
1134.28 1071.49 li
1131.57 1079.48 li
1130.14 1083.69 li
1127.45 1091.59 li
1116.92 1090.41 li
1114.62 1094.38 1111.91 1098.05 1108.84 1101.36 cv
1113.39 1110.32 li
1106.76 1114.96 li
1103.31 1117.39 li
1096.89 1121.89 li
1089.92 1115 li
1086.11 1116.71 1082.11 1117.99 1078 1118.77 cv
1076.44 1128.06 li
1071.59 1029.67 mo
1070.17 1029.67 1068.74 1029.77 1067.29 1029.96 cv
1049.46 1032.32 1035.77 1048.86 1035.77 1067.04 cv
1035.77 1085.05 1049.2 1099.47 1066.79 1099.47 cv
1066.95 1099.47 1067.12 1099.47 1067.29 1099.47 cv
1086.25 1099.18 1102.54 1082.45 1102.54 1062.11 cv
1102.54 1043.33 1088.65 1029.67 1071.59 1029.67 cv
.32549 .682353 .945098 rgb
f
1529.37 482 mo
1511.29 482 li
1509.82 473.086 li
1506 472.329 1502.38 471.135 1499 469.563 cv
1493.03 475.83 li
1487.73 471.766 li
1484.96 469.636 li
1479.79 465.67 li
1483.32 457.771 li
1480.93 455.024 1478.84 451.995 1477.1 448.729 cv
1469.4 450.338 li
1467.5 443.976 li
1466.5 440.623 li
1464.63 434.317 li
1471.41 429.832 li
1471.22 427.981 1471.12 426.095 1471.12 424.176 cv
1471.12 422.258 1471.22 420.354 1471.41 418.469 cv
1464.63 415.189 li
1466.5 408.55 li
1467.5 405.018 li
1469.4 398.32 li
1477.1 398.563 li
1478.84 394.987 1480.93 391.589 1483.32 388.415 cv
1479.79 381.144 li
1484.96 376.259 li
1487.73 373.637 li
1493.03 368.632 li
1499 373.84 li
1502.38 371.668 1506 369.831 1509.82 368.398 cv
1511.29 359.222 li
1529.37 356.011 li
1530.93 364.922 li
1535.02 365.088 1539 365.751 1542.79 366.869 cv
1549.68 359.095 li
1556.01 362.562 li
1559.41 364.426 li
1565.91 367.986 li
1561.45 377.398 li
1564.46 380.167 1567.13 383.333 1569.38 386.851 cv
1579.65 384.12 li
1582.26 391.382 li
1583.65 395.247 li
1586.28 402.586 li
1576.92 408.184 li
1577.17 410.329 1577.31 412.52 1577.31 414.751 cv
1577.31 416.982 1577.17 419.197 1576.92 421.387 cv
1586.28 425.322 li
1583.65 433.129 li
1582.26 437.241 li
1579.65 444.966 li
1569.38 444.059 li
1567.13 447.976 1564.46 451.616 1561.45 454.919 cv
1565.91 463.539 li
1559.41 468.254 li
1556.01 470.72 li
1549.68 475.311 li
1542.79 468.762 li
1539 470.552 1535.02 471.92 1530.93 472.813 cv
1529.37 482 li
1524.76 385.229 mo
1523.26 385.229 1521.75 385.332 1520.21 385.543 cv
1502.25 388.017 1488.36 404.575 1488.36 422.646 cv
1488.36 440.278 1501.58 454.12 1518.91 454.12 cv
1519.34 454.12 1519.77 454.111 1520.21 454.094 cv
1539.15 453.34 1555.26 436.587 1555.26 416.708 cv
1555.26 398.44 1541.65 385.229 1524.76 385.229 cv
f
1589.21 1650.17 mo
1587.94 1650.17 1586.64 1650.05 1585.31 1649.79 cv
1007.4 1540.07 li
998.65 1538.41 991.596 1527.62 991.596 1515.98 cv
991.596 1226.91 li
991.596 1215.66 998.177 1206.95 1006.51 1206.95 cv
1006.8 1206.95 1007.1 1206.96 1007.4 1206.98 cv
1585.31 1249.69 li
1598.02 1250.63 1608.39 1262.88 1608.39 1277.05 cv
1608.39 1628.53 li
1608.39 1641.21 1600.08 1650.17 1589.21 1650.17 cv
1006.84 1217.38 mo
1002.65 1217.38 999.338 1221.75 999.338 1227.41 cv
999.338 1517.51 li
999.338 1523.39 1002.9 1528.81 1007.31 1529.63 cv
1585.45 1637.3 li
1586.1 1637.42 1586.75 1637.48 1587.37 1637.48 cv
1592.84 1637.48 1597.02 1632.97 1597.02 1626.6 cv
1597.02 1275.97 li
1597.02 1268.87 1591.83 1262.71 1585.45 1262.22 cv
1007.31 1217.39 li
1007.15 1217.38 1006.99 1217.38 1006.84 1217.38 cv
.215686 .556863 .921569 rgb
f
1587.37 1637.48 mo
1586.75 1637.48 1586.1 1637.42 1585.45 1637.3 cv
1007.31 1529.63 li
1002.9 1528.81 999.338 1523.39 999.338 1517.51 cv
999.338 1227.41 li
999.338 1221.75 1002.65 1217.38 1006.84 1217.38 cv
1006.99 1217.38 1007.15 1217.38 1007.31 1217.39 cv
1585.45 1262.22 li
1591.83 1262.71 1597.02 1268.87 1597.02 1275.97 cv
1597.02 1626.6 li
1597.02 1632.97 1592.84 1637.48 1587.37 1637.48 cv
1017.31 1490.24 mo
1017.31 1499.83 li
1571.13 1596.89 li
1571.13 1585.45 li
1017.31 1490.24 li
1017.31 1434.82 mo
1017.31 1444.41 li
1571.13 1530.82 li
1571.13 1519.39 li
1017.31 1434.82 li
1017.31 1379.4 mo
1017.31 1388.99 li
1571.13 1464.75 li
1571.13 1453.32 li
1017.31 1379.4 li
1017.31 1323.98 mo
1017.31 1333.57 li
1571.13 1398.69 li
1571.13 1387.26 li
1017.31 1323.98 li
1091.95 1256.49 mo
1082.97 1256.49 1075.85 1265.61 1075.85 1277.42 cv
1075.85 1289.74 1083.61 1300.63 1093.14 1301.62 cv
1547.83 1348.79 li
1548.55 1348.87 1549.26 1348.91 1549.96 1348.91 cv
1561.76 1348.91 1571.13 1338.62 1571.13 1325.04 cv
1571.13 1325.04 li
1571.13 1310.64 1560.6 1297.93 1547.83 1296.8 cv
1093.14 1256.55 li
1092.74 1256.51 1092.35 1256.49 1091.95 1256.49 cv
.32549 .682353 .945098 rgb
f
1017.31 1293.63 mo
1017.31 1249.95 li
1017.4 1249.84 li
1050.61 1252.78 li
1050.7 1252.91 li
1050.7 1297.09 li
1050.61 1297.21 li
1017.4 1293.76 li
1017.31 1293.63 li
cp
1 .54902 .666667 rgb
f
1549.96 1348.91 mo
1549.26 1348.91 1548.55 1348.87 1547.83 1348.79 cv
1093.14 1301.62 li
1083.61 1300.63 1075.85 1289.74 1075.85 1277.42 cv
1075.85 1265.61 1082.97 1256.49 1091.95 1256.49 cv
1092.35 1256.49 1092.74 1256.51 1093.14 1256.55 cv
1547.83 1296.8 li
1560.6 1297.93 1571.13 1310.64 1571.13 1325.04 cv
1571.13 1325.04 li
1571.13 1338.62 1561.76 1348.91 1549.96 1348.91 cv
.192157 .862745 .976471 rgb
f
1044.63 1284.12 mo
1037.29 1273.71 li
1044.63 1264.72 li
1041.24 1259.93 li
1033.91 1268.93 li
1026.62 1258.59 li
1023.26 1262.73 li
1030.54 1273.06 li
1023.26 1282 li
1026.62 1286.78 li
1033.91 1277.85 li
1041.24 1288.26 li
1044.63 1284.12 li
cp
1 .690196 .945098 rgb
f
1571.13 1398.69 mo
1017.31 1333.57 li
1017.31 1323.98 li
1571.13 1387.26 li
1571.13 1398.69 li
.866667 .937255 .988235 rgb
f
1571.13 1464.75 mo
1017.31 1388.99 li
1017.31 1379.4 li
1571.13 1453.32 li
1571.13 1464.75 li
f
1571.13 1530.82 mo
1017.31 1444.41 li
1017.31 1434.82 li
1571.13 1519.39 li
1571.13 1530.82 li
f
1571.13 1596.89 mo
1017.31 1499.83 li
1017.31 1490.24 li
1571.13 1585.45 li
1571.13 1596.89 li
f
1364.51 1686.54 mo
1151.21 1639.73 li
1124.79 1633.93 1103.67 1654.06 1103.77 1684.64 cv
1103.87 1715.22 1125.15 1745.17 1151.58 1751.62 cv
1364.9 1803.63 li
1394.19 1810.78 1418.11 1790.13 1418 1757.43 cv
1417.9 1724.74 1393.8 1692.97 1364.51 1686.54 cv
1 .54902 .666667 rgb
f
1186.53 1736.23 mo
1186.15 1736.23 1185.78 1736.18 1185.4 1736.09 cv
1183.98 1735.75 1182.57 1734.79 1181.48 1733.29 cv
1179.32 1730.29 1179.3 1726.25 1181.45 1724.27 cv
1200.21 1706.98 li
1181.31 1680.97 li
1179.15 1677.99 1179.13 1673.95 1181.28 1671.95 cv
1182.08 1671.2 1183.08 1670.84 1184.12 1670.84 cv
1185.87 1670.84 1187.75 1671.84 1189.11 1673.71 cv
1212.03 1705.18 li
1214.23 1708.2 1214.24 1712.26 1212.07 1714.26 cv
1189.31 1735.16 li
1188.52 1735.88 1187.55 1736.23 1186.53 1736.23 cv
1 .729412 .8 rgb
f
1225.5 1745.53 mo
1225.12 1745.53 1224.74 1745.48 1224.35 1745.39 cv
1222.91 1745.04 1221.47 1744.07 1220.37 1742.56 cv
1218.17 1739.52 1218.15 1735.45 1220.34 1733.46 cv
1239.41 1716.06 li
1220.19 1689.79 li
1217.99 1686.79 1217.98 1682.71 1220.16 1680.7 cv
1220.98 1679.94 1221.99 1679.58 1223.04 1679.58 cv
1224.82 1679.58 1226.74 1680.6 1228.12 1682.49 cv
1251.44 1714.27 li
1253.67 1717.32 1253.69 1721.42 1251.47 1723.43 cv
1228.33 1744.45 li
1227.52 1745.18 1226.54 1745.53 1225.5 1745.53 cv
1 .819608 .866667 rgb
f
1265.15 1754.99 mo
1264.76 1754.99 1264.36 1754.94 1263.96 1754.84 cv
1262.5 1754.5 1261.03 1753.51 1259.91 1751.98 cv
1257.67 1748.92 1257.66 1744.81 1259.88 1742.81 cv
1279.28 1725.3 li
1259.74 1698.77 li
1257.5 1695.73 1257.49 1691.63 1259.71 1689.6 cv
1260.54 1688.84 1261.56 1688.48 1262.63 1688.48 cv
1264.44 1688.48 1266.39 1689.51 1267.8 1691.42 cv
1291.52 1723.52 li
1293.79 1726.59 1293.8 1730.73 1291.55 1732.75 cv
1268.01 1753.91 li
1267.19 1754.64 1266.2 1754.99 1265.15 1754.99 cv
1 .909804 .933333 rgb
f
1304.26 1764.46 mo
1302.77 1764.11 1301.28 1763.11 1300.14 1761.57 cv
1297.86 1758.47 1297.85 1754.33 1300.11 1752.31 cv
1319.84 1734.69 li
1299.96 1707.9 li
1297.68 1704.83 1297.67 1700.69 1299.93 1698.65 cv
1302.19 1696.6 1305.88 1697.43 1308.16 1700.5 cv
1332.29 1732.92 li
1334.6 1736.03 1334.61 1740.2 1332.32 1742.24 cv
1308.37 1763.53 li
1307.24 1764.54 1305.75 1764.82 1304.26 1764.46 cv
cp
1 1 1 rgb
f
1631.46 1357.79 mo
1619.69 1361.17 1608.33 1346.71 1598.58 1325.7 cv
1588.83 1304.66 1580.69 1277.05 1575.42 1254.27 cv
1573.76 1247.08 1572.38 1240.38 1571.32 1234.51 cv
1568.92 1221.17 1568.2 1212.15 1569.6 1211.65 cv
1630.7 1203.28 li
1630.7 1203.28 1632.44 1209.89 1634.8 1220.38 cv
1635.71 1224.44 1636.72 1229.06 1637.75 1234.11 cv
1639.26 1241.48 1640.84 1249.74 1642.26 1258.41 cv
1649.2 1300.24 1653 1351.61 1631.46 1357.79 cv
cp
f
1642.26 1258.41 mo
1589.21 1256.22 li
1576.66 1246.81 li
1634.8 1220.38 li
1635.71 1224.44 1636.72 1229.06 1637.75 1234.11 cv
1639.26 1241.48 1640.84 1249.74 1642.26 1258.41 cv
cp
.815686 .890196 .94902 rgb
f
918.026 534.917 mo
873.02 570.968 li
872.745 571.188 li
872.745 571.188 872.713 571.133 872.667 571.015 cv
872.439 570.568 871.796 569.25 870.815 567.196 cv
868.596 562.553 864.651 554.139 860.017 543.575 cv
859.562 542.524 859.091 541.458 858.621 540.368 cv
858.284 539.583 857.939 538.784 857.586 537.976 cv
839.572 496.083 814.438 428.099 835.51 416.868 cv
852.457 407.842 878.43 446.395 896.758 481.826 cv
902.2 492.342 906.968 502.576 910.623 511.218 cv
916.292 524.597 919.296 534.141 918.026 534.917 cv
cp
1 1 1 rgb
f
918.026 534.917 mo
873.02 570.968 li
872.902 570.984 872.784 571 872.667 571.015 cv
860.809 572.693 844.709 570.725 855.194 543.748 cv
855.955 541.795 856.754 539.866 857.586 537.976 cv
869.216 511.493 887.3 491.275 896.758 481.826 cv
902.2 492.342 906.968 502.576 910.623 511.218 cv
916.292 524.597 919.296 534.141 918.026 534.917 cv
cp
.815686 .890196 .94902 rgb
f
872.784 564.6 mo
870.815 567.196 li
841.862 605.364 li
836.843 611.983 li
836.843 611.983 831.212 605.372 822.947 594.942 cv
822.327 594.166 821.7 593.365 821.049 592.55 cv
819.48 590.558 817.833 588.44 816.124 586.229 cv
787.947 549.731 743.058 485.511 761.738 468.557 cv
776.105 455.507 810.619 486.053 837.408 516.104 cv
845.148 524.777 852.237 533.419 858.017 540.948 cv
858.699 541.842 859.366 542.72 860.017 543.575 cv
868.683 555.103 873.835 563.526 872.784 564.6 cv
cp
1 1 1 rgb
f
872.784 564.6 mo
870.815 567.196 li
841.862 605.364 li
836.843 611.983 li
836.843 611.983 831.212 605.372 822.947 594.942 cv
822.327 594.166 821.7 593.365 821.049 592.55 cv
819.48 590.558 817.833 588.44 816.124 586.229 cv
818.398 553.684 831.51 526.746 837.408 516.104 cv
845.148 524.777 852.237 533.419 858.017 540.948 cv
858.699 541.842 859.366 542.72 860.017 543.575 cv
868.683 555.103 873.835 563.526 872.784 564.6 cv
cp
.815686 .890196 .94902 rgb
f
859.5 619.786 mo
841.823 676.579 li
841.823 676.579 837.917 674.352 831.51 670.494 cv
827.244 667.929 821.864 664.636 815.787 660.801 cv
813.355 659.271 810.823 657.648 808.195 655.946 cv
769.071 630.663 711.132 588.542 722.401 567.243 cv
730.581 551.778 766.216 564.067 799.099 580.661 cv
806.682 584.488 814.124 588.55 821.049 592.55 cv
821.817 592.989 822.578 593.428 823.331 593.867 cv
830.201 597.891 836.506 601.827 841.862 605.364 cv
844.607 607.184 847.108 608.901 849.304 610.477 cv
856.049 615.308 859.946 618.798 859.5 619.786 cv
cp
1 1 1 rgb
f
849.304 610.477 mo
845.995 628.679 839.698 657.727 831.51 670.494 cv
827.244 667.929 821.864 664.636 815.787 660.801 cv
813.355 659.271 810.823 657.648 808.195 655.946 cv
798.283 629.291 798.487 594.95 799.099 580.661 cv
806.682 584.488 814.124 588.55 821.049 592.55 cv
821.817 592.989 822.578 593.428 823.331 593.867 cv
830.201 597.891 836.506 601.827 841.862 605.364 cv
844.607 607.184 847.108 608.901 849.304 610.477 cv
cp
.815686 .890196 .94902 rgb
f
966.514 586.292 mo
965.26 602.039 964.075 613.002 964.052 613.646 cv
918.818 547.629 li
918.104 535.592 919.947 523.342 923.264 512.081 cv
933.201 478.375 956.358 453.57 963.605 470 cv
972.568 490.311 969.345 550.594 966.514 586.292 cv
cp
1 1 1 rgb
f
930.628 517.155 mo
929.22 515.448 927.033 513.551 923.772 512.283 cv
923.663 512.166 923.544 512.064 923.405 511.995 cv
920.269 510.426 910.858 511.21 910.858 511.21 cv
910.705 511.414 li
910.623 511.218 li
896.797 513.202 876.792 523.099 858.621 540.368 cv
858.425 540.556 858.221 540.752 858.017 540.948 cv
855.343 543.521 852.7 546.265 850.136 549.159 cv
840.498 560.021 830.279 574.842 823.331 593.867 cv
823.198 594.22 823.072 594.581 822.947 594.942 cv
816.493 613.073 813.019 634.953 815.787 660.801 cv
830.977 670.392 841.823 676.579 841.823 676.579 cv
859.5 619.786 li
860.095 618.476 853.053 612.767 841.862 605.364 cv
870.815 567.196 li
872.047 569.768 872.745 571.188 872.745 571.188 cv
918.026 534.917 li
918.725 534.49 918.128 531.406 916.508 526.495 cv
919.862 527.24 li
918.829 533.96 918.415 540.829 918.818 547.629 cv
964.052 613.646 li
964.075 613.002 965.26 602.039 966.514 586.292 cv
952.438 556.656 936.439 524.213 930.628 517.155 cv
cp
.678431 .796078 .890196 rgb
f
1187.69 870.384 mo
1187.31 870.133 1183.37 870.228 1176.68 870.118 cv
1150.35 869.67 1081.48 865.938 1020.12 824.539 cv
1001.29 811.842 983.171 795.593 967.205 774.803 cv
965.307 772.333 964.271 769.313 964.248 766.2 cv
964.248 766.004 li
964.177 753.872 964.75 722.362 989.068 693.604 cv
994.519 687.158 1004.32 686.774 1010.2 692.836 cv
1022.3 705.321 1045.21 727.569 1077.64 753.111 cv
1085.88 759.597 1094.73 766.302 1104.17 773.117 cv
1108.22 776.042 1112.4 778.983 1116.67 781.939 cv
1136.29 795.514 1158.19 809.317 1182.2 822.546 cv
1182.3 823.472 li
1182.86 828.318 li
1187.69 870.384 li
cp
1 1 1 rgb
f
1187.69 870.384 mo
1187.31 870.133 1183.37 870.228 1176.68 870.118 cv
1150.35 869.67 1081.48 865.938 1020.12 824.539 cv
1001.29 811.842 983.171 795.593 967.205 774.803 cv
965.307 772.333 964.271 769.313 964.248 766.2 cv
964.248 766.004 li
984.379 784.668 1054.93 841.478 1104.17 773.117 cv
1108.22 776.042 1112.4 778.983 1116.67 781.939 cv
1136.29 795.514 1158.19 809.317 1182.2 822.546 cv
1182.3 823.472 li
1182.86 828.318 li
1187.69 870.384 li
cp
.815686 .890196 .94902 rgb
f
1182.86 828.318 mo
1176.68 870.118 li
1169.16 869.992 1158.16 869.592 1144.85 868.125 cv
1111.6 864.463 1063.95 854.104 1020.12 824.539 cv
1045.64 827.495 1074.45 825.754 1099.64 811.716 cv
1112.23 804.698 1117.03 794.205 1116.67 781.939 cv
1124.46 787.327 1132.6 792.754 1141.1 798.157 cv
1154.01 806.384 1167.72 814.571 1182.2 822.546 cv
1182.3 823.472 li
1182.86 828.318 li
cp
.678431 .796078 .890196 rgb
f
1182.86 828.318 mo
1176.68 870.118 li
1169.16 869.992 1158.16 869.592 1144.85 868.125 cv
1127.83 841.203 1126.9 806.862 1126.9 806.862 cv
1141.1 798.157 li
1154.01 806.384 1167.72 814.571 1182.2 822.546 cv
1182.3 823.472 li
1182.86 828.318 li
cp
.560784 .745098 .890196 rgb
f
1440.19 1091.63 mo
1346.79 1121.81 1240.71 1119.37 1214.55 1118.21 cv
1211.02 1118.06 1208.09 1115.45 1207.52 1111.96 cv
1204.8 1095.18 li
1200.85 1070.92 li
1442.34 1037.95 li
1444.14 1065.36 li
1445.36 1084.03 li
1445.59 1087.45 1443.45 1090.58 1440.19 1091.63 cv
cp
.0784314 .156863 .301961 rgb
f
1444.14 1065.36 mo
1354.97 1103.58 1250.25 1099.43 1204.8 1095.18 cv
1200.85 1070.92 li
1442.34 1037.95 li
1444.14 1065.36 li
cp
.0627451 .12549 .239216 rgb
f
1470.53 1038.76 mo
1460.17 1043.71 1449.15 1048.09 1437.67 1051.95 cv
1426.19 1055.81 1414.28 1059.15 1402.14 1062.06 cv
1359.93 1072.14 1315.02 1076.83 1276.87 1078.85 cv
1270.63 1079.18 1264.57 1079.44 1258.73 1079.65 cv
1257.26 1079.7 1255.81 1079.75 1254.38 1079.79 cv
1249.09 1079.94 1244 1080.06 1239.14 1080.13 cv
1237.54 1080.16 1235.96 1080.18 1234.41 1080.2 cv
1231.28 1080.23 1228.25 1080.25 1225.34 1080.25 cv
1224.16 1080.25 1222.99 1080.25 1221.83 1080.24 cv
1221.41 1080.25 1220.99 1080.24 1220.56 1080.24 cv
1218.67 1080.23 1216.83 1080.23 1215.06 1080.21 cv
1208.65 1080.16 1203.02 1080.03 1198.31 1079.91 cv
1197.26 1079.87 1196.24 1079.84 1195.29 1079.81 cv
1187.78 1079.58 1181.56 1073.94 1180.55 1066.51 cv
1175.16 1026.57 li
1174.72 1023.29 li
1172.67 1008.15 li
1172.15 1004.26 li
1147.69 823.268 li
1147.28 820.209 li
1142.46 784.496 li
1142.03 781.375 li
1434.04 720.723 li
1435.7 735.208 li
1437.84 753.888 li
1449.62 856.519 li
1462.57 969.345 li
1470.53 1038.76 li
cp
1 1 1 rgb
f
1441.93 954.445 mo
1386.74 984.622 1300.65 1005.73 1290.64 1008.13 cv
1258.73 1079.65 li
1257.26 1079.7 1255.81 1079.75 1254.38 1079.79 cv
1287.85 1004.76 li
1288.8 1004.53 li
1289.73 1004.32 1382.15 982.661 1440.05 951.01 cv
1441.93 954.445 li
cp
.309804 .552941 .741176 rgb
f
1239.14 1080.13 mo
1237.54 1080.16 1235.96 1080.18 1234.41 1080.2 cv
1203.11 807.639 li
1207.78 807.105 li
1239.14 1080.13 li
cp
f
1462.57 969.345 mo
1451.47 974.372 1440.2 979.117 1429.05 983.547 cv
1417.63 988.088 1406.34 992.299 1395.48 996.158 cv
1371.53 759.526 li
1408.93 745.355 li
1435.7 735.208 li
1437.84 753.888 li
1449.62 856.519 li
1462.57 969.345 li
cp
.678431 .796078 .890196 rgb
f
1429.05 983.547 mo
1417.63 988.088 1406.34 992.299 1395.48 996.158 cv
1371.53 759.526 li
1408.93 745.355 li
1429.05 983.547 li
cp
.815686 .890196 .94902 rgb
f
1462.57 969.345 mo
1451.47 974.372 1440.2 979.117 1429.05 983.547 cv
1418.42 987.774 1407.91 991.711 1397.74 995.342 cv
1384.35 974.317 1373.94 955.135 1366.75 938.204 cv
1355.94 912.755 1352.3 892.562 1355.62 876.446 cv
1358.48 862.597 1366.66 851.979 1379.31 845.72 cv
1386.28 842.286 1393.94 840.537 1402.09 840.537 cv
1416.45 840.537 1432.33 876.227 1449.62 886.853 cv
1462.57 969.345 li
cp
.678431 .796078 .890196 rgb
f
1470.53 1038.76 mo
1460.17 1043.71 1449.15 1048.09 1437.67 1051.95 cv
1427.61 1038.88 1415 1021.73 1402.6 1002.85 cv
1400.93 1000.32 1399.32 997.82 1397.74 995.342 cv
1407.91 991.711 1418.42 987.774 1429.05 983.547 cv
1440.2 979.117 1451.47 974.372 1462.57 969.345 cv
1470.53 1038.76 li
cp
.282353 .505882 .678431 rgb
f
1437.67 1051.95 mo
1436.75 1052.25 1435.83 1052.56 1434.91 1052.86 cv
1434.77 1052.9 1434.63 1052.95 1434.49 1052.99 cv
1433.59 1053.29 1432.68 1053.58 1431.77 1053.87 cv
1431.28 1054.03 1430.8 1054.18 1430.3 1054.33 cv
1429.48 1054.59 1428.64 1054.85 1427.81 1055.1 cv
1426.75 1055.43 1425.69 1055.75 1424.63 1056.06 cv
1424.56 1056.08 li
1423.1 1056.52 1421.63 1056.94 1420.16 1057.36 cv
1418.67 1057.78 1417.18 1058.2 1415.69 1058.6 cv
1414.35 1058.97 1413 1059.33 1411.65 1059.67 cv
1410.69 1059.93 1409.73 1060.17 1408.76 1060.42 cv
1407.95 1060.63 1407.14 1060.83 1406.32 1061.04 cv
1404.93 1061.38 1403.54 1061.72 1402.14 1062.06 cv
1359.93 1072.14 1315.02 1076.83 1276.87 1078.85 cv
1286.86 1057.35 1299.05 1022.52 1299.05 1022.52 cv
1299.05 1022.52 1344.05 1014.43 1395.48 996.158 cv
1396.23 995.891 1396.98 995.625 1397.74 995.342 cv
1399.32 997.82 1400.93 1000.32 1402.6 1002.85 cv
1415 1021.73 1427.61 1038.88 1437.67 1051.95 cv
cp
.309804 .552941 .741176 rgb
f
1198.31 1079.91 mo
1197.26 1079.87 1196.24 1079.84 1195.29 1079.81 cv
1187.78 1079.58 1181.56 1073.94 1180.55 1066.51 cv
1147.69 823.268 li
1147.28 820.209 li
1151.5 820.382 1155.36 820.978 1159.46 820.978 cv
1160.66 820.978 1163.38 821.762 1164.26 823.464 cv
1198.31 1079.91 li
cp
.815686 .890196 .94902 rgb
f
1171.22 820.194 mo
1170.52 820.202 1164.85 823.331 1164.16 823.331 cv
1123.93 823.331 1090.37 817.622 1082.47 789.711 cv
1081.8 787.358 1081.47 784.919 1081.47 782.465 cv
1081.47 782.332 li
1081.44 782.167 li
1081.29 780.936 1081.11 779.524 1080.91 777.948 cv
1080.13 771.909 1079 763.4 1077.64 753.111 cv
1105.66 775.195 1140.79 799.733 1182.2 822.546 cv
1171.22 820.194 li
cp
.560784 .745098 .890196 rgb
f
987.908 673.74 mo
985.704 676.218 982.418 680.084 978.67 685.064 cv
968.302 698.843 954.445 721.1 950.461 745.708 cv
950.171 747.528 949.928 749.355 949.748 751.198 cv
949.301 755.77 944.713 758.703 940.36 757.236 cv
868.408 733.059 826.946 661.781 826.946 661.781 cv
814.415 557.833 910.442 512.104 920.763 524.636 cv
930.017 535.874 978.976 644.309 989.006 666.604 cv
990.08 668.996 989.649 671.78 987.908 673.74 cv
cp
1 1 1 rgb
f
1497.97 1213.65 mo
1497.97 1213.65 1494.81 1217.55 1488.46 1223.57 cv
1486.07 1225.82 1483.24 1228.37 1479.94 1231.13 cv
1475.51 1234.84 1470.27 1238.91 1464.19 1243.13 cv
1460.21 1245.89 1455.88 1248.7 1451.19 1251.52 cv
1419.82 1270.34 1380.61 1260.93 1387.89 1246.73 cv
1392.83 1237.12 1431.29 1203.13 1455.82 1182.21 cv
1467.51 1172.25 1476.03 1165.25 1476.28 1165.25 cv
1497.97 1213.65 li
cp
f
1445.7 883.716 mo
1445.7 911.435 1423.23 933.906 1395.51 933.906 cv
1367.79 933.906 1345.32 911.435 1345.32 883.716 cv
1345.32 855.997 1367.79 833.526 1395.51 833.526 cv
1423.23 833.526 1445.7 855.997 1445.7 883.716 cv
cp
.0784314 .156863 .301961 rgb
f
1580.58 1038.99 mo
1575.34 1048.53 1534.44 1057.77 1503.17 1063.56 cv
1493.5 1065.35 1484.76 1066.81 1478.27 1067.84 cv
1471.18 1068.96 1464.02 1066.22 1459.5 1060.63 cv
1430.62 1024.9 1329.25 892.79 1380.4 858.652 cv
1381.68 857.79 1383.05 856.998 1384.53 856.268 cv
1454.32 821.762 1589.21 1023.31 1580.58 1038.99 cv
cp
1 1 1 rgb
f
1543.73 1235.05 mo
1543.73 1235.05 1542.94 1244.35 1541.15 1258.25 cv
1539.9 1267.98 1538.17 1279.97 1535.87 1292.61 cv
1535.82 1292.88 1535.77 1293.15 1535.72 1293.42 cv
1528.17 1334.6 1514.67 1382.25 1492.75 1380.91 cv
1467.24 1379.35 1469.4 1305 1475.28 1258.73 cv
1475.6 1256.24 1475.92 1253.82 1476.26 1251.51 cv
1477.46 1243.23 1478.75 1236.19 1479.94 1231.13 cv
1481.25 1225.68 1482.45 1222.5 1483.34 1222.5 cv
1488.46 1223.57 li
1537.31 1233.71 li
1543.73 1235.05 li
cp
f
1543.73 1235.05 mo
1543.73 1235.05 1542.94 1244.35 1541.15 1258.25 cv
1539.9 1267.98 1538.17 1279.97 1535.87 1292.61 cv
1475.28 1258.73 li
1475.6 1256.24 1475.92 1253.82 1476.26 1251.51 cv
1477.46 1243.23 1478.75 1236.19 1479.94 1231.13 cv
1481.25 1225.68 1482.45 1222.5 1483.34 1222.5 cv
1488.46 1223.57 li
1537.31 1233.71 li
1543.73 1235.05 li
cp
.815686 .890196 .94902 rgb
f
1598.58 1325.7 mo
1596.26 1357.45 1589.55 1385.8 1573.16 1387.78 cv
1551.63 1390.39 1540.24 1337.85 1535.72 1293.42 cv
1534.83 1284.74 1534.21 1276.38 1533.82 1268.79 cv
1533.64 1265.15 1533.51 1261.7 1533.44 1258.48 cv
1533.08 1243.83 1533.79 1233.95 1535.32 1233.67 cv
1537.31 1233.71 li
1571.32 1234.51 li
1596.98 1235.12 li
1596.98 1235.12 1597.5 1240.41 1598.07 1249.02 cv
1598.68 1258.02 1599.34 1270.64 1599.57 1284.63 cv
1599.77 1297.73 1599.59 1312.03 1598.58 1325.7 cv
cp
1 1 1 rgb
f
1599.57 1284.63 mo
1533.82 1268.79 li
1533.64 1265.15 1533.51 1261.7 1533.44 1258.48 cv
1533.08 1243.83 1533.79 1233.95 1535.32 1233.67 cv
1537.31 1233.71 li
1571.32 1234.51 li
1596.98 1235.12 li
1596.98 1235.12 1597.5 1240.41 1598.07 1249.02 cv
1598.68 1258.02 1599.34 1270.64 1599.57 1284.63 cv
cp
.815686 .890196 .94902 rgb
f
1630.7 1203.28 mo
1569.6 1211.65 li
1568.2 1212.15 1568.92 1221.17 1571.32 1234.51 cv
1537.31 1233.71 li
1488.46 1223.57 li
1494.81 1217.55 1497.97 1213.65 1497.97 1213.65 cv
1476.28 1165.25 li
1476.03 1165.25 1467.51 1172.25 1455.82 1182.21 cv
1455.57 1190.09 1455.57 1197.28 1455.81 1203.78 cv
1456.51 1222.9 1459.19 1235.56 1464.19 1243.13 cv
1464.75 1244 1465.37 1244.8 1466 1245.55 cv
1468.65 1248.62 1471.98 1250.63 1475.42 1251.29 cv
1475.7 1251.37 1475.98 1251.44 1476.26 1251.51 cv
1493.54 1256.15 1511.8 1258.5 1530.58 1258.5 cv
1530.59 1258.5 li
1531.54 1258.5 1532.49 1258.49 1533.44 1258.48 cv
1536.04 1258.45 1538.61 1258.37 1541.15 1258.25 cv
1553.4 1257.7 1564.92 1256.22 1575.42 1254.27 cv
1583.65 1252.75 1591.25 1250.93 1598.07 1249.02 cv
1620.23 1242.86 1634.26 1235.87 1635.29 1235.35 cv
1637.75 1234.11 li
1634.04 1215.98 1630.7 1203.28 1630.7 1203.28 cv
cp
.678431 .796078 .890196 rgb
f
1629.99 1224.85 mo
1629.99 1224.85 1557.06 1261.71 1477.85 1239.75 cv
1477.85 1239.75 1468.19 1230.25 1464.52 1160.55 cv
1463.92 1149.03 1465.77 1134.82 1468.27 1121.71 cv
1472.24 1100.91 1477.85 1082.91 1477.85 1082.91 cv
1477.85 1082.91 1545.29 1053.89 1589.21 1069.58 cv
1589.21 1069.58 1590.41 1071.95 1592.4 1076.16 cv
1603.92 1100.4 1642.02 1185.41 1629.99 1224.85 cv
cp
1 1 1 rgb
f
1592.4 1076.16 mo
1525.97 1056.76 1487.25 1093.56 1468.27 1121.71 cv
1472.24 1100.91 1477.85 1082.91 1477.85 1082.91 cv
1477.85 1082.91 1545.29 1053.89 1589.21 1069.58 cv
1589.21 1069.58 1590.41 1071.95 1592.4 1076.16 cv
cp
.815686 .890196 .94902 rgb
f
1437.84 753.888 mo
1429.25 759.55 1418.93 765.181 1406.93 770.78 cv
1369.72 788.127 1320.41 803.004 1268.09 812.666 cv
1231.24 819.472 1195.43 823.189 1164.26 823.464 cv
1160.61 796.032 li
1142.46 784.496 li
1142.03 781.375 li
1434.04 720.723 li
1437.84 753.888 li
cp
.560784 .745098 .890196 rgb
f
1477.89 711.422 mo
1477.89 719.288 1471.93 727.867 1461.21 736.596 cv
1455.48 741.262 1448.38 745.975 1440.1 750.641 cv
1405.06 770.419 1348.88 789.405 1285.56 801.098 cv
1246.67 808.282 1210.48 811.716 1180.21 811.716 cv
1131.69 811.716 1098.42 802.878 1093.79 786.504 cv
1093.42 785.201 1093.23 783.853 1093.23 782.465 cv
1093.23 782.253 1093.25 782.042 1093.26 781.829 cv
1093.07 780.348 1092.84 778.536 1092.57 776.426 cv
1087.75 739.16 1070.13 608.721 1062.3 550.861 cv
1060.81 539.874 1059.68 531.506 1059.05 526.887 cv
1066.57 554.311 1151.98 561.251 1256.24 541.999 cv
1318.89 530.431 1374.73 511.924 1410.96 492.428 cv
1421.88 486.562 1431.02 480.602 1438.02 474.712 cv
1448.1 466.243 1453.77 457.93 1453.98 450.261 cv
1477.46 707.846 li
1477.44 707.854 li
1477.73 709.007 1477.89 710.191 1477.89 711.422 cv
1 1 1 rgb
f
1477.89 711.422 mo
1477.89 719.288 1471.93 727.867 1461.21 736.596 cv
1455.48 741.262 1448.38 745.975 1440.1 750.641 cv
1410.96 492.428 li
1421.88 486.562 1431.02 480.602 1438.02 474.712 cv
1448.1 466.243 1453.77 457.93 1453.98 450.261 cv
1477.46 707.846 li
1477.44 707.854 li
1477.73 709.007 1477.89 710.191 1477.89 711.422 cv
cp
.815686 .890196 .94902 rgb
f
1477.89 711.422 mo
1477.89 719.288 1471.93 727.867 1461.21 736.596 cv
1438.02 474.712 li
1448.1 466.243 1453.77 457.93 1453.98 450.261 cv
1477.46 707.846 li
1477.44 707.854 li
1477.73 709.007 1477.89 710.191 1477.89 711.422 cv
cp
.678431 .796078 .890196 rgb
f
1319.12 777.963 mo
1307.26 780.81 1295.08 783.391 1282.71 785.672 cv
1246.03 792.448 1210.59 796.032 1180.21 796.032 cv
1148.62 796.032 1121.03 790.393 1102.95 780.763 cv
1073.18 556.632 li
1078.31 559.354 1081.92 561.251 1082.17 561.322 cv
1099.09 566.153 1121.21 568.6 1147.93 568.6 cv
1181.05 568.6 1219.5 564.733 1259.09 557.424 cv
1267.4 555.895 1275.62 554.233 1283.76 552.453 cv
1297.58 549.425 1311.05 558.805 1312.98 572.834 cv
1337.49 751.081 li
1339.18 763.432 1331.25 775.062 1319.12 777.963 cv
.0784314 .156863 .301961 rgb
f
1307.58 625.613 mo
1277.04 595.365 1241.69 581.932 1212.92 576.206 cv
1228.41 574.38 1244.33 571.964 1260.44 568.992 cv
1268.71 567.47 1277.14 565.768 1285.49 563.941 cv
1286.38 563.746 1287.3 563.643 1288.2 563.643 cv
1294.39 563.643 1299.7 568.286 1300.55 574.434 cv
1307.58 625.613 li
f
1424.77 494.907 mo
1393.44 503.063 li
1359.39 510.965 1337.74 564.144 1344.15 624.129 cv
1350.56 684.115 1382.25 724.914 1416.3 717.012 cv
1447.62 708.856 li
1481.67 700.955 1503.32 647.775 1496.91 587.79 cv
1490.5 527.804 1458.81 487.005 1424.77 494.907 cv
cp
f
1446.82 701.324 mo
1443.56 702.076 1440.32 702.272 1437.11 701.944 cv
1411.32 699.337 1388.09 663.11 1382.88 614.257 cv
1377.07 559.854 1395.77 510.218 1424.74 502.655 cv
1425.01 502.577 1425.29 502.507 1425.57 502.444 cv
1455.01 495.607 1483.64 534.591 1489.51 589.511 cv
1495.38 644.431 1476.26 694.488 1446.82 701.324 cv
cp
.560784 .745098 .890196 rgb
f
1437.11 701.944 mo
1411.32 699.337 1388.09 663.11 1382.88 614.257 cv
1377.07 559.854 1395.77 510.218 1424.74 502.655 cv
1450.53 505.253 1473.76 541.496 1478.97 590.341 cv
1484.78 644.745 1466.07 694.373 1437.11 701.944 cv
cp
.278431 .509804 .690196 rgb
f
1200.8 989.76 mo
1221.29 987.043 li
1243.58 984.667 1257.45 954.346 1252.87 918.017 cv
1248.3 881.688 1227.26 855.091 1204.97 857.468 cv
1184.48 860.185 li
1162.19 862.562 1148.32 892.882 1152.9 929.212 cv
1157.47 965.541 1178.51 992.137 1200.8 989.76 cv
cp
.0784314 .156863 .301961 rgb
f
1185.05 864.747 mo
1187.18 864.522 1189.31 864.628 1191.42 865.046 cv
1208.35 868.386 1223.81 891.662 1227.53 921.249 cv
1231.68 954.198 1219.72 982.602 1200.76 985.127 cv
1200.59 985.154 1200.4 985.177 1200.22 985.195 cv
1180.95 987.253 1161.93 961.955 1157.74 928.693 cv
1153.55 895.432 1165.78 866.804 1185.05 864.747 cv
cp
.105882 .623529 .760784 rgb
f
1191.42 865.046 mo
1208.35 868.386 1223.81 891.662 1227.53 921.249 cv
1231.68 954.198 1219.72 982.602 1200.76 985.127 cv
1183.83 981.792 1168.37 958.506 1164.65 928.924 cv
1160.5 895.975 1172.46 867.576 1191.42 865.046 cv
cp
.207843 .792157 .94902 rgb
f
1196.91 926.736 mo
1191.36 932.19 li
1185.21 928 li
1184.3 918.654 li
1189.49 912.969 li
1195.95 916.842 li
1196.91 926.736 li
cp
1198.53 914.158 mo
1189.07 908.656 li
1181.66 916.963 li
1182.96 930.334 li
1191.78 936.503 li
1199.95 928.679 li
1198.53 914.158 li
cp
.0784314 .156863 .301961 rgb
f
1213.07 925.927 mo
1208.79 929.827 li
1208.29 924.763 li
1207.86 925.098 1207.36 925.31 1206.82 925.368 cv
1206.27 925.429 1205.73 925.319 1205.24 925.075 cv
1205.96 932.407 li
1200.99 936.935 li
1201.86 937.666 1202.52 938.87 1202.73 940.28 cv
1206.41 937.022 li
1207.09 944.038 li
1200 950.057 li
1195.46 946.726 li
1197.92 944.544 li
1197.07 943.834 1196.41 942.668 1196.18 941.31 cv
1192.57 944.607 li
1187.71 941.043 li
1187.73 941.22 li
1187.85 942.497 1187.58 943.655 1187.04 944.456 cv
1190.16 946.797 li
1186.62 950.026 li
1179.8 944.718 li
1179.2 938.564 li
1181.94 940.62 li
1181.98 939.368 1182.43 938.292 1183.11 937.675 cv
1178.8 934.517 li
1178.18 928.091 li
1177.85 928.391 1177.47 928.577 1177.06 928.623 cv
1176.65 928.667 1176.26 928.572 1175.9 928.367 cv
1176.32 932.696 li
1172.79 930.11 li
1171.79 919.827 li
1174.73 916.389 li
1175.18 920.988 li
1175.49 920.694 1175.86 920.5 1176.26 920.439 cv
1176.67 920.376 1177.08 920.459 1177.46 920.667 cv
1176.8 913.966 li
1180.39 909.768 li
1179.61 909.344 1178.97 908.413 1178.68 907.203 cv
1176.41 909.918 li
1175.81 903.765 li
1181.44 896.817 li
1185.51 899.043 li
1182.92 902.136 li
1183.6 902.778 1184.09 903.835 1184.21 905.112 cv
1184.22 905.29 li
1188.28 900.553 li
1192.44 902.826 li
1192.4 901.443 1192.81 900.137 1193.5 899.223 cv
1190.69 897.735 li
1194.48 893.307 li
1202.54 897.332 li
1203.22 904.347 li
1199.01 902.127 li
1199.08 903.556 1198.67 904.906 1197.95 905.842 cv
1203.67 908.966 li
1204.42 916.608 li
1204.85 916.243 1205.35 915.998 1205.9 915.914 cv
1206.44 915.832 1206.96 915.909 1207.45 916.123 cv
1206.93 910.741 li
1211.85 913.433 li
1213.07 925.927 li
cp
1206.47 906.061 mo
1205.32 894.269 li
1194.04 888.85 li
1187.86 896.239 li
1181.03 892.639 li
1173.36 902.309 li
1174.34 912.387 li
1169.46 918.225 li
1170.82 932.276 li
1176.71 936.696 li
1177.69 946.774 li
1187.03 954.205 li
1192.99 948.92 li
1200.44 954.514 li
1210.39 946.299 li
1209.24 934.507 li
1216.57 928.009 li
1214.86 910.489 li
1206.47 906.061 li
cp
f
1195.99 905.755 mo
1196.33 905.685 1196.64 905.516 1196.91 905.273 cv
1197.68 904.596 1198.14 903.341 1198.01 902.025 cv
1198 901.865 1197.97 901.711 1197.94 901.561 cv
1197.62 900.031 1196.53 899.06 1195.36 899.339 cv
1195.07 899.41 1194.79 899.558 1194.54 899.766 cv
1193.75 900.432 1193.26 901.716 1193.39 903.057 cv
1193.41 903.166 1193.42 903.271 1193.44 903.372 cv
1193.71 904.951 1194.8 906.003 1195.99 905.755 cv
cp
f
1206.04 917.298 mo
1205.46 917.382 1204.95 917.719 1204.57 918.213 cv
1204.05 918.905 1203.76 919.904 1203.87 920.969 cv
1203.97 922.035 1204.44 922.935 1205.09 923.472 cv
1205.55 923.854 1206.11 924.051 1206.69 923.984 cv
1207.25 923.919 1207.75 923.615 1208.13 923.151 cv
1208.71 922.463 1209.02 921.423 1208.92 920.308 cv
1208.81 919.193 1208.3 918.261 1207.61 917.738 cv
1207.14 917.382 1206.6 917.216 1206.04 917.298 cv
cp
f
1177.59 922.075 mo
1177.23 921.741 1176.81 921.574 1176.38 921.638 cv
1175.96 921.699 1175.59 921.966 1175.31 922.366 cv
1174.91 922.955 1174.69 923.833 1174.79 924.777 cv
1174.88 925.722 1175.25 926.522 1175.76 926.992 cv
1176.11 927.307 1176.52 927.473 1176.94 927.424 cv
1177.38 927.374 1177.76 927.101 1178.04 926.686 cv
1178.45 926.099 1178.66 925.224 1178.57 924.282 cv
1178.48 923.34 1178.1 922.542 1177.59 922.075 cv
cp
f
1181.63 908.745 mo
1182.51 908.562 1183.18 907.561 1183.34 906.324 cv
1183.39 905.997 1183.39 905.652 1183.36 905.302 cv
1183.26 904.25 1182.8 903.406 1182.2 902.997 cv
1181.85 902.761 1181.45 902.668 1181.04 902.766 cv
1179.95 903.028 1179.19 904.564 1179.35 906.199 cv
1179.37 906.376 li
1179.56 907.73 1180.34 908.706 1181.25 908.77 cv
1181.37 908.78 1181.5 908.771 1181.63 908.745 cv
cp
f
1200.08 937.76 mo
1199.77 937.594 1199.43 937.512 1199.08 937.531 cv
1197.88 937.599 1197.02 938.908 1197.06 940.517 cv
1197.06 940.62 1197.06 940.726 1197.08 940.835 cv
1197.1 941.049 li
1197.14 941.302 1197.2 941.545 1197.27 941.775 cv
1197.3 941.875 1197.34 941.971 1197.38 942.063 cv
1197.46 942.247 li
1197.55 942.433 li
1197.64 942.595 li
1197.66 942.625 li
1197.75 942.764 li
1197.84 942.896 li
1197.94 943.021 li
1198.04 943.142 li
1198.06 943.162 li
1198.18 943.289 li
1198.19 943.294 li
1198.34 943.426 li
1198.5 943.546 li
1198.6 943.624 1198.71 943.688 1198.82 943.742 cv
1198.82 943.745 li
1198.83 943.745 li
1199.11 943.883 1199.4 943.955 1199.71 943.947 cv
1200.9 943.916 1201.78 942.686 1201.79 941.111 cv
1201.79 940.957 1201.79 940.8 1201.77 940.641 cv
1201.64 939.324 1200.96 938.225 1200.08 937.76 cv
cp
f
1186.65 940.268 mo
1186.25 939.102 1185.41 938.301 1184.51 938.352 cv
1184.38 938.359 1184.26 938.383 1184.14 938.426 cv
1183.27 938.724 1182.69 939.877 1182.77 941.246 cv
1182.79 941.424 li
1182.94 943.059 1183.97 944.36 1185.09 944.331 cv
1185.51 944.319 1185.88 944.125 1186.18 943.805 cv
1186.68 943.25 1186.97 942.309 1186.86 941.256 cv
1186.83 940.909 1186.76 940.575 1186.65 940.268 cv
1186.65 940.268 li
cp
f
1058.5 522.84 mo
1058.5 522.84 1058.69 524.26 1059.05 526.887 cv
1058.68 525.585 1058.5 524.236 1058.5 522.84 cv
cp
1 1 1 rgb
f
1453.99 449.806 mo
1453.99 449.955 1453.99 450.112 1453.98 450.261 cv
1453.64 446.606 li
1453.88 447.641 1453.99 448.708 1453.99 449.806 cv
cp
f
1136.79 726.895 mo
1132.87 727.12 1129.96 729.836 1130.52 732.736 cv
1133.96 750.716 1148.93 763.817 1166.05 762.837 cv
1183.17 761.858 1196.55 747.135 1197.92 728.88 cv
1198.14 725.936 1194.94 723.568 1191.02 723.793 cv
1136.79 726.895 li
cp
.188235 .713726 .854902 rgb
f
1233.1 587.745 mo
1198.7 589.626 li
1193.51 589.91 1189.6 595.098 1190.14 600.974 cv
1197.85 685.113 li
1198.32 690.246 1202.34 694.058 1207 693.804 cv
1232.55 692.406 li
1237.21 692.151 1240.93 687.915 1241.02 682.752 cv
1242.46 598.112 li
1242.56 592.201 1238.29 587.46 1233.1 587.745 cv
cp
f
1115.69 594.702 mo
1093.04 595.941 li
1089.62 596.128 1087.28 600.956 1087.92 606.502 cv
1097.03 685.918 li
1097.58 690.762 1100.42 694.418 1103.49 694.25 cv
1120.32 693.33 li
1123.38 693.162 1125.64 689.227 1125.45 684.363 cv
1122.37 604.618 li
1122.16 599.048 1119.11 594.514 1115.69 594.702 cv
cp
f
1307.58 625.613 mo
1277.04 595.365 1241.69 581.932 1212.92 576.206 cv
1228.41 574.38 1244.33 571.964 1260.44 568.992 cv
1268.71 567.47 1277.14 565.768 1285.49 563.941 cv
1286.38 563.746 1287.3 563.643 1288.2 563.643 cv
1294.39 563.643 1299.7 568.286 1300.55 574.434 cv
1307.58 625.613 li
level3{
gsave
clp
[32.3235 -49.5082 49.5082 32.3235 1262.61 597.296 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~'IZZj.o6s3;ALoc(GSu-1KkVQ>T#M-)*21E4C]9oAK*mJ)ae?[7;X&8E#hPk*_UVt:3RdVH6?+5+]X"8
=+MPuK-OTT,@60O@#?7>N?r.t->&DfBpC#\QR?X=-ub\*EM"\%Tdk5].sRpAH`/KDX"Ah'/V1,YKX*7c
[4d?F0T3LsN4^m+^G1ke16]X3QGt_JaY]I01n;fJT$TBhdPmrO2l5+cVqO/2gc;In3j.F'Z/e!Pjug'9
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9
[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]
krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<4LOE9[HTf]krcB<
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.994652 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[32.3235 -49.5082 49.5082 32.3235 1262.61 597.296 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~',2,p'GM5q'GV>t'c%Q#()@Z$()Ic'(Dmu+(`4),(`=2/)&X;0)&aD3)B'M4)B0V7)]Th;*#oq<*$$%?
*?H7C*Zc@D*ZlIG+!;[K+<VdL+<_mO+X/*S+sJ3T+sJ6V,9nHZ,U=W\,U=Z^,pai`,pai`,palb-71)f
-RU;j-n$Jl-n$Mn.4H_r.Olnt.Olr!.k</%/1`>'/1`A)/M/S-/hSb//hSe10/#"50JG170JG170JG49
0ekC;0ekC<1,:U@1G^gC1G^gD1c.$H2)R6L2E!HO2E!HP2`EZT3&ilW3&ilX3B9)\3]];_3]];`4$,Mc
~>
<~-R^Dn.P!#".kE8)/h\k30JP:;1,C^C1c70M2`NcW3BB2_4$5Yh5!M7r5<qM#6:4+.6q'O67Rp!?8P2TI
8kVfN9hnGZ:Jakb;,U:j<)lq!<``@)=BSd1>$G39?!UcC?XI2K@:<VTA7T7_AS#IdBP;*oC2.O"Ci!s+
Df9T6E,]f;EcZ>EF`hkNGB\:WH$XgaI!g?jIXZcrJ:N3%JqJ`0KnY89LPL\AM2I4LMi3OQNK0'\OH>Te
P*1ulPa.N"QC!r*R$jA2R[]e:S=Q4BT:hjNTq\9VUSO]^V5C,fW2Q\qWiN2%XKAV-YHP18Z*CR>Za7$G
~>
<~9MJ8X:Jakb;,U=l<)lq!<``C+=^#!5>?kE=?!^lG?t!JQ@UinYA7]@bB4tsmBkhF!Ci+'-DfBZ8EH6,A
FEM_LG'A.TH$Xd`H[L3hIXcitJ:W9'JqJ]/Knb>;LPL\AM2@+JN/WaVO,oBaOcbfjPa%GuQBml)R@0M4
S"#q=SXuIGTV/!QU8+N[V5:&dVl-JmWN*#"XK8P,Y-5(6Z*CU?Za@-J[^NZS\@K2^]=Y_g]tV7r^qde&
_Sa:0`5T^8a2l?Dai_cLbKS2TcHjh`d*^7he'umte^i='f\"m2g=tB;h;-rFhr*GOio9"ZjQ5LckND'm
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
1453.64 446.606 mo
1453.64 446.583 li
1453.24 444.728 1452.49 442.967 1451.41 441.295 cv
1451.42 441.294 li
1435.74 412.559 li
1393.62 420.906 li
1358.05 417.797 1309.62 420.784 1256.25 430.639 cv
1196.06 441.755 1142.16 459.285 1105.89 477.929 cv
1064.03 486.225 li
1059.25 517.869 li
1058.77 519.552 1058.5 521.212 1058.5 522.84 cv
1058.5 522.84 1058.69 524.26 1059.05 526.887 cv
1066.57 554.311 1151.98 561.251 1256.25 541.999 cv
1364.92 521.938 1453.12 480.963 1453.98 450.261 cv
1453.64 446.606 li
cp
.490196 .67451 .8 rgb
f
1141.65 505.077 mo
1089.92 505.077 1067.08 494.928 1064.29 488.195 cv
1064.18 487.373 1064.09 486.712 1064.03 486.225 cv
1064.7 480.417 1075.96 465.619 1115.12 447.36 cv
1151.59 430.354 1200.24 415.712 1252.11 406.132 cv
1290.08 399.121 1326.79 395.415 1358.28 395.415 cv
1416.79 395.415 1433.9 407.677 1435.74 412.559 cv
1435.91 414.36 li
1435.15 420.534 1423.61 435.137 1384.31 453.376 cv
1347.9 470.279 1299.43 484.833 1247.84 494.356 cv
1209.86 501.37 1173.14 505.077 1141.65 505.077 cv
cp
.678431 .796078 .890196 rgb
f
1503.17 1063.56 mo
1493.5 1065.35 1484.76 1066.81 1478.27 1067.84 cv
1471.18 1068.96 1464.02 1066.22 1459.5 1060.63 cv
1430.62 1024.9 1329.25 892.79 1380.4 858.652 cv
1384.63 893.777 1405.08 993.021 1503.17 1063.56 cv
cp
.815686 .890196 .94902 rgb
f
1215.06 1080.21 mo
1208.65 1080.16 1203.02 1080.03 1198.31 1079.91 cv
1197.26 1079.87 1196.24 1079.84 1195.29 1079.81 cv
1187.78 1079.58 1181.56 1073.94 1180.55 1066.51 cv
1175.16 1026.57 li
1186.58 1032.88 li
1186.58 1032.88 1210.97 1071.86 1215.06 1080.21 cv
cp
.309804 .552941 .741176 rgb
f
1225.34 1080.25 mo
1224.16 1080.25 1222.99 1080.25 1221.83 1080.24 cv
1190.43 1018.16 li
1172.67 1008.15 li
1172.15 1004.26 li
1192.79 1015.9 li
1193.01 1016.33 li
1225.34 1080.25 li
cp
f
1510.79 1254.65 mo
1508.45 1254.39 1506.08 1155.84 1516.28 1125.26 cv
1516.28 1125.26 1560.98 1115.85 1595.48 1115.85 cv
1595.48 1115.85 1624.05 1175.04 1616.83 1233.67 cv
1616.83 1233.67 1579.8 1262.5 1510.79 1254.65 cv
cp
.678431 .796078 .890196 rgb
f
978.67 685.064 mo
968.302 698.843 954.445 721.1 950.461 745.708 cv
936.079 737.646 889.982 709.65 872.902 673.96 cv
874 671.976 889.057 613.873 925.052 594.699 cv
978.67 685.064 li
cp
f
677.889 1289.86 mo
678.652 1288.36 737.933 1185.58 751.849 1161.46 cv
753.531 1158.54 756.618 1157.21 759.197 1158.27 cv
782.778 1167.99 li
786.468 1169.52 787.689 1174.75 785.334 1178.96 cv
768.865 1208.39 712.857 1308.52 712.503 1309.53 cv
712.087 1310.71 677.889 1289.86 677.889 1289.86 cv
cp
0 0 0 rgb
f
701.896 1261.69 mo
701.674 1261.69 701.45 1261.63 701.244 1261.52 cv
700.613 1261.16 700.394 1260.35 700.755 1259.72 cv
755.603 1163.75 li
755.964 1163.12 756.768 1162.9 757.398 1163.26 cv
758.029 1163.62 758.248 1164.42 757.887 1165.05 cv
703.039 1261.03 li
702.796 1261.45 702.353 1261.69 701.896 1261.69 cv
cp
1 1 1 rgb
f
779.688 1180.33 mo
778.998 1181.67 777.807 1182.44 777.027 1182.04 cv
776.247 1181.64 776.174 1180.23 776.863 1178.88 cv
777.553 1177.53 778.744 1176.76 779.524 1177.16 cv
780.304 1177.56 780.377 1178.98 779.688 1180.33 cv
cp
f
641.905 1997 mo
459.705 1997 li
454.425 1832.19 li
424.595 1997 li
219.045 1997 li
226.315 1935.16 238.325 1825.57 248.135 1738.53 cv
250.015 1721.83 251.825 1705.96 253.495 1691.42 cv
254.795 1680.13 256.015 1669.63 257.125 1660.17 cv
260.845 1628.82 263.435 1608.81 264.085 1608.63 cv
274.965 1606.79 li
274.975 1606.79 li
344.775 1594.96 li
435.335 1579.63 li
454.575 1576.37 li
472.415 1573.35 li
550.615 1560.1 li
576.505 1555.72 li
621.435 1548.11 li
624.905 1624.12 li
625.725 1642.27 li
628.235 1697.17 li
641.905 1997 li
cp
0 0 0 rgb
f
859.113 1305.16 mo
859.113 1303.41 879.785 1279.73 880.413 1279.73 cv
881.04 1279.73 914.368 1273.59 927.524 1265.69 cv
940.68 1257.8 967.869 1225.35 967.869 1225.35 cv
967.869 1225.35 946.82 1185 925.77 1185 cv
904.721 1185 885.425 1202.55 870.515 1229.74 cv
855.605 1256.92 838.941 1274.47 838.941 1274.47 cv
859.113 1305.16 li
cp
1 .694118 .541176 rgb
f
940.81 1175.76 mo
939.999 1175.76 905.913 1202.54 900.232 1216.34 cv
894.551 1230.14 909.159 1228.51 918.086 1222.83 cv
927.014 1217.15 954.244 1194.34 954.606 1193.62 cv
955.418 1191.99 960.288 1184.63 954.606 1176.95 cv
948.926 1169.27 940.81 1175.76 940.81 1175.76 cv
cp
1 .745098 .615686 rgb
f
949.771 1192.66 mo
949.006 1192.66 916.876 1217.9 911.521 1230.91 cv
906.166 1243.92 919.936 1242.38 928.351 1237.03 cv
936.766 1231.67 962.384 1210.15 962.777 1209.49 cv
963.534 1208.23 968.132 1201.02 962.777 1193.78 cv
957.421 1186.54 949.771 1192.66 949.771 1192.66 cv
cp
f
955.678 1213.52 mo
955.044 1213.52 928.395 1234.46 923.954 1245.25 cv
919.512 1256.03 930.933 1254.76 937.913 1250.32 cv
944.892 1245.88 966.151 1228.03 966.465 1227.48 cv
967.712 1225.29 970.906 1220.45 966.465 1214.45 cv
962.023 1208.44 955.678 1213.52 955.678 1213.52 cv
cp
f
895.072 1185.88 mo
895.893 1184.24 895.893 1183.47 895.072 1182.62 cv
894.251 1181.78 955.826 1109.53 965.678 1106.25 cv
975.529 1102.96 981.276 1110.35 974.708 1121.02 cv
968.141 1131.7 922.892 1185.88 922.892 1185.88 cv
895.072 1185.88 li
cp
f
828.416 1253.42 mo
829.293 1250.79 861.745 1217.46 861.745 1214.83 cv
861.745 1212.19 877.532 1187.64 886.302 1181.5 cv
895.073 1175.36 924.016 1178.87 938.926 1177.11 cv
953.836 1175.36 945.065 1192.9 923.139 1198.16 cv
901.212 1203.42 899.458 1205.18 899.458 1205.18 cv
899.458 1205.18 902.089 1227.1 888.934 1237.63 cv
875.777 1248.15 870.515 1248.15 870.515 1248.15 cv
847.711 1279.73 li
828.416 1253.42 li
cp
f
927.526 1176.42 mo
918.74 1176.58 909.954 1176.73 901.168 1176.89 cv
899.477 1176.92 899.471 1179.55 901.168 1179.52 cv
909.954 1179.37 918.74 1179.21 927.526 1179.05 cv
929.217 1179.02 929.223 1176.39 927.526 1176.42 cv
cp
.901961 .643137 .45098 rgb
f
863.925 1310.71 mo
861.36 1314.56 857.564 1320.9 852.78 1328.99 cv
841.733 1296.02 823.872 1269.94 814.696 1257.89 cv
823.343 1249.58 829.101 1243.93 829.969 1242.79 cv
837.515 1232.98 868.453 1303.92 863.925 1310.71 cv
cp
.894118 .294118 .498039 rgb
f
444.156 813.608 mo
444.156 813.608 417.257 794.718 385.985 829.873 cv
354.713 865.027 360.445 895.299 372.362 918.377 cv
384.279 941.456 405.924 970.01 402.065 992.035 cv
398.206 1014.06 395.436 1013.92 395.436 1013.92 cv
395.436 1013.92 438.605 1028.26 464.162 982.869 cv
489.718 937.474 444.156 813.608 444.156 813.608 cv
cp
.231373 .0509804 .0509804 rgb
f
580.208 1689.32 mo
545.879 1703.73 504.254 1713.52 474.162 1719.37 cv
450.332 1724 433.738 1726.15 433.738 1726.15 cv
433.738 1726.15 435.439 1552.19 437.808 1387.72 cv
439.913 1241.21 442.543 1102.23 444.964 1100.5 cv
523.725 1044.05 554.772 1092.04 555.65 1096.2 cv
556.527 1100.37 584.593 1703.35 580.208 1689.32 cv
cp
1 1 1 rgb
f
474.162 1719.37 mo
450.332 1724 433.738 1726.15 433.738 1726.15 cv
433.738 1726.15 435.439 1552.19 437.808 1387.72 cv
456.542 1105.19 li
456.542 1105.19 478.468 1183.25 474.083 1434.09 cv
470.829 1620.1 472.881 1693.74 474.162 1719.37 cv
cp
.8 .8 .8 rgb
f
555.65 1660.37 mo
555.65 1660.6 555.65 1661.24 555.651 1662.22 cv
555.66 1670.68 556.807 1703.99 557.24 1716.29 cv
557.324 1718.67 559.577 1720.36 561.881 1719.77 cv
576.8 1715.96 624.854 1702.9 642.243 1688.61 cv
644.641 1686.64 645.886 1683.6 645.651 1680.5 cv
640.725 1615.64 li
555.65 1661.24 li
555.65 1660.37 li
cp
.894118 .294118 .498039 rgb
f
855.792 1331.69 mo
856.367 1333.35 856.174 1335.17 855.285 1336.68 cv
824.856 1388.27 763.049 1494.87 713.521 1526.18 cv
653.881 1563.9 619.675 1498.99 619.675 1498.99 cv
581.961 1132.38 li
522.892 1097.04 li
513.788 1053.45 li
513.788 1053.45 585.803 1083.32 601.257 1100.81 cv
616.711 1118.3 678.737 1377.99 678.737 1377.99 cv
678.737 1377.99 765.199 1296.89 807.513 1256.37 cv
810.141 1253.85 814.381 1254.24 816.51 1257.18 cv
827.502 1272.41 844.431 1299.01 855.792 1331.69 cv
cp
1 .54902 .666667 rgb
f
506.534 1091.16 mo
506.534 1091.16 541.443 1102.16 543.723 1232.16 cv
546.002 1362.17 553.019 1665.64 553.019 1665.64 cv
553.019 1665.64 619.696 1652.94 645.121 1629.47 cv
645.121 1629.47 608.388 1256.98 596.635 1144.17 cv
595.697 1135.17 590.182 1127.3 582.04 1123.34 cv
567.394 1116.23 538.844 1100.92 521.444 1093.79 cv
511.528 1089.73 506.534 1091.16 506.534 1091.16 cv
cp
1 .639216 .721569 rgb
f
229.382 1658.62 mo
220.591 1722.56 li
220.077 1726.29 222.195 1729.9 225.717 1731.25 cv
246.868 1739.38 323.19 1763.78 440.187 1746.48 cv
444.069 1745.91 446.993 1742.63 447.132 1738.71 cv
449.525 1670.9 li
229.382 1658.62 li
cp
.894118 .294118 .498039 rgb
f
778.994 1244.25 mo
776.494 1248.61 753.024 1281.36 753.024 1281.36 cv
753.024 1281.36 745.192 1288.36 745.095 1288.5 cv
745.042 1288.57 744.473 1289.51 743.499 1291.05 cv
742.841 1292.1 741.99 1293.43 740.991 1294.96 cv
738.438 1298.88 734.895 1304.11 730.975 1309.35 cv
725.791 1316.26 719.95 1323.17 714.836 1327.01 cv
712.03 1329.12 679.517 1334.43 679.517 1334.43 cv
637.638 1365.7 li
636.339 1362.78 li
613.703 1311.77 li
616.526 1309.59 652.6 1289.15 653.223 1287.27 cv
653.854 1285.4 670.939 1249.71 670.939 1249.71 cv
670.939 1249.71 687.823 1239.74 697.813 1237.87 cv
707.811 1236.02 707.715 1237.52 707.715 1237.52 cv
707.715 1237.52 694.971 1260.18 696.216 1259.56 cv
697.462 1258.93 730.273 1252.92 730.273 1252.92 cv
730.273 1252.92 744.963 1240.13 754.339 1233.9 cv
758.576 1231.09 761.777 1230.07 764.031 1229.78 cv
764.04 1229.78 li
765.364 1229.61 766.346 1229.7 767.013 1229.83 cv
767.732 1229.98 768.083 1230.18 768.083 1230.18 cv
768.083 1230.18 768.408 1230.11 768.951 1230.07 cv
769.293 1230.04 769.714 1230.02 770.206 1230.03 cv
771.67 1230.05 773.688 1230.35 775.529 1231.5 cv
776.187 1231.91 776.827 1232.44 777.397 1233.09 cv
777.608 1233.33 li
777.608 1233.33 778.02 1234.02 778.502 1235.12 cv
778.573 1235.29 778.643 1235.45 778.713 1235.64 cv
779.625 1237.94 780.555 1241.51 778.994 1244.25 cv
cp
1 .745098 .615686 rgb
f
730.975 1309.35 mo
725.791 1316.26 719.95 1323.17 714.836 1327.01 cv
712.03 1329.12 679.517 1334.43 679.517 1334.43 cv
637.638 1365.7 li
636.339 1362.78 li
638.093 1353.4 li
677.562 1323.58 li
677.562 1323.58 686.332 1325.33 706.504 1321.83 cv
715.503 1320.27 724.16 1314.85 730.975 1309.35 cv
cp
1 .694118 .541176 rgb
f
770.206 1230.03 mo
766.583 1234.52 762.97 1239.01 759.348 1243.5 cv
755.594 1248.16 751.831 1252.82 748.068 1257.49 cv
746.279 1259.71 744.49 1261.95 742.683 1264.17 cv
741.104 1266.1 739.438 1267.97 737.412 1269.46 cv
733.114 1272.61 727.343 1273.4 722.3 1274.66 cv
716.564 1276.1 710.828 1277.53 705.092 1278.96 cv
703.443 1279.37 702.75 1276.83 704.391 1276.42 cv
723.274 1271.7 li
728.282 1270.46 733.649 1269.61 737.535 1265.94 cv
739.429 1264.16 741.008 1262.07 742.63 1260.06 cv
748.139 1253.24 li
754.427 1245.43 760.725 1237.63 767.013 1229.83 cv
767.732 1229.98 768.083 1230.18 768.083 1230.18 cv
768.083 1230.18 768.408 1230.11 768.951 1230.07 cv
769.293 1230.04 769.714 1230.02 770.206 1230.03 cv
cp
.901961 .643137 .45098 rgb
f
778.713 1235.64 mo
775.266 1240 771.828 1244.36 768.381 1248.71 cv
764.513 1253.62 760.646 1258.52 756.769 1263.42 cv
753.208 1267.93 749.7 1272.54 745.507 1276.5 cv
737.833 1283.74 727.887 1288.18 717.397 1289.19 cv
715.713 1289.35 715.731 1286.72 717.397 1286.56 cv
723.09 1286.01 728.668 1284.34 733.729 1281.69 cv
738.43 1279.24 742.543 1275.96 746.165 1272.11 cv
750.086 1267.93 753.524 1263.32 757.067 1258.83 cv
763.847 1250.25 770.618 1241.66 777.397 1233.09 cv
777.608 1233.33 li
777.608 1233.33 778.02 1234.02 778.502 1235.12 cv
778.573 1235.29 778.643 1235.45 778.713 1235.64 cv
cp
f
743.499 1291.05 mo
742.841 1292.1 741.99 1293.43 740.991 1294.96 cv
735.438 1297.12 727.808 1299.97 724.502 1301.38 cv
722.958 1302.04 721.616 1299.77 723.168 1299.11 cv
727.721 1297.16 736.737 1293.73 743.499 1291.05 cv
cp
f
605.642 1305.16 mo
606.266 1303.92 624.597 1294.26 635.16 1288.77 cv
639.454 1286.54 644.737 1287.96 647.322 1292.05 cv
654.409 1303.27 667.091 1326.95 670.107 1356.71 cv
670.444 1360.03 668.995 1363.29 666.286 1365.24 cv
632.831 1389.36 li
605.642 1305.16 li
cp
.894118 .294118 .498039 rgb
f
518.813 1105.19 mo
521.355 1107.4 533.582 1063.08 513.48 1026.69 cv
493.378 990.297 470.479 1063.31 518.813 1105.19 cv
cp
1 .54902 .666667 rgb
f
421.459 1017.49 mo
421.459 1017.49 466.668 1007.32 513.79 1025.12 cv
511.025 1039.18 li
426.722 1031.52 li
421.459 1017.49 li
cp
.831373 .0784314 .352941 rgb
f
477.591 1129.75 mo
421.459 1126.24 403.041 1072.74 403.041 1072.74 cv
440.07 976.606 li
453.033 942.936 li
518.094 1003.45 li
518.094 1003.45 514.27 1022.58 511.025 1039.18 cv
508.63 1051.46 506.534 1062.35 506.534 1063.09 cv
523.198 1085.02 533.723 1133.26 477.591 1129.75 cv
cp
1 .745098 .615686 rgb
f
518.094 1003.45 mo
518.094 1003.45 514.27 1022.58 511.025 1039.18 cv
432.861 998.19 453.033 942.936 453.033 942.936 cv
518.094 1003.45 li
cp
1 .694118 .541176 rgb
f
246.964 1554.88 mo
246.945 1555 246.928 1555.11 246.917 1555.23 cv
246.608 1558.81 234.566 1632.5 228.505 1647.22 cv
222.366 1662.13 217.98 1667.39 221.489 1673.53 cv
224.965 1679.61 300.768 1730.47 447.191 1693.86 cv
449.604 1693.26 451.328 1691.14 451.4 1688.66 cv
452.858 1638.38 466.945 1149.14 464.016 1111.95 cv
461.245 1076.78 425.678 1079.51 418.378 1080.44 cv
417.544 1080.55 416.752 1080.85 416.05 1081.31 cv
316.478 1146.84 li
315.19 1147.69 314.314 1149.03 314.062 1150.55 cv
246.964 1554.88 li
cp
1 .639216 .721569 rgb
f
388.131 1072.74 mo
388.131 1072.74 380.392 1069.23 372.421 1072.74 cv
367.958 1078.88 li
367.958 1078.88 296.916 1110.46 282.883 1125.37 cv
268.85 1140.27 193.423 1410.41 196.054 1516.54 cv
198.685 1622.66 310.949 1615.64 342.523 1596.35 cv
374.098 1577.05 627.569 1416.55 638.971 1402.52 cv
650.373 1388.48 650.373 1326.21 599.503 1299.02 cv
596.872 1294.64 391.639 1394.62 346.032 1406.9 cv
300.424 1419.18 302.179 1458.65 302.179 1458.65 cv
302.179 1458.65 311.826 1413.92 351.294 1402.52 cv
351.294 1402.52 386.376 1299.02 381.114 1245.52 cv
375.852 1192.02 323.228 1156.06 323.228 1156.06 cv
420.554 1096.9 li
388.131 1072.74 li
cp
1 .54902 .666667 rgb
f
243.674 1289.52 mo
243.674 1289.52 286.83 1311.49 339.673 1311.83 cv
326.736 1358.66 li
326.736 1358.66 269.727 1367.43 232.891 1338.49 cv
243.674 1289.52 li
cp
.894118 .294118 .498039 rgb
f
321.255 1376.74 mo
318.439 1387.09 li
275.49 1385.51 239.188 1371.57 224.515 1365.11 cv
226.83 1354.43 li
226.83 1354.43 269.28 1376.39 321.255 1376.74 cv
cp
f
353.928 1403.83 mo
353.815 1403.83 353.702 1403.82 353.587 1403.81 cv
352.391 1403.62 351.572 1402.5 351.759 1401.3 cv
354.646 1382.8 359.352 1365.09 363.904 1347.96 cv
368.271 1331.52 372.788 1314.53 375.667 1296.91 cv
380.529 1267.17 381.567 1225 358.906 1193.01 cv
358.206 1192.02 358.439 1190.66 359.427 1189.96 cv
360.417 1189.26 361.784 1189.49 362.484 1190.48 cv
386.005 1223.68 384.989 1267.07 379.995 1297.62 cv
377.081 1315.45 372.537 1332.55 368.142 1349.08 cv
363.619 1366.1 358.943 1383.7 356.092 1401.98 cv
355.923 1403.06 354.99 1403.83 353.928 1403.83 cv
cp
f
299.644 1462.32 mo
299.658 1457.41 300.549 1452.52 302.072 1447.85 cv
303.626 1443.18 305.826 1438.75 308.483 1434.62 cv
313.84 1426.39 320.993 1419.39 329.05 1413.85 cv
337.122 1408.32 345.942 1404.06 354.902 1400.42 cv
363.859 1396.75 373.057 1393.75 382.021 1390.5 cv
399.988 1383.9 417.617 1376.33 435.148 1368.54 cv
452.67 1360.72 470.136 1352.74 487.655 1344.82 cv
488.758 1344.33 490.057 1344.82 490.556 1345.92 cv
491.054 1347.02 490.564 1348.32 489.461 1348.82 cv
489.454 1348.82 li
471.942 1356.68 454.511 1364.78 436.87 1372.45 cv
419.233 1380.12 401.482 1387.59 383.322 1394.09 cv
374.21 1397.33 365.106 1400.22 356.249 1403.76 cv
347.403 1407.28 338.787 1411.37 330.957 1416.65 cv
323.128 1421.88 316.179 1428.45 310.865 1436.21 cv
305.546 1443.92 301.956 1452.94 301.39 1462.37 cv
301.362 1462.85 300.949 1463.22 300.467 1463.19 cv
300.002 1463.16 299.644 1462.77 299.644 1462.32 cv
cp
f
577.127 904.836 mo
576.655 903.147 605.926 861.267 580.911 810.887 cv
544.72 821.006 li
577.127 904.836 li
cp
.231373 .0509804 .0509804 rgb
f
443.07 920.463 mo
443.802 922.283 427.202 893.026 409.664 905.215 cv
392.126 917.405 406.777 947.004 452.245 959.791 cv
460.683 980.199 li
460.683 980.199 495.226 1028.83 575.805 1010.85 cv
575.805 1010.85 592.162 994.435 580.678 894.737 cv
569.194 795.038 522.273 783.569 508.186 782.043 cv
494.099 780.518 389.369 787.035 443.07 920.463 cv
cp
1 .745098 .615686 rgb
f
436.727 914.647 mo
436.727 914.647 427.33 907.511 417.498 916.253 cv
408.176 924.542 424.657 948.084 444.831 946.711 cv
446.545 946.595 447.65 944.829 447.065 943.212 cv
436.727 914.647 li
cp
1 .694118 .541176 rgb
f
427.065 895.796 mo
426.904 895.705 427.125 896.545 427.629 898.05 cv
430.499 906.605 442.537 936.639 445.496 938.91 cv
448.974 941.58 446.091 890.45 447.137 890.17 cv
448.182 889.892 463.194 855.641 458.134 834.288 cv
458.134 834.288 491.668 869.536 554.582 843.749 cv
617.496 817.961 597.513 772.549 597.513 772.549 cv
597.513 772.549 585.856 786.232 535.596 749.791 cv
488.783 715.849 369.241 767.163 388.472 839.195 cv
407.702 911.228 427.065 895.796 427.065 895.796 cv
cp
.231373 .0509804 .0509804 rgb
f
523.867 895.856 mo
524.881 902.349 522.648 908.089 518.878 908.678 cv
515.108 909.267 511.23 904.481 510.216 897.989 cv
509.202 891.497 511.436 885.757 515.205 885.168 cv
518.975 884.579 522.853 889.364 523.867 895.856 cv
cp
f
577.491 888.413 mo
578.131 894.953 575.573 900.555 571.776 900.928 cv
567.979 901.3 564.381 896.3 563.74 889.761 cv
563.099 883.221 565.658 877.618 569.455 877.246 cv
573.252 876.874 576.85 881.874 577.491 888.413 cv
cp
f
532.105 960.331 mo
546.219 967.578 562.803 969.814 578.316 966.45 cv
579.474 966.199 580.427 965.373 580.319 964.082 cv
580.23 963.021 579.117 961.827 577.952 962.08 cv
563.122 965.295 547.502 963.308 533.996 956.374 cv
531.478 955.081 529.597 959.043 532.105 960.331 cv
cp
f
547.412 894.139 mo
548.168 902.773 552.367 911.02 559.032 916.592 cv
565.795 922.248 574.832 924.931 583.584 924.016 cv
582.805 923.152 582.026 922.289 581.247 921.425 cv
579.576 931.324 574.319 940.468 566.502 946.791 cv
564.32 948.556 566.82 952.162 569.022 950.38 cv
577.723 943.344 583.692 933.285 585.558 922.235 cv
585.79 920.859 584.662 919.495 583.22 919.646 cv
575.59 920.443 567.769 918.182 561.864 913.244 cv
556.069 908.399 552.44 901.282 551.782 893.774 cv
551.536 890.964 547.165 891.323 547.412 894.139 cv
cp
f
550.659 976.954 mo
552.822 977.091 554.986 977.229 557.15 977.366 cv
557.762 977.405 558.293 977.373 558.815 977.005 cv
559.247 976.702 559.635 976.146 559.71 975.616 cv
559.791 975.045 559.711 974.42 559.35 973.95 cv
559.026 973.53 558.515 973.09 557.96 973.055 cv
555.796 972.917 553.632 972.78 551.469 972.643 cv
550.857 972.604 550.326 972.637 549.803 973.004 cv
549.372 973.307 548.983 973.863 548.908 974.394 cv
548.828 974.963 548.908 975.589 549.269 976.059 cv
549.593 976.479 550.104 976.918 550.659 976.954 cv
cp
f
526.214 962.401 mo
528.404 962.362 530.542 961.316 531.997 959.696 cv
533.439 958.09 534.139 955.865 533.984 953.724 cv
533.901 952.58 532.783 951.571 531.617 951.721 cv
530.426 951.875 529.525 952.862 529.614 954.089 cv
529.631 954.322 529.635 954.554 529.627 954.787 cv
529.637 954.591 529.647 954.396 529.657 954.2 cv
529.629 954.735 529.534 955.256 529.374 955.767 cv
529.432 955.587 529.491 955.407 529.55 955.227 cv
529.381 955.735 529.152 956.213 528.862 956.664 cv
528.963 956.506 529.065 956.35 529.167 956.192 cv
528.903 956.585 528.601 956.94 528.255 957.262 cv
528.393 957.135 528.53 957.009 528.668 956.883 cv
528.286 957.226 527.87 957.514 527.417 957.754 cv
527.584 957.667 527.752 957.579 527.92 957.491 cv
527.463 957.723 526.987 957.897 526.488 958.015 cv
526.679 957.973 526.871 957.931 527.062 957.889 cv
526.662 957.976 526.259 958.023 525.849 958.031 cv
524.7 958.051 523.702 959.276 523.846 960.398 cv
524.006 961.642 524.983 962.423 526.214 962.401 cv
cp
f
523.487 875.166 mo
517.785 872.768 508.933 873.073 502.799 875.395 cv
500.016 876.299 497.25 877.749 494.625 879.069 cv
493.283 879.798 491.955 880.583 490.551 881.264 cv
490.243 881.432 489.875 880.804 490.129 880.52 cv
491.682 878.553 493.346 876.697 495.195 875.146 cv
498.249 872.488 501.775 870.459 505.348 868.887 cv
510.981 866.62 517.36 865.547 523.772 867.301 cv
524.159 867.424 524.578 867.554 525.004 867.746 cv
527.056 868.528 528.417 871.567 527.63 873.831 cv
526.987 875.755 525.132 876.353 523.487 875.166 cv
cp
f
562.808 864.59 mo
566.261 860.462 573.105 857.255 578.625 856.71 cv
581.076 856.345 583.714 856.42 586.197 856.446 cv
587.486 856.503 588.785 856.609 590.104 856.604 cv
590.401 856.617 590.449 855.975 590.151 855.848 cv
588.245 854.889 586.295 854.063 584.318 853.55 cv
581.016 852.626 577.585 852.387 574.289 852.529 cv
569.169 852.922 563.922 854.555 559.691 858.448 cv
559.443 858.697 559.172 858.963 558.919 859.282 cv
557.646 860.704 557.732 863.65 559.165 865.143 cv
560.363 866.423 561.994 866.175 562.808 864.59 cv
cp
f
463.656 1107.48 mo
459.478 1088.53 454.788 1053.45 421.459 1017.49 cv
421.459 1017.49 381.114 1025.38 384.623 1074.5 cv
384.623 1074.5 417.951 1110.46 460.05 1121.86 cv
463.445 1117.9 464.779 1112.58 463.656 1107.48 cv
cp
1 .54902 .666667 rgb
f
900.325 1205.96 mo
901.925 1205.82 903.525 1205.62 905.105 1205.36 cv
903.295 1207.22 901.655 1209.26 900.305 1211.46 cv
900.425 1209.63 900.435 1207.79 900.325 1205.96 cv
cp
959.205 1212.65 mo
959.005 1212.36 958.705 1212.13 958.375 1212.05 cv
957.995 1211.95 957.575 1212.04 957.215 1212.41 cv
957.115 1212.51 957.025 1212.61 956.925 1212.71 cv
950.735 1219.13 943.875 1224.87 936.455 1229.8 cv
936.445 1229.81 li
935.715 1230.3 934.975 1230.78 934.235 1231.25 cv
933.335 1231.82 932.405 1232.4 931.475 1232.96 cv
931.265 1232.96 931.045 1233.02 930.805 1233.15 cv
929.985 1233.64 929.185 1234.18 928.415 1234.77 cv
926.085 1236.1 923.705 1237.35 921.255 1238.4 cv
919.085 1239.33 916.475 1240.01 914.205 1239.01 cv
912.415 1238.23 911.455 1236.37 911.265 1234.5 cv
910.715 1229.26 915.225 1225.52 918.835 1222.5 cv
918.965 1222.36 li
920.635 1221.46 922.275 1220.51 923.905 1219.52 cv
929.445 1216.11 934.685 1212.19 939.535 1207.86 cv
942.515 1205.19 945.345 1202.36 947.995 1199.38 cv
948.295 1199.05 948.595 1198.71 948.885 1198.37 cv
950.835 1196.14 952.685 1193.83 954.455 1191.45 cv
954.725 1191.09 954.755 1190.72 954.635 1190.42 cv
954.325 1189.58 952.895 1189.14 952.175 1190.13 cv
951.715 1190.75 951.245 1191.37 950.765 1191.98 cv
949.575 1193.51 948.345 1195.01 947.055 1196.48 cv
941.075 1203.38 934.185 1209.49 926.635 1214.61 cv
924.655 1215.95 922.625 1217.23 920.565 1218.44 cv
917.575 1220.19 914.505 1221.8 911.355 1223.24 cv
908.805 1224.41 905.235 1226.36 902.435 1224.98 cv
900.045 1223.82 899.525 1220.73 900.055 1218.39 cv
900.805 1215.02 903.035 1211.85 905.205 1209.23 cv
906.685 1207.43 908.345 1205.8 910.135 1204.32 cv
911.055 1204.09 911.975 1203.85 912.885 1203.58 cv
913.215 1203.48 913.445 1203.29 913.595 1203.07 cv
916.965 1202.39 920.325 1201.71 923.695 1201.03 cv
927.465 1200.27 931.325 1199.67 935.005 1198.52 cv
938.105 1197.55 941.395 1195.83 943.765 1193.4 cv
945.905 1191.22 947.305 1188.46 947.155 1185.17 cv
947.095 1183.9 946.805 1182.63 946.275 1181.47 cv
945.495 1179.68 944.165 1178.16 942.345 1177.29 cv
940.825 1176.56 939.485 1178.83 941.015 1179.56 cv
943.235 1180.62 944.465 1182.9 944.535 1185.32 cv
944.535 1185.47 li
944.555 1187.87 943.385 1190.03 941.755 1191.73 cv
941.585 1191.91 941.405 1192.08 941.225 1192.25 cv
938.935 1194.37 935.975 1195.55 932.995 1196.36 cv
929.705 1197.25 926.335 1197.82 922.995 1198.49 cv
916.365 1199.83 li
912.125 1200.69 li
910.985 1200.92 li
910.645 1200.99 910.405 1201.15 910.255 1201.36 cv
909.855 1201.16 li
909.585 1201.36 909.315 1201.57 909.055 1201.79 cv
908.875 1201.93 li
908.425 1202.04 907.965 1202.14 907.515 1202.24 cv
904.725 1202.85 901.885 1203.25 899.035 1203.46 cv
898.385 1203.5 897.835 1203.94 897.735 1204.57 cv
897.665 1204.74 897.625 1204.94 897.645 1205.17 cv
898.645 1217.79 893.735 1230.27 884.295 1238.73 cv
881.825 1240.95 879.085 1242.83 876.155 1244.38 cv
875.295 1244.83 875.365 1245.77 875.855 1246.34 cv
876.235 1246.77 876.835 1246.99 877.475 1246.65 cv
882.085 1244.21 886.185 1240.94 889.595 1237.08 cv
893.145 1233.06 895.955 1228.38 897.805 1223.31 cv
897.845 1223.42 li
897.945 1223.68 898.045 1223.94 898.165 1224.19 cv
899.635 1227.14 902.705 1228.38 905.865 1227.93 cv
907.745 1227.67 909.575 1226.98 911.355 1226.18 cv
909.915 1228.08 908.865 1230.22 908.635 1232.72 cv
908.185 1237.58 911.265 1241.88 916.315 1242.12 cv
918.845 1242.23 921.245 1241.31 923.495 1240.24 cv
923.275 1240.61 923.065 1240.97 922.855 1241.35 cv
921.225 1244.4 919.905 1248.42 921.455 1251.77 cv
923.195 1255.52 927.575 1255.54 931.025 1254.53 cv
935.025 1253.36 938.915 1251.57 942.505 1249.47 cv
946.575 1247.1 950.325 1244.21 953.675 1240.91 cv
954.485 1240.11 953.925 1239.02 953.095 1238.74 cv
952.685 1238.6 952.215 1238.66 951.815 1239.05 cv
946.745 1244.04 940.695 1248.06 934.065 1250.68 cv
931.555 1251.67 927.235 1253.74 924.715 1251.8 cv
922.645 1250.2 923.325 1246.97 924.215 1244.67 cv
924.245 1244.6 li
924.385 1244.23 924.535 1243.89 924.675 1243.58 cv
925.675 1241.45 927.075 1239.54 928.785 1237.95 cv
929.265 1237.49 929.775 1237.06 930.305 1236.66 cv
930.705 1236.43 931.125 1236.21 931.515 1235.98 cv
936.255 1233.22 940.815 1230.14 945.155 1226.79 cv
950.095 1222.96 954.745 1218.78 959.075 1214.27 cv
959.565 1213.75 959.515 1213.12 959.205 1212.65 cv
cp
.901961 .643137 .45098 rgb
f
525.177 890.413 mo
525.078 888.721 523.625 887.429 521.933 887.529 cv
520.24 887.628 518.949 889.081 519.048 890.773 cv
519.147 892.465 520.6 893.757 522.292 893.658 cv
523.985 893.558 525.276 892.105 525.177 890.413 cv
cp
1 1 1 rgb
f
577.63 881.851 mo
577.628 880.397 576.449 879.221 574.996 879.223 cv
573.542 879.225 572.366 880.404 572.368 881.857 cv
572.37 883.311 573.55 884.487 575.003 884.485 cv
576.456 884.483 577.632 883.304 577.63 881.851 cv
cp
f
1827.92 227.078 mo
1577.21 292.6 li
1558.75 297.424 1544.13 319.089 1544.13 341.099 cv
1544.13 451.82 li
1544.13 464.025 li
1544.13 537.483 li
1544.13 551.626 1561.22 557.932 1571.23 547.477 cv
1597.71 500 li
1827.92 470.026 li
1853.99 466.917 1875.71 442.336 1875.71 415.21 cv
1875.71 263.708 li
1875.71 236.581 1853.99 220.267 1827.92 227.078 cv
cp
.815686 .890196 .94902 rgb
f
1531.71 535 mo
1550.61 549.993 li
1606.41 488.048 li
1864.05 234.737 li
1841.19 217.196 li
1531.71 535 li
cp
f
1809.5 213.003 mo
1558.79 278.524 li
1540.33 283.349 1525.71 305.014 1525.71 327.023 cv
1525.71 437.746 li
1525.71 449.95 li
1525.71 523.408 li
1525.71 537.551 1543.71 542 1549.71 528 cv
1574.71 485 li
1809.5 455.951 li
1835.57 452.842 1857.28 428.261 1857.28 401.135 cv
1857.28 249.632 li
1857.28 222.506 1835.57 206.191 1809.5 213.003 cv
cp
1 1 1 rgb
f
494.303 643.484 mo
190.197 643.484 li
164.846 643.484 144.295 622.933 144.295 597.582 cv
144.295 464.245 li
144.295 438.894 164.846 418.342 190.197 418.342 cv
494.303 418.342 li
519.654 418.342 540.205 438.894 540.205 464.245 cv
540.205 597.582 li
540.205 622.933 519.654 643.484 494.303 643.484 cv
cp
.0784314 .156863 .301961 rgb
f
359.695 629.353 mo
411.917 681.574 li
421.009 690.666 436.555 684.226 436.555 671.368 cv
436.555 601.854 li
359.695 629.353 li
cp
f
253.043 530.913 mo
253.043 544.286 242.202 555.126 228.83 555.126 cv
215.457 555.126 204.616 544.286 204.616 530.913 cv
204.616 517.541 215.457 506.7 228.83 506.7 cv
242.202 506.7 253.043 517.541 253.043 530.913 cv
cp
1 1 1 rgb
f
328.657 530.913 mo
328.657 544.286 317.816 555.126 304.443 555.126 cv
291.07 555.126 280.23 544.286 280.23 530.913 cv
280.23 517.541 291.07 506.7 304.443 506.7 cv
317.816 506.7 328.657 517.541 328.657 530.913 cv
cp
f
404.27 530.913 mo
404.27 544.286 393.43 555.126 380.057 555.126 cv
366.684 555.126 355.843 544.286 355.843 530.913 cv
355.843 517.541 366.684 506.7 380.057 506.7 cv
393.43 506.7 404.27 517.541 404.27 530.913 cv
cp
f
479.884 530.913 mo
479.884 544.286 469.043 555.126 455.67 555.126 cv
442.298 555.126 431.457 544.286 431.457 530.913 cv
431.457 517.541 442.298 506.7 455.67 506.7 cv
469.043 506.7 479.884 517.541 479.884 530.913 cv
cp
f
1574.09 331.22 mo
1807.09 276.017 li
1810.31 275.253 1812.31 272.02 1811.54 268.795 cv
1810.78 265.571 1807.55 263.576 1804.32 264.34 cv
1571.32 319.543 li
1568.1 320.307 1566.1 323.54 1566.87 326.765 cv
1567.63 329.989 1570.86 331.984 1574.09 331.22 cv
.431373 .807843 .964706 rgb
f
1573.83 384.584 mo
1806.83 339.973 li
1810.09 339.35 1812.22 336.206 1811.6 332.952 cv
1810.97 329.697 1807.83 327.564 1804.58 328.187 cv
1571.58 372.798 li
1568.32 373.421 1566.19 376.565 1566.81 379.819 cv
1567.44 383.074 1570.58 385.207 1573.83 384.584 cv
f
1573.57 437.937 mo
1806.57 403.919 li
1809.85 403.44 1812.12 400.394 1811.64 397.115 cv
1811.16 393.836 1808.12 391.566 1804.84 392.045 cv
1571.84 426.063 li
1568.56 426.542 1566.29 429.588 1566.77 432.867 cv
1567.25 436.146 1570.29 438.416 1573.57 437.937 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.6
%%For: (Lenovo) ()
%%Title: (Chatgpt-Illustration-syahrul.eps)
%%CreationDate: 3/28/2023 4:04 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i6ELFhI=S1UC]K^q#QWDYR,.ZF`7R)?NX\A[Wm_TI>/%Spk.N'p3k36cp^?WnLrJqF'n%EV;7COV')f
%<rU45gqWgMc0):fr9""Gs7>iOmH/&,gWGNSANuJV5P^L-q6-uOp$1l#FjT1'Qf!2dlHT35^3fbJe^n.m]`$jW]<?^5oC1KNDf5RF
%`Gb*%05gdX='p@Fp0Vb+^Nf;>TC&/\5B!/WJ,R?ekAT7+q;V@tI_/HZ53'b7qmDu+(Vn@]pWrj:9,%:#ebf+7*-Q0=r[5JW`VoUu
%-G>skhtjQ!g8H;tqdI[][WM,)?i=,Fp#['?QKl,ns0M]'>i>Xl8c8(Ec$kMan+!meHFloKfQ4MDC>[a\Q+L=7ifmVc\\-T5Brj,c
%q8qOolIBfZJ,TB&MtaF4^A4E!h;+^lHFmP!qW`c`@INf/4b3M%k4-td^A-iKpNl4rj!afprD.?Rq7ln9P-9/^DE$#8DuS.n1mT7J
%5>1eO3:+PTn8l;m2c]VJjY%]qO/rHWmA;f=FnQKs#<.1o-[\I,inqEFnuFEM]RRm$PAHoI2S6a']mbqSCaef2I9-5FRJT].gOAb#
%IB.h<1!!]"bNi70qX^3VqWc&_YMT(W\pO2Nf<>3])`&J"pre0WX)G^sp$QbU]RFd9[So*7$\/!Go2f;OdiB6Lrl#6TXj\fkDa36"
%?G-0[X7nLmhL=u(3oT6\A)67M^A7=Q?MsL37Xb!"r:O-phYbXQs3=.5fr4SP-Q=`tLi,`K#pX4dqsVN/m*2,BoNJPM;i\JrF8[/i
%+>+Hhl5a1'9:H]HrU0>s?GH=3NX9FE[eZ0``Oj`o+#BeWS"[TAn_8'[1ZON\]=#TSpTNFAl_OI3_dB"thKJd_^W*sZ^%qTbm?d%$
%YOV;BLAW![OC,[!NW8_I_Va#m^A5q/L4[bNlE-WHq@,(TkpLtWhi5s2q8G;db?qo/qor2lroP<[Ieq/^mQQ-t&$KmMiq8dB2u;VF
%J,@]aT2>7@h>;\MqsL*Dl^r\+lG]GuDI:'UlDMDWU;-]j=79Mqe'lLOoS6]H^V>*jrp;cdPb6k2ofr@-qgtk6Mr"<U],*-fNU?U(
%k.=mFHKAGF^R`QOnaCZ^ht2gir,Da/T=t&e='rW=l?$GTpKarsb:d27H1>c0>4g7XfPb(uY9'%KJZmr1h06H-%IUF$=a63IVu4gB
%:;?X#[sITDT56rBp#bkLf@BQeG]LHVADcL+%kkZliq76H^%glb?GF.`J+q4>s)dikDr6#KY5XR@Y</;)a'[fLmkfWGqrL&TrSmM%
%?`r.R-,6fAr;,LkYC?H)YM[+kDS:qLs6e-=^JXlUp_J=odha\QWcPo+e,SmMgH+Y1GHtTT8%QmI?a=6,G)tsmepUg$s22H:-U7M+
%[40%4RJ?gE0u*_>(T+J;iq5P6NerX*rl<W/b]LAjof')3^H1N>gFp<nTmQCsIsUY8/'aYEo%1o.gLmstS_(!9rTr!/d`q`[o=FXR
%G:u.0D9LqbDgq8dDr//%d[#F@\EG8>]?j'e[OgU2qp.M*jR5>3jT#)KPPaMRgI'tmoT8ktp8Rb"p=UPa_m%I7\9k`8G^+K,nGI9Q
%9TS;?4mnC0EBMOe48[et5!D0:cgspsH$oU-H^:8bB>m(-=aS_l%K"pD]=6,HZNhKDm+J`.q"&mNa8Sg4am7h(s*jgdPM_o1h>Ha%
%?XD'^s,;/J>b;7L55g/\Ec98\q8)ZFroqaPq_\1Lqqqo=s!5>-p@t.">YP/\fULb_hUu,j=\DG(O)F?::ZJ?V94duGqeV>J_fJ"l
%SRu_aDkB+,fuY#tp=ZRedIPijT7164JNhcTTCZJ5m;VuIB:in1ESp5/q_\1Lqq)edKfs2,nSlNDiP,nicf=k'TBH(+-i_hAm#uQ\
%qq/;nN)]bo:Y\b?Y3Qscn'-pB2=u+P<R^o$5PC&^D)cA,gRd@ATB`#oFal@GBA@Y/g$^EjPe5.(Bg0QZla01]\Y"*>a"5@nk0?2.
%<r8,Lk(Z+O[?(%E@GHo(m`$)lR'/C$-mRIoN=DH8+8^JYrQbE7hYQ*rXaB<3kJ$?0XZN0B&,(Tr^U'-u^$]_jHePrWZ_?r?f5J!T
%B&ZiqBrU4&f`8>G\(ABq_`m2ue-9-ik*jG6q`J%@UQK1,`GS^[W?p:Hfq>etQQK:ihQoqR[u3HD.!Np"Q*#\IZ.AHR_<56IR*>?/
%qo9c->0HoR2Tk_Z)a1Y@g'Fg6G+&O5mJa*aafECPgBVSM6&Tomp:%el[G>_megk&3D241[h_S"6ZlgIF/rBaTCT_EEZ=dsr`4!U[
%6$q=EZBmqJg?$tePqAK-D7B?]PLJ7Z!ABN%`asBcZ.=p.IHE,?k-5^$oTRhJ[?P,Q9\HMD0g-WL]eot"ceNF8<9ja0O7JUGoF+[M
%-K9G_o;7O<9eBL,R7baRD5J4*[C86pfV$\dgSaU@E"RQ_/uhE9a&M:<l4`EE];7_YD^=TUk__H:$0_]D$e,JZ+OC;jhKkE-CpU\E
%E-Gri"EPpEj'Wk^Z.Eh^=>)nEIlk]#Z<gN1@EdJ>k=EWA\%_\1'5Q%_I=fl&>@[P?>X-l>Sf#p7RS-BKP%s;E)p>q]f#D9\A$kVD
%>5$E@o'U@aX\#+jA_!sWBPc:d.bZa_UIpZT>tkKKgCF+ZD=,.tHgB5%m**p+IJ!+ms0F5)ci9_0rTeI,j&sOh;qIqLcb;SkI>2$I
%XNt.D]Ci^AT83)b4FNg'O"ZE7`TO/=3<%+e;bisr5&G`Ap$)8(prC/0oU5#d[m"SI8It.Y\3A56++)"=#TO:u4Q,a:3IU2h[.W,4
%A#$31cT$@8qV84!4[,bb<Bh8f0D3Z\?F]b'Icdc$]`"k>;tnkQoCk.[N]6$g-%C^8ceA>SoE5]%OeD`HgOR*dZcsi\XCa6r)Jn%W
%K2/a#[5hlW_Ih\H%]X'!J4$AO6>4;TEtm?ucK6VcMas8Kcg,WkFG\7A9P*4uh.F-qKJofPZ'mi.XG7\cgkI+]-_$F)>k`F,m_Q=#
%cEtOmFo/ND3<q0;9KZkI._5^FZ?9SrD8#+YnRsG.XWKI&'0Dr@b(?,OVNpWm<b\X%%pZT9NTXQePBBj`b)Y"fk=RXK<P.;frrCNk
%FPV"5NC7!EQj.A3DYg2"eXu,$oqct4rMX%%+0#RrIi,*2F6^6*)D-80IAS&aJ#Tp,=82&/oof/B4f&'Sn$$`3rREjl)>20`T;Y90
%+6j=.KmH)aTO(G:W!B'qebX*/DgAb&>$Z!J(0>j`[2W=RmAs?s2E#n-g/op895WC_F&0F=R9>`XnhP&HfS/.mF4s6/DsPrKX]t?U
%1;+*B(hW(T*ld720sV8UHLWfZD4Q'=QXN$\DuSh(qfd-m[bJN->Bp6og>XufnC7VB2[a)4)*fHeqL$c#RlPDh&MpQkT^f?1FHQI(
%q%Rsp^oFkj[mmIs@5ActcRm\u*V\Zpg\K.PmmPsurpaqB_\N*Y@F+c:%cmR)hZ0JM/\K*ro@[.!DO\lVF#'shhPRsS_gfsD8#@:k
%%0eKTPDu1AqrlHs]RX0"Vt2:,HkY]"`2S&[>Hpt@o_Y2_Nqr\;rieJ6[k9^a^b=PnnbLGi2da<i%iesC6M9EA?e3+s#P2-rG-3->
%XX>2ph]A_s[)+r3.mAa>MEgViX^eIrnN$VNrU9%;')q[`[O*ls5(5iiRM-^11%aHG?j>ma(`C\V=+0kff;[,MdXr([K/Wa8$UOqf
%ruKfh]!!d#B3K6<4DDITGLCZ]Fn1C#CH?`Il"o"#p]!EpH7jisY5$Kp//ON>C(;<IhdQ.?/CT4n(j=(.8^#)_Jf*0XXNa%i1PF^0
%`e#lKh2o?Y%/R6$IKE1&$t^'r3!1'0$e2]')?;[=_FY5TfZ-ITWI4gfKK,RDF7Z=sn3bQXJ<.;GGr,R0";;b?!,QW;cLFYrQr&?Z
%%-@t&a$.ohT!j`'#7/ImHiXbnmCf:DgBe<gJcg%8jlYD5)N]Se6\Q"f[\7<Y/Y@AO<1U_>aU\<ZCuC)0g;%S4*u8fP%$?;lDn/#T
%gd.l+FjCJFZ1*L==G&`pBCpe,1@3uq@cm^i,Q-Hs:[N.;c+0+]lapU!]1dtJBJ:uImQ-!k[sYo,2PuNtor/=Kc^2C-$o0RuGO:9V
%_%1F"53##Ol"XXESfk\d'6JH=d6/NDWBS&XhEU&a`ifPp@<?.nqTmsM+2cU4*.GKsO7)T-2MqUn!\cG0BLCdkqUP-4ch60Ors3_C
%Y'GKB%j9';&"kG_'D<3fD,NKOHNWab078"kAlEfF_8(STr8'I)].i-P48fts+]q1gMrAEFp#PJ[KJaeDo\#sF2RPEVesV$:Y'tsI
%I+s/.5+FjCe=;hoVk<;9.3I9m!4E5N?!CuXRL&*6DYr(,]:lW)44mU3$tJraKhZQYm%tkD&XdJb[l/2e[BY_C81L9M_'P<lj/7q9
%f&k@>h>d41?$G.;Ws):3(.CiAE[Zor^;-?&^;9HJQ+-3Vf4b]_I<pbmHmq5k?%Of;T>-dW`?/mMk0Q36gL_quCq5"ePJ3s2qI+2S
%qfp1rHQ$o;,j!D%g"@G7Ck'CRG&rtPp33#V+&8?thmP;Yb.Yo'P%qLJV6JEpo$@p7V/Lou4fG^&qMRt/;EE=UTpT(Bnal+CS/t!)
%?Y6(Do^i0d&*q<i*E*@eHniqLj#DJ2C&5PVqWMjp!-@4,KkFm[o^hV9qg@!OIcr3WG[0imYib6DJ9qdA-Qo$;i.FmO"aj^J4a2+n
%7\R@H)Mcc^WIT>eJj!26k7%!Q?ljY7;p6W@Ae<sICsPlGcH!bl-h,D!gp*^Afs^rs=H`*t+O>Xb@R5ktklRm4G#gRo(0mTi+`OP=
%r'Z'pTA_]a*UUFb&*V,u_0V"nUJ3VW0XQKtR)`Vu*J!JT!T<h@>6*9Mn*Y&h*.ZkcoZ5&R]1SF_UQD%k`r&,04u*D_^4aQ(&]!fC
%ff]B'ba^lt<:AWR_)jS:%f#J^M9->PT(T@V),K5?USl$%3;P[^HS@FX*_2h-PY.Te!NNnQ?c<F8lhS^TZbAJneT4M,qYgnX?YA+`
%_,]g%_GK0uVZ;&KYkg(foa7ik:]9^qMV^Dg(OGEHUF)`0Qh?VUAcEV*m6)5hpB&(\/FAd1HWW)SkN_ND5(8:erjQ5(A*3+q/ST"E
%>t1AjnS(PVUL:h%"cP>&"DJ!tZ3-nc2Reu(cWlfH9OU=TMa)E!C8^JH-tQndfVefn"ZYd-TdTn<e&DG3.)8VjNEP^7N+^_VKUnFP
%o8HGi4^FOCqk;DPJA%V?QJZ8ISAN@>Ie%J/Ka<ZiacUK3*O-A+D>Z#n`Nb`@mt.uM4+&Egjc$W%PsC0/PA(.l,#AVt4X5Li:Ef6"
%J_ar820Ii>!UMn&Ye*7K8/sl;qj]Pub@&c6:2mQ;fN1<2eW5.O8*[.5]<b9H1E'lZ\C*Oc[L@7Ygm$CZX1\FZ`9[4^0AqlaW@[&.
%TC]<pr_SrYIFP*-5NNp"QV6rF4'_)E'\cl]O#Y`HMqtf:^ted;VT$#Vi7JbtY.=S'rU9@P9X$H0X6%(q!@IXh$d0mnpR^L`r:5_M
%*k:=f_C_Cs"SLMW!ofQm:Dfra=mm/iH+1(](S:FW(ub3-feu.%)9eMqe@'c&g[5mkimVsE+%IEepSgB!0'saO9Dd2KjS<DQ%V4Xi
%4_(ABA=cq*L=s`,o22Oe`USD31=V?^1hEOQ:0Kgd)V3U;FN<io[NedCWns/J4IK7KTS.&!.Q25(keK?4)Zc;[#2c28SJ>N/G<>\r
%iAUnc=ZEtd=b)NMh--X95[.*Yp>HNKLi5eh-0PE7rnr]_Mrqd5k)]Q=LQ:$Wd1JI3!a:@0^;B^->C`(s'Q\bU@ZIPYa#haM;B2;.
%^"om^8aVRq;4,<?^kd$WL`nHfq9_"EShYDj"MDl*4r/U#:Sr0YXQT&>IJ+f!UcuP.DJ%iko.8ZYk2H#4VJ,fK=7jC(d:44lAkmNA
%7m;.Wc1%$H?bQ7I@_8Q&'k'!EAX=D&,KkDp=i2p\-BuAD*f,1@.!W@"CEGr,MEPf^&?3?r=]up!S)=#UC$=C,C0-q#V,8FTBoH;9
%Oe$glA#Seh4Rn2ep%d"?5(@M?p,bUMh\3TtNZdBNERjLXL]*S.C!_6?^ZBh<6i[-e]nSc:2L"BX"OIV?4IU7g,1]$(r;=VH+,bmO
%YRCDJnIPW>5J;OGl9C3E!;#=CrPpV4J%.0;F($lR>Dh$"WJW1*VMH#F'*Gt@la)mp<dgCM@D)mY@cHuqI@d&EW4oT-qD"N2mhS[/
%=E)khFrk;6X1n!Sj)'4grcn4ZkHOLuIgk*0`sLM9Na1W)@j@e\/\8,]J+Bj7Z8$?XS+G:C4%@JUiM$9"i?;eY5FA@^fiUKc/?32%
%=g*a@ghoaH*\5(Ep5mP86FHNdNl!<SOh-H#MC17qXCtXgpAQ:ArZ;@t7qLfVp6e.DY@Q)V`Gb`6YPH3nn`-#3ED69i-N;7EENR4W
%5/h>>#Q9"AqF>PI5=3*T46XV?IcocHk/IA0fDkCKhE1bNW?!j,TV\-e4*g!mZPV?\9ht<2##ipEhW^ZIqcE^mNP5N)hV\94huB2E
%r4br%YBI=C^V'C>s1-s5r[H1i'b6%(`J&6EK_0ooh>G5\]H6DmcI_j$oQggC'RobRGOOBQ^4$C*\ejgaHh2;bqrU]ChnK$jXFo@\
%T8?M0ZhkOls4J<OI!hRbMO\8X)/&l>phRS=J,2W9H.6X0[D$Lek$fI.H+O6'8O21QA?EJDo%Fou_kme%s19(0XgHj-VUS>D\'l[j
%[gAkm0&1RGf;@(-"?%hf"IOQNn4b@QjlRl8X5c*thB:(<K-PC-bE(DHjtqXs:s0M4jlVKV4Rf^@h:eCb2^@-^_qNZ,ITt64f9pgT
%^"D^5GTZ[L;/Wj(L>U:Pf'JgQ$2E*T%F8mCSEqp:7`G+"p3Ai=UU26)c)W)*h#sj%#tF/XJs)2(CT6Xb[G#&khkgNO^\tUo;t%]:
%^tN70CZOICf(RkO8qM#f"e*,@*B1=^Ai#_Fh/o7uWI/L(/)KYEY'\TRV+sT#Hc76F<L8r;-9b1A\?\]Z4:q,o*/?MVeLjGB[8#o*
%H26#P/YUU#2B9*q4m&uOg=_gi47QNjip,^ne_7sQ/qHa&mc`WT_pVTP((C?2l;I,9qeZQeW1UWTO>;f][UI;f_+qUCRb^_5gMJFk
%7Mm!>838+L=V&9+nY4WcQlWU_D^:O^f5M&!O\j>B4>4W?ijmUV!ujlU;S(ZqIH=b:cQpUjYPlsugW`Nl3+_PsZm*8/]W"UA2?loM
%1J[:[LFqiNl=L.:#17;2HY&DnJhngCI"<m*NgaGLfSm%I;\,3Lm*_Z^n'O4dbud*q5^VMrCI`QWD@5p4'),XS*n^+M;fh`pTk%L@
%CZ8YY5HsZ3>LBK(hp<j7f\EC#Q'pXMELSo2-?Qog?uO`-_QhLt%31iq_D!'KnF+7/e&+5Qk)>GQ3Nm&./]^L<_8(lQ)rPCg4e$D5
%pIBq%ZeVA2m%&pnD?FQU@m\jGJ2(^=ZSD%8]TPSZBlBA]ojSSQ6734khe_fJH]@chVWiu;/<cMCA*l:Y>GjWT4fp=8GWU85@2IuX
%U'n;M0j=s.K*jEpijN6`=\k?oR3:lp"oGhn.7I6o8NB0]fPjt,f]9hn[R?N&:ViVpSCc8(OBPlHHah2h3Z.Z,TUBf3V)34meuLki
%FkI*?F-ru8Vl\HnkZ2J1><rH7)sY4Gc;Yt,Ni>E&I2^Gk;0J@U9F+J'A3Y/mEf.IpC97ajk8XU.4_3l24]A0WC(fFueKuV:Gt^hg
%T=,mSEL\p\GM2#rKjR:kE#n2i3VHA7iZ/2![_Ur6h//_8c,,0b3o"'ql$g<]K\?Db'kJkrA&[0K9"%WKjhPs=VtR\D-_Et)0bbX_
%"jI0T8,5Q_&-V1FQjdH@NA&bf.-$sU3X)J$j`Tm8\SPHL<4qcM.&34h!AV=UD7>CBC!TiMh%$eu$E[i[1#pBf[29Ya)\6$Rc1'CJ
%<0I33G;\^KUs'shCY9'>#01rE*J+_]g%7<7-PO:634+,&2T?m\1MKjn]AYS?#-ALrCeZT\J[9GN=&&SDls@;Mhde4hpbFq.o&VXV
%47o8LeC#c/B/@R_/BoS81ckmM!:/LmTn2TS);T-;?oKt+CN]Bf@uCIj/mAlCpagU?XJso%S[KT5r@qg</hh!:hj/-MW,-Vc]<O_#
%RUF$jMBee6Q8p[TNsR3l$Etf7lE(R'&n\/30@jmYmC$_daAs69KaKItbW!BakaNW?iYV;,]30L[En7H5-720jRZh:FCKR5<O#A&V
%XI4Z%(?Ut,'Z<Xdk^gRF\Ai[C(EZb@4RF5%RQ`>C+k&QfKq%3_VFbVs9h8L=lCTe2lmr(spME\gX3Q+F)t;)pV7rU19@/E2:I2cF
%QDC__4B$P.CXMY%ElT)N(UAO3Q6"o'VZ\Zj%FD[*LKWZCq/VZW:<dTC1Dk%f]mkncNKXW`aje49B[Jrb=G]qL28pXm?786XS!5/E
%Ug]d0d*\c[2WAqPQ.F@kq\e^+%KjiV"d:\$WJBi8>W],n98g>s"s-j=JlcXV]kCm/ctIglpcd2[bG6.-\!m^d1rBg2?X"W.'RSSk
%RS%6\F6V(!2U%K?<ckuG[g"Y1"?VX!TQ$@RI,1l$ELpm]j1MqU["5T.SN!UK(_]`HniZPBWELhNp$Ar"AVNh1cpJ@<drdVCY:H.p
%/V49=;smICS<u!q0^U#;#7lD@0iN9ub(FKpgm:)(.A#DYTta@R+p^K0$#M7PMiQF"HbF3RR8/q!Z.CH``bgNTkVQ%RfS&tR43#E1
%R/(Rck2):^Ai<Y+N5H[4P,ls7VELtS+nP`n4Bq^0\F_/+e4_Y_"q%2;b`OYc1Vet:d="Ff"b[n7BAZFUkbs6(@"Q<cFd("T:,=hn
%/+RAMh+.NOCfXtrac#bpiq,sKk@uV`.WD)c[]=;%2"OHHHpSd$CaRBI=dGM_U!RE%)@H.JVtj8O%6gL\J_"X:KKsafq9;oY*G1$o
%`A0oj1h9*tXL,;c#ooVl+M"a0if&G[^rg#RYE'!*LCIR:r3?_K8:*6p=M:aYT[a5ILLu/+[mi2?KorjiS![;)<>S$,RhfT$?kp_9
%qNLt\\=_r->2/\Z.:k[r2$^L*L6lW+JZaa!;Ic0;\XRV0S$OH4ceYk[]>na=Oo0^1j+l2B.;oG?-YOQ)_&sRsUG;h#ra`El&7'0T
%:UmNeaqWoq6%J:RMF53^X_CCml4*n6Xss3lLBD6XS/0EoYgK_Z'mN<*]9.8^:/na7d%b/nZVB>*5eD<L%WXKUd""KFD1\)#@Nbo`
%5rZM'?+e$;`0(fZe$O&6qX7^&7L>$e\nV+tF,@gHW8F#uJK@q9cm\)l+.5LQ[Rj+OE:d3SJ@WH=5!&??Rr=j!\loqg"2?(;'V,;0
%R"Dom/j,A#8hu(E*%2c<b05^2D%1IQMNAE^+tsn!p-1s;F4(jAll'<c]I9kORQrdKLbKC_=gu;]bGICPjZpdN5fa65R]l2qk,-nl
%[F][C1bb^C]a)Ak,K^.#<ZuhV`mT"Gom2%R0l<INc&_$=*JR++$ml(NZKJU2G^';RFa3sMCq:n]aBG>?fr2,0D/HP-q-^AEYa"(B
%9;llE:Kooe,?u(>'f3nSS6=0Je!r"Y>(^=kW)r>4Y@q74#(ntS$Jac`)D*``?Pm:_0,cDI>_58&Z'C/WKSl(`OGe3NW_LfK9e\@=
%l3_3ud14e=XV0%jNtN!-eg[t2nucIAiG%[jb<e$ZaoQ)%]$nr"18e&p,mj[aU<>Q$VeLFpoRu=+PK'd4ZmoR2gbI<jN%I7)p)F&K
%q..U%4-`6d$fP.b:<PH:LKpm\Au.X`DhBGV4M2"pNeV0N>-u!spB\LcE=c@^>E*M4J=l/>Bl,=j5KSURYQJ.8_$,8`=F4e-+/X=l
%jcR&N.N3J;8r>)@Qlp)j\<IqkE/jRK75n/75fL%6gu!]_c2c(/\Gs*#"9UM8BUUj"&b7p?LCioV5H"h6?BCQE+A"4E(a/npRNu+M
%5/\<Kk2k)4X&@]-:?>=19!Y<#mm2cYRVIVQQnahV+^ng?P*^$_p[1jB<sQER_9I4tq^WE7^mJoJ#W^)*3GQG#`Im,Q\g]I09uC>U
%L'T%b<L8djYFJWW@ZZ&=09[(PJ#@ru%'POc5RI?6/XlS$VY")s7RHG$3152BhLo[tRhSt(R"/\Lk=m>Y`)[#17+So937-&4+[c(A
%YV_]jL>7AbW"A`1=[P""dRL@!`uo8_]<;R=k7<M/_jm)n5b!:Qo+4WkAaW&6CH*+=d`hBJ%\c2Tk+F<E:oKH]YJlF8,btR(<Kb#o
%FXA\.L`7=L?AgFV6%`Q"_EEI$:gsMg*k/`(?a@NeL]DQV>QCj<9G8t#B^Gi\HD,2E='09p5lrA8WgK4Z&"kd`Anb>fj^eF0dZG+0
%3tH*`E<m)`/d\-bp`S_W3jXi@@R=fl&=[\d,(`tlgptFoK_&[3;X.lC()(g^Ghg<BS:N]r@Y@=h$TNObI;7EnVT,]'6"0tY!5S?e
%=IR>H!*Wc7d/dXReYOri+:qE\UlYuW9S,F<oZo^^1YlFt0hpZlL)/Be+MO*0mP*qh>0dbD!=6cV#[Wnn@c%n\iNIdK<gI?7<6h0<
%d/m.7eq/PifV+h.JM%&&,G8gh5[<\An'#1;1]o1#e@ZGYAFf0kqc"$A$SMUKS/hU?kmcol>_O<l@"e^e$#u'k$H%YT-89U$R2$V5
%HrYt-P6Vbi%P%>\L4e>8B.\7N).H>XfCYFXn<"1IZ=sW4=`3*-@0[JNC#Va<pl%r1ktW0$J7MC$Yg0ECG2O>GV88GXKj]n.T^9'_
%5h)?VFIH:+-(^G(pYZ38>,FdmTpt7^g4R]aGR^N%SBSN(cC6aea0A4XUKt*PR*RsgrCsGc8YM78*Eep1NkcM8N7C1DWOYcfX'*pd
%k1L$4k_PU7N8Y'62'Fr1hkk4ER959.d`mOW`PW-T?(eF4grpslhYYS&,&RX9'TQV!Rd5Q%9@J4;FKZE'JI)"#'\7XA3ucL*q3AcZ
%r'$Ir=YrAdD0tAQ6o7WBD?\Cg=6p=)<jsM"OuP<g+Y5,RY!Sa'_`rcCRmgA_:'2D4e[5KC+TtbS-6R+s5sp$3.jH'IdCG]GiC@2Y
%eq49B`pmqsV]lK0kMb#N?u=\0Qj%_*!dKYD'O!VX/RYCI^rjl@ZNd^D4a0?817U[SdVqjYfr/<nCFZp^[f`/VW"rQ(3/757K0_6s
%WGhhBp(X0KS;-9a&2%#r>^[m:i4'=aZ4iC3R-T"3jH4j(,A3DtKTm@SU(+Sb_eG!/&[7)J_=f+l^(k")>1($W>T#LT[9sA]QS1j>
%9t/o!J.[#a9MXMU>0Jn`S!6=>2qKq8+D/"6`5I4P0nqEUj4H]./&>"PNk5>oiT&=^_dorg:ma`(O9kW$%KVl5q)&[rDsm)P6nh'@
%O%ao,41#=cIk6#-aL]_@Rm$g-0ZYS._5So/S9O_DBS"H2#U+)<<`iDD.MF[NQorP-TeR)D$^/6D6DPhkb*X.paWH.DZObiAPD9-l
%?Gf^MnLP1OL&m$cNU%$8I6pa1Qo-hhm)?MCmsmLnV9b@,3.Q9Pqan*sEM;47j+=]9W*AG%0Mrre^<@_uQ^=%k\p96N5P[8uO%ooK
%*iqhe$Z\M_.Pm"q5X\mccgNAblMtjGKp.2lS#2Ia_5SCUfaK*Xn@BTpor85L2nF*eZOutJ#_F^/'N0!C+Q_6C+:9*E(nDLR#g,D"
%EjY8T8R+"(jrg?(#fla<N9NWDi2T<,6:W`H$kA@G&l6NI<eZ/>_&Dg=9K2`j2hm1uQoJbG,7uf)gO=O*6b"$ZA4^K#C&0#j4pS2-
%j:2aEnaG=f77PI?<#.f:ID`kO&l^!so4WCUZ0"EcfP>;USVQD3_XX.nFWM],#gqLj236Eh)^8nGfbQql>j!!EJJ:lWFOXuK.M,W1
%$nDTC^`bZklsYgl!4XgBf[0162;tIWmchMR!!daB6m)QZV5Eob%53bD4Q_`^OZFQ0C_%f^@+Fh>-:_a%FO4_W!T@]j5Xb0Ap\0>K
%R9Pb.oUF[-ku0<"/lkQ)3J"a!Zu,I96A\oX+D;Q&e(F<^22Uma9n=4M=.%bR0chi7KpcD^DRTpqJeuDF$BY<mF4_rm!JA6W+W"=R
%L9QpLo$3TVKRQ3@:T&2<#I7+c!gs<b#/F)1?\&UDZDVs+%b"nhJ.kD+kkIE,<e[!p[-VeB\1@'(bT8<H$qLt@E[M51&D\*a&"^4u
%#sT38`J:`2L?NC*($MNOA;>Fsdo<CTUOB+V9!OhQ&L++`!a)Uj"1+RPe@=rBrB,Udp`b)q]FJFFgS#+caNrQ#(UmUC`RG`Lon@\8
%aLIDK2*mM*\.1=PMZ2?q7LfJNY`n!B'rnKaBH9E!72@#\g[\a3-t$e9+G3>V$AhR>pS!S)I*(W@I0JO6Q=H<#=:Yb0Kr*dZA@KiR
%a,#iCCmHla"-',g+KX%Yb8.tZ8W@haBRr6UA4qWB/(^K/\nh^j_n8JU_+3kS6fKd1=]]/E!NUlJ\ss[.^kB5V.haFh?R!RLfTjn-
%:/Oq@bXuLUX!U7jB@en(6/`Gf,C-B^Z2eW)0nL_ZW/3Mr"d(OSadT=S@c#i/G,$hrX11&79%?f*3oiHG*%X^iEN^]<NXdM(7gS1T
%\Z`u".<q.<+tn9XQmVa?XRX3GW$28L0WcgOFsLP[kY+3ZPF5T4C$lrq/i2rU6p<;P*gTOmTDk.+?d`inVWB6J=k#K<#mh1(`s1bg
%Hef9b=5GM=WL*6gJq5Tb&RU4inE#fglFD7*'bS=$_h:2UpOdT-K&nO]^E\LI:`R*4Qe,2FY@;`U/t.@D^tpOr<p3a>B=2=D3G`3"
%U%O#VRZn1b"l'+P]Qgfl/pOZ/2m!m<Z3pLa+YapB*LR$A0\d3OI1!t#?t9T`Y0Q[EKO>Ho+s=ZTbn8]^SQMaE!$>ZFco-MbJVW6H
%<:0rl&r[;$>k@YcQ=hYt'n-D-O6d?"URQupdlh_4:1M^MG/+=a\i129Ju8U;"<])Im$@`B-nQ\><IrHsaXfk_&\<gjQqb]0neM57
%g!>=?iFsK%'F3_P/:VHPk)d,o+KidGUENpuTSM,'2$#C5'4d:3_@2o[Js&1^G!XcN2$CWu.I[=hK:>3Ya(\5'o?>M@YUs%?=pK93
%1u*b]qbp7e,,7U&$?3MZ]M\_k*T8lHZ^q_2Vi?>H]MBA!ZcTVrboK0%=+'/0rmYsIn\1Qbak.L%=>=@XY!blaFd&4djTOX1CAO">
%N<r;"SD5XT6^&,!JP!`;,"QXCf1O?RJBXcb`kq1D[h+eH*b&'Odl)9OfXo)UOdA(L7K:O7*AA'Udq5Pn+4b^VCJ'WKU!okkan)4<
%,DVYU><?C(qR(JnjEHA*1!dDkFghdQs2Qmi+@Tc_8SjT[_]Wu>XTJUOH4!\4XEWB\L_pd-*rlUaEA1[rjC`NOY]h<3!_t_g)j7k<
%6Ju<0e(^b-!&8\Nr=Ouu&033CckEu2Up*FPB?,f5@Wk#KR+5>^*bISGJBbPu@s.pL1j9mt^TOq>7cY\Bg!-nMA]V<_,ck%2fu?uM
%=?/VWLha_\oQ1C7G^mE#-kI@<H4uDWfW[\TcV&l5Nst_\;HXcS\0oV+L1!WHPT1sl5S$18edu=X@ig^E:J4AT7(2LI4R+M)q+05p
%V#nluj@#0'J2EDhI!XDmgg#n'KKI$I[HdH#E_CsM+tUi,kMG9l,Ib38[i!Q=1hZn<]<>@.E2GJrA"M9ikFaaT'?YA4!eB`]&6?4e
%"C5`pbC6,[c=Ccg\K`rcLTEPrG]\7d+GMe.Fh"R<JW/D>9W2Sj0$)I04INb!5XDI!93d<2knn(ML@;RJqa1Zun3B5=*.il!Do`Bq
%km8N,Wm-*C>_dPe<s.7f-Kn@6$rJ35NU_RU.fd?lVjc:?#kd6N?"NF\9e0+AMS]saT>5pZ$H?'M"0BaGX;iR]L/4K/S%R79n!q'8
%"^QZOq.2r=kS<QX3WaA16fJLW1)UIPA,*dd%j@`m#q8q('+gJJ^]E4c6.LZ*VQm;3Wu_LiY5gh2BZ-p4+-GN1'=-r.qnC(,b\5"[
%-\k-VDp[%Um@8>bq[S`!89t$JV6)`jn:@!P+EehW2>bMAOBe<Wl[O6PVn[]\me*(,h#-74rpJmkDnc/"g\3@?nC&:3:YV^+_(:Q+
%AJJR,=?-^"bLYtL9IXBWbiX1MKP+A$&OABgE'Ogp6cncj?kt=?S!X%,^35/PR88>u)o6sZPqc6_QI@!F\pklCP@IZHb]2G!cps%1
%QeUV!Y[(79%rn%C:)$FM6\4::E4ntO_CGaN<@!C]OLuRAj>g%M_G0`mni.a_/l?N]P;>-LWt7)5LD#pMoI'f5W_S+uqJ*Qf.c)'^
%GBeQT22I#C"3A5%@358V=i=Qt&4E7BOZ_"rn[R_08Xoi>43Mc$PV2Fkaub9,=?-N+]9[.l3"Mn^3fgQ@fbNqMJ44PQIRpZ<T^t7s
%@XgI!K@YRj6Yr.sNM\1O@,"L`d(3?%NqALZ$Smj\bMnl5/T!%iR/7TU!iYNjE"),.4?TDXj'F]qP[9gHS)Q+]@'+hKH*Lg8:M'!P
%0qoqFGDGTWMP>*eHWVmSRLV:bA%jt(3+O/j)'bGU=W;s6P:O;kUU)g?U-Z8Eco>O%)*(pJ3;[lRe;NK^n!biNik[So`i`kIUG2"r
%-N3McW6;I8Z!Na\fT#"o5WW3VbPgkP\=^3TK/`O1,(m!BN=c@GXDbHY5Y"pbrc1C$.p(m_4X`^G$LlBlk>DRJeC#)u?\`(+`VO8f
%KL3d7=tiiN_6Alhbl0O?"*d"=M4HO.Ju2dr>7o#sZF]^LbmR!29MUssS7LHnic)Bck_uZq\B^k##WS@?,6Vt98(UAQo2ok;bB[4+
%93QijC!"J6b/`b9-h(+Li'Mc<DPjj1aH)22p254SLlPnk3!2Er1;H["5JUSRb<<&JDc`5#%"W0/Wg!qr0Z[Zl*;MhLUW.7tR'"<E
%-3`a'?C>Q+$D-bY)KhTb.._$hHPkBpXFCG6r4?*m[-IT8(HQMk=/#ZKPDnPG6uo,I+&t/=j.b58%P(7^\*ci(LLA8?p[_WNR`8uP
%9YrF.g]>WO(mbMWbdo")aRhrn8+J49?)?140Gdm8#%n$!LCW:k7#:jXR<P+M#lha&0`b-5`pdA7d;b\SoB:tgC-76W!BlT'.?I8U
%DEG3Aju]Y[`-5^G#pe@/$\6KR%\1J_+/65YA`5%^[gdrseiHE+3I*<fRNh1#4eR>qg5+&G/PJNA"QMSg@9-08hWh$nch+"IXCiLf
%hmj4sfl@c\/"k&(=Kb3?!u7XLIu"If5[lX%1=VC_c_:m$e*TE!4GO8Z54a52a3dGc<[rp56,R\."qV8c_Y)Mk+E%a^iQ+#X<#e=f
%B\hZj[top&_ajhe`QBN`2):rn,\[oK8XN,+3;IUeGXYZi_@TWqim;),K^W'V<eli:Wh0@6gMhfR^(@WE^!)BpI<^5opa`hL6o(!>
%O"_rYGhKM$Z$6j<'.-e,3lDq@8\l;P(e7+,q=.-*,68Q58!]!APY=!Q^dAW+RZ,e5,c(&e#:uE]fpKQGpjhK0(Y24?JIm*ikE$oM
%_@&HV;QHUA+Ei,ajPM[^&=JKh!&,.i]AS4kPhb__D4X.XQoeEr&i^MFSB<lu]R/TiL1!oD?UO>c$iLV)%'XJs`D[g+<UjBf8t(<&
%ba\s78J?5e]*tl5NIr;9b>F5p1T##^&$nVcbZeM$c7\]RCI#[2);t3Vr+8kg$c"`\nA:QE"9ZB-#U7E2*mq7Q4Emjcne*WSFI8'#
%*GZLfJsc5QOQ5sfMTcS8)mV.X]cFE@n_:2`4sD(6;?nNKo1hG1Xa#(^2e1h)`$9+eO'#6c(oVD^X2L1Kl9_[h'pQ'2KdA_^.(s"&
%/1^RWmtB)mnr32-J;cE>+/8=VD0\8*:sK5Vn/a%\DbS=SaWsRIY9H2edQpk+'TN<mK)/V;+Ro"I$)EPg-9!EJb`Vu.Jsi:P3mAg@
%n5_@]BkCqnD(qc*gR9sOaZ=F+mT%U15[f8W2^J-];SUFUJAD92Yjaqc!&7M4#)BPB+d4[0=3>9#O:,:heYDC?BH0:6T5=jp,#/1S
%*TIGPPe=2)J`s]]dfn9t#kntBA#6&8B1KKr&oL_[H",#^+LQaN:nu)W=#]Xt^f)Fhd*q5ANW40TZfr.!cqhU"OH@.kbTG1MHaO*H
%7i#Eq]Mo8WU/amKXWs*2,<og""lQ9:m?,:79RRQZ9?q/qDf!Q0L6Srhj@^0qO"@c&)$S(ocBh-/85[3cZRVn%BS:Ii>9=ZUZ_9pI
%@sM(o23<8EITW2j.l!MpWjo3\Ls?Ze2a$2\[LA:Bi_^,p_ilPFj>&O0O#7,>-<W,<TJ28P<MADe]OV$T#NCOJ^QMSt\SC%q^qSXh
%0hRSgk'`R!#+&V%jADm]oQ[AHAUp#BU>E&a),l-;#&l+uoccA['IqJgA]PHgG@T*g.*UT)Ah<B$nH]7SORCe75FmQ5[7mdEhS!"p
%![_*DQl0RYnZ^XHU;NQPdrY#IRioZpNi\Gb*&7C]4OuU?".<*j8Q7[>H-M9HOnOT%A+R93TB3]_^G[(RWOm1Og/(g/"Gd[J07mK-
%aVu6tI'f*JTd_>/Y?3EHPABqr?,\;<Z_1HZ`8$EpL9/[-;4K\d].U/>ZE!&A7q('pH4+k!*:7VAN:S9m".'3&786iG%06MGG!UZ:
%%Km/AK='nlRA\#@nCEZT;44hpXN-[49%)=m6bul(M.hDKo!'l?&hd7TR6mgfB(NSrY$WW'SO6P1Uuu;'LS34D>\p0aO9-sB.+;&i
%Bd$*(n#+o_OXQFo*f9bD922o@d^D0-LXJiO_C<@tO\UE.(0HN!]Lu5tm`ZtIZI;-OB]K1K7mr[ioN2AYlEa"'+Q3#i125<b"<(+'
%=M6>?:BQfpl9!GrMH9ehJWho3iK_J&D4[VhSW#"u\1BscbBtPp%*O`eW\pci=\D^W_foU>rd"<*U5MoE49>ZeZ)6T_%L$/"L$'XU
%@>V$i@qpN=l:a]\o5(>kJB3&KTnolnQhDBcrQ)0NWHsiL`6``*D:^I3q(bN6ctJ'WM4:V$<uF.5)X)T'4h<U8m$N[6<h7Y&K6(au
%/Lj#a6Vk6!iZ6>123lf]!CO_mL?g[.2P;OX-8Yir4A!Aap!dOP,BsAgdRe=9Y[hCpZ_<+>22XUhE1ce=ggHVLco*U=p_'gq9`Pb\
%q\p(kXR!QGg"Yq[Sg;tR-Q4\a+@r%CK2=>+hEo#6?9>\f\2q;k"MP3!K/!L;$".U,E=oBBbQd_F.lW4!c<Y7-Hte6]1UQBfF]8?M
%Oa\/LO8NiFk,cI4pL[8S/OG'm,>d%?!cLe,i?..!j+;oY0W9R$+XW5fIn[D8">$[]\EXPW`+7Yc:nJh!!Ak7gZP"f#_1V(%h:G?L
%'1TThR+$!_]3i']qOlrVNl(St;_aaQ@laaf?;>Pj;CslfnT:n=S>`c#F!0mb(C5THGsh1@*B#ibcnc=$QXDm$R4[[UIAm;;M?,]2
%i,(IFaN3NU0n)h<+m86c!#_sbMr98?$oIBe`tjdT%8XQ-S.^g:WU(5klhM+eH!Rs9O<TmL<H#)EORGH_$R@J/-)UCc\-1V$3Oj['
%B6kI?BG'KuYpO6!aZNI@.)f^b?Vt$%\TZd6(;A6b1r4Xbf'0"4h4nZ)aM^1"3t"TVQb_Q@#>(1"/;Q(o/-M4W4WiU!>Sj;6?\1!_
%Y7MpWaTdP0HA*>K5T%RI1Or6g!o40qqAkd,hsbc\k<U[#XN,*B5`9W,62<R&9arNeEgG/4EH!':AnG&c"G,D2H<:1URP\#G<nWO9
%J]Tpgp(cfMkn!cF:='3MS>-tI)'jak<#*Iekl$b7X[bb1&IoZcfJ?*W&h[Ik>]bL,*cX.]YDFF:W0E.=gs]iGU=J,p&\pj/jK=WA
%'NcQ8q+q_Jn5i;DVl7h1o+=]S3`DG.R!/jh2^GOS\iV)$5X]Ifa+ukg:JH$7L8287.I=u5_<F6]]Z7=hMN%Elb,S5Dj5VPiQ3RIC
%[lODCbba_2P<A!K#jR#leK+:b7A?0_W'%elF4!Cs1=7$fN6>u*pL4%YC;<q`KGgg[70&>5d,kfJl%PYjK?R<2N</saO&Pn;(Va&O
%4a\\uAQD6B8P)=@5`E+Zj&Ga0b#8N-M/&0CVM9k&jWV10*R:U]FoWslD=p*C$RgDaC<\"W(!N8-"d2aeTEa?Qami:Y.e5@5Vj^W"
%[1Zk<N[.qmTgEcjBI.K_f9*&+3"H@[eGN!*%U2!%5:Ulq"OMQD2d]i-cX4+?Z<_Xm6)<QdmP[5Wkc*8-n-:nrPbJ#1]%XW"lluqY
%J,]+RJ,/*sS'N/4IeDIAhYn`;NIUKdm5JDJ76c7DY?lYMlG`X%T7:H3H$]41o95g'r8%CgNuudks.4VY:J%;^oO?^Y$iMelDZXJ4
%$1lN63Ok*#=b18foN5boirY-Om#1_M-,6`A+2asEhTD8](k29/A+:VX[C&(Lg10ncN8^=1O-,)h_F#\6`cjO^E$"%$9oUsl0i*s(
%5hHKHmQkgIQ1$i-n/Wa_&nPQ=G76#='TQWaDTFNLoKA<W,PsRQZFGol0Y/])KK1J4+EbEXKBi4_-&HOlg_KK)3j-F.FtYtu2/&A0
%kIAAocfLf[Y!kd%=.\I;$+EZN%/dQm+[pJ-I&4O'*$ZP)UdE@IbWpPM#Kni0+DHKbaYAm=>k5^NN;?e6#U3Hjr.$o$0H;;X+LQ2#
%*&l8u/p_#Vhk,uL;`NsVD2cZ"FX*iEEOWC.-d9R>!B7$.&K;s5ZbV%u@UhB@,+U^b)Fm]kU,CeurHkdfn&#g@cCDoD'oM0SEI$qW
%=gPqXN-3jtLCa9>bP==43o`D"o[0%F;;$-S1QEq:V_^engi.FHZ5NCE2S5%g_^&7kf"$b:E1\e^N-k5\oJ;\NGOQi5N6R2&<"hC6
%du3lO1r^po*QjQiS7LN6DZttP^8GtI0ZH+(rYC.VoKiR+0SZt=Hi:fg4EcEHK>&2/)U<-&(ZX3-BjA`;O\>sL,IiY7-O^.jgr3MD
%8X"AWK&5:G%IR].P>4G<mc'N*G2Y&cef1"_^#jFc>/+Mips.[<ET$uRjl-Je0q'2GCetq;cbY_;RCRQgU.Z%6CM&22eqo<qM?>iM
%&/Ru#lf&_8JB#L@prYKpjB\.23Gnh:3,p[4S:+Yf,.`'Y/Y3HJ#&Q*)/ss31=gTSNB`6(V4B2G(N5aa="_$qCN9\8]$m?s!ckQYU
%!2^fR`H[F*%(GPm/ecjIMD5Y"Yt""2o)"f;HX\Irn>9Do7)^-62N"''(s=@ej9n[:=CU6K"\Wj)@e:+qioUXt(R!e?.>pJi%#P9`
%dblMX_ZTUJ\53kua45d8(j407;_SpGq^+5KK<c&nOb!XHk9jjCI2Rs7(j6'6rA-MiBtD_pjM\YSPX/"PN#gsA6;>Zbj#mW'1")tI
%*ba[,RZ@h0EV6?.i$AS]>Z\H;1G_QX\;r-j0gZ(E%*)=Ei'u@'?(Ak.hSj\ei&O)*(lZClXWZe&KZ(9UL\S_V>[27Q*AN*5>4u>K
%L<\7B_-G';kuQ%A>f><^V4]#]C<R^.Vl)@])'=.=&eUo6!sqMm+U60q",CT%odd</bX*;F)F6^60VJd=f_d]Xlh<n@EUs=b?m*I[
%aS>5J_@<pN=IRP5_lO-3#>6d%Rn:i$W_%liiIIH?LJa1@qHVgn-uE%$0b4ltY`'::1\#F*pY0tJnLOnQ1!J,s2W9:1(aRSG3eMJj
%hfk6f#tr'XQE-SpLCsLj<GW3VF4R)T77;anl^;W-"bTp]Jo0.f0@G:Qfl.$kW5@#9CD]om=:%8N$mO_;N5;N,B]96+&.QPFJ[lX\
%_pC+HSN+kJIZMdaYREJ<49W\Y6?Y'=K4;?aMCQ(c__?bXY#/!R4-Y6a$U^uE/%I?M2"It6[kQ5:0gC7n)"]ZC%_=>%,6E`-G%+mU
%=3d$HYAj/_.5&!Ebd?$f@MMA`K@>WS4b3bRb59%)$kc3t]*>)c>mEKo1CAa:P`tu<.#bgL;Y)(H-KA`SMbb2Idk"Q]iB5)D(Mprk
%+Cf?sj.+Q#9Z!W>Ccdb5_Ut_`(6<D`C6]0d0VWboh!?$!]8-V+47I.]\_Z\j+cPVT/k^r;&\<b6+M;\>PkftufL@MC7mnJYV,1IZ
%G(Hd:[6A"07eK18#C/".LTMZR_40G`=6a14g@]nK#BPstK/\%MqR`s9A*j?a'r8[eho%je8:rGKKaVHGLju[I/B6UB`J]X.G`&Te
%aqp!bhUWKK0^=2RiX3u&8U+B_&QM8t#$!>f.f!HZSk:BD&d<LDW5TF/W]iC\5nb6q0.ap_%$KNtFMR-j_7p>LrCdf^!n19fNA/_u
%UA-e@\^pL25B$m\*Z.=@\F*f2p*"W'#G-lbf>S1-\cEX)5n1KSU"8QnE\CKH<)<ZA%u&Qn5n1I]c)lpT2)+0n\?)5?ph.+=fP@#t
%G[h>*.T^Xu<5^Q>-+JM7LR#TPJI,&[G%Cj^V'P8mS/Bnu%<^^j"f=drT$RPnCrM>=[PH3j0ZF^+^sF!Q<\CJhBMoa$;.HhmSQe)T
%1f61u+&>FY79>cb:>jAWqgoFtn4ad%7UVn=TL9)Q?tAqHXTT_"[*`Jqj?a*1"UF9d_$1;p"r9j#OV!&A;Qa9?g%XuV.UZ;*PMSQM
%!;I&Iog/eO4mEeF^^,.BS]Of,Rp`!I$SVuJeE-rC0Uc/_h1F%:.LC@__>tXnTE%G&b8=qj!4,\H??42B7p6U]9b7:L<rpGupj_g\
%;N[OGIu@fQ62t0%c99g0OTE6;W`'KNWO`ZPEUI1q#Y_Ob8.J7#g3[Jp?e?aQ5XG;UN<dJei:Ll:&odE0pm9!L3J<?=T88!Wqh=fh
%$(^k#@Hj_3nbt^0Et:>LLpWA<SU#^mdE,Lt^SuN6g#Ds!_SfEZb_c'Q'b;oMhHq8CGX:iu@Oj<Qe8aIGV3hSO6/E!+U,'R^RogfD
%k9mpWaO4I/*,"\'s+9s2&jFTpp,A6Zi==RKn[:K"RNaR^og$gQL%^j,n4GGKm4ZaaKHt5\a^j.Yb4nNFK3/Pd:A]qkL<#WobO>a+
%\Lstu,5\M(@/]0p15@;\J,-/+CrloZ=<:d<(p(K2Jo,?GXM=*E.ae^j01&ZrM)jlTg.DC1@/\Ue?jQ2EqTBEj;d,aaQUJ._M4F4)
%]*Alm]o`6Q%a)a#dU,,"6?PTjbDR#"]s.L5*6a#NqTC]IEn(B[0-qV0(YW5fWjFX]rM>/rLdCnG$*-"f[(k\FoeA__?f7Y0qc^YI
%`"s:G4Oa9b;Q"g%]YB,\'TDXO3L_DI??gt9<)Gac%%]=Y.%)h/XM<DY9KV@,8UkB2Jm7F9j^GhCPeX^>CFRP^^VGKS_85k=fLp?4
%:AKfL;:t;'q)bK5H8,?DjI$EBpku@EEh<5^mh]Z52NRGbq;J;3Ms_A_;U]"*IRj*B]HI**5a75Qoc(0"/(H;qfNURrIYlAch_``3
%Hr&h9')hC7RH,;\^[/hrR%F#6.mcHR7)+qnREk@2,`KO-Zi&fEXQD=\04[N,]L98K!Fi</nOqTbX^)fne)lU+_=1*:T&V:EelWq]
%@sOsHV-YBNG#8+Bjb[/&`@i/<^U[2='#sBO1&UT(9ZCK8V8/LM%u+GFJ6H:g^P^F_]GQ)8`;sblL#EhD:"q$4IT^?;Kfg3$nKsu*
%4Z!"VIgY*H61G>Bc^Ef-^MF_;%A#S/.E)qg*5=$K#MpI@^CW)FET-\H1oPtL9u*pN.QDl+i0JItNaHC:1',HVI_!3d'8EXe#I#%Q
%XgjJj.\G2X(F6aXN.ms#nsb6"kecp!.H;>_o,DD9UA7NZ5oNgj?O3&G)(`N:?tBk7?OF=)c^Eo3\m50P:@kNG)!2kr^PJmgLL"SB
%+f3X!1qsT`PU1!l.:B"LRHR^MCPj82jb6ffksW8tYi=b2oZKr[n.n=^X3(uA3id%EhsB8foW-ftp9KL'Yn7QaocX*"<d/P$hLk$Y
%\_c?C<fT[mk%3`Oj`_4'1X@_N$8dTSQPngPE<KD`22M8c1quWpc\cp#Q\=*S_%$a>hj+.gU%tMcW-RYj^M##c&tJ,$Plgg@_Xe/?
%Ek[.g(D:)hSEH4OiWC!ghmE*LE11-?Mc>m+o8C9]3P>^dT_ZQbar1YV?`qt;(HWi_9HZe300I"nc9cDAd/;lk<V?U@0,d2O&/UdB
%V!0shZ.&V[Lag.pBRWnOD+(Qa^FU$*[A;;e5aG$YELL5Qn"cI6e,3*9>;'Z=-1T$;dJ&4FIrYjgAiHR(+$@:^QcO%6r'Kj-QeH_6
%2%8VrjnY_eL0O0Fip'4a%\@#5\85GqIMp!Ei[te!cK:)W_=K0CY?.<&glE'8i;)Ic&Xb#k0!$'gpi[q<+k2:)P[O;uS2@-4i<ofH
%p2VJUKlZcM-\WZ\g1Lqbh]9:@.p&$D#WJ[A*BJoe*c_*%m2/mdRGsRF&dh)TPd`aKQQLj`Z_o=gn(q,2J\7$!)1%j`(HW#6KBu\%
%O0`]6%&o7@o7G^U^7VraQd!!gLTeuhg']*/<[jT=ICn*/YCf5%*PB,couu\?,3SU+LM,IsF8CoVs-ssTLR6g%U[Qht;W?p@_\m,?
%I(mM!TnCZ-f1#Hek^:FJ@=2MTmCp20OSO(G!=g_hE%mBRn4_q:?Ir?rP:s\K\qk_7G!eQ#G^L[QTFVrJI)h$L(1/3DV"m0;q"DrW
%UJBeV$lm[!i:&$>T$rtAGB[gH(jn(<5Zf!7^-+B'3"u(=Q><+(nb6K_,D>W>^3@mq/NC*2;C7uFL9be/2TQ<p?Ebk9D/?[:0u5qP
%p9p?8&R8&D3cQf4a*MW)hHm'AU7BhLHP%m]*etq&@;MY0.qpXq^1@>J3."Le0L-*8PeD=%N/_f&N4jTUE1/dqn*WALnF_rr%676t
%\m?/a5s75402(:YcCD!1\B'N-GAUXN<5#Q-ppR'.'D6t6KD:LGkE&H?]Hd,83OA?%(JR>nIaF>.'can^.<].`-1qK[r1pRe($99C
%oEKlfKqEQK)0#*:,.X>B>Y`TQ_I7-J$TmekQFt:aiOX'i%POE6mq6Cl-$*[)nE#ajp;i%;+Fg9MSPHU,XM"&cS:A>bWL2DArP8tE
%?:^></O57t..(F(V5*$l];N>9_)]JTNj(g20:'TF.roeQ_3EY0.k_Z!Wod^NKeZb!j2dt;iUQ^O-SIS7":KjGQd<&'.,X2<Ws7h*
%a\2L40-$Lp1+gFWm"o,a`UJSFG?G`uaU8,:@)9rX!R&1&S@g]+q!cSN9,\0*)s<a(*uHF;bC97sEq0jBKA*hSnl!W7^N8rQ^FO_0
%n.M!2;?*&JQ^A.ST&AZUCBcFF:>Y57#o?3?]K6#jT]BCmAQ5r:?DDF`U#ab$R'L`P7J$Yu]!0(XL-rX>LX,f0Pe7%R"X>\D*q==g
%7UEr5(n\Xc96:2P>;5U\*FUf'bfIE?8n[5HJA`E87c%Y0M_cUH=Xs3hZ%ZTH,tCGj=$g5jfN1M-`SEgXjP1Opn%f*H-KJal,?FFZ
%j:rP:)iKdo4\;:16HG&d(&4WAaGUre'$7-JGA?0&$QUn+WgjZkaq+2^<Y3;a7eRj[c=FQj;cn/$CqNB:e`PR8["+f4+leiL<5H^Q
%jE8Cu(3Q)!GN1flnHo_9.?%>(D6[<7k]dDDj`KVE"jdA?-0TT/laL9^A`ZIS=#+)pj)QL'5(X_EqPgN/mD?aK=]*9foCBI/eclM#
%pM"UjiC/>=)5`'TF=/aO$Jlh.X.:,Q]C4Jf"MDEp_6+:a5WGR05L](1.h:dt@,KdK?uB\`mue]5mT8sb&3Q)M`6!5>!**6-gq.*M
%l<!-(4ndA:na9.7-WkS:%l.H^GF=C6-=019YsV)`ftTGMC1>r.;!rAiC;fG.EL-joBe7-Wl<.F0^0Tk&beE:aZ$R`o8qLmr1nlQd
%@G?J\MXXf2mD:+#a';l]pl91`$e6jB@(:9/1[T40Ubik7/r3s%Q":c^TnoNLa_jIcl!i:6)@j(00*Jlup9lW'?)6qree_%5dX0p%
%>hF0<dA4=oFdofY4e6'n5-E,@W2"!c]!Hn5HA?_.]XfMj@D;H'<Yp]8gt]kOFdqh-*2L.o#6L%[Ki8dS5\\'6$bJGK`B0FfFHJAS
%0!a;qh!9X)Li%=uf7h<J6A;04Et7m_]^MA5dHSM4_RL%5?'Nh_S8f_$SaIR'QgXL:R=\$Il,ogR4&bAf',Gh@0^0dr)@h0,kp$-G
%0]/9g2\NNN7X$n:*\=nt*]I7R\dSl&"bT6&OS^0J*M13!iQt$`,5kX,d%/IZ(_jR1!TXW@/trs%&_dE+p-SLE_d1bp(C"/;1%Bl^
%2j)fNcc)PM&3Xe/*#-!>,ou\Y;!;BA-fPpV\g_fn3)f#^(Yb^RcZN]9kd"XuT^.;!QQ-FP>b"0J_--3BmMrfq("[cnd%u<5I6IF(
%"3<?rST[`@(j6-*p'53WSIR_d8T\V3(@MsK!.0XaS2<d@mO+p^4VD_2'?)R&gc8l&0;m.8H&U`ffQ13(=To(o4El,=DG]="Q#l!V
%T[$P77*DJ1Z#:G2]0W$8"IRL$\[:;N&5f8Hga-in=bCuQfP<)J\-*3bf=sB[3/SPm(GmPkZO]g\*_SeiX1FslDAIFK-):XSE9Hd#
%9Tn>Zja4n8FRIrWrPG*u*1;0ZcCM"6jtRZr/n8TqA@<j0TZt0ui6I#VBiL!PQaX1ZEDOQ?0X>(7#'DQ6J*m^`M8_HILoL-AcK.EY
%\sRP;C^Uj!\L^j5MS1_,;TbuQqI=SHj35&5F-p5Lk$6VpilURCqqY'Xi`lcaF;O(EHDYq1Vp8lI"^K0BcDAZ#q9#4#7hlILbdeSK
%>X!d#=4,;KYKXO&kWnkIF0;8+3A'Z(KEg)-([bP6Up-l8\T8pe$Q.[0$7W@\b+6^\$c#TTSP)6\=70*P'%*l+\VTLL_-9=fV`_+i
%cG^C?9CWPT>\%CW;@M\mLAp\(6&CN,ST82fp#*ecjEqsO.tbJL:7R6p$O=h.3#>JIo44kRFc#g90]sWR7-*ULS4h]tpoM<%$N[NV
%@*YSKp<&(LQV9qMOL=X"8<!a>_3o@i*ij_7bdiRUfsNBn>a,=l2`S0[!-`u!RX&Af<>9:#M`I-Mh./BVn"er*CDZ,<89I",c:t-\
%%?`O1;?.6r_OLu_'CCB3Q\Vg\S2lp;:<j)kci>6RNki%9R%]G+pDVht95l'#4f$ApMoudg#[6$%m-.ENm(%r6&i<gJAbUY*4nfMX
%flNK:fQ0tfU]l*_N6M`UDQ<Tnc"3.t]V+3-AOK6S)'#W-'M_ePRa;><_4:nd>fO^>&BpoTK7gn<".BS,J_`>'/q462o>6ti8hj#S
%i6>hX:n+VBgRc*Ym)5AdHH(rF"F5&C[$76r]XaP9*nWYp+&Zf83,pRbP!UjYF!72NF<Sq`Pc:q(S4eG%?`Okj#T.5>1Zu'S@/r?0
%/u-.3Dor\@]C3(S@Eq;C$a0p">d>Jom2rB>VX0"o(Znub11W,mCPlb;!aaBe(k19<lUm]UEJr@7)1faoI>^.Q&dHE1e@E49#q:Kf
%QPk8]O9]n\,YDQ.Qucu(1+)>2\[5M]$kpjqb_m\R^kk'q#o@Y8=/tLhg8ZCF?DN(_0]td(dH/T_&29okQudP/BN`[*\J2BJJiQo^
%CW!])7;.g[#-ZOebQ;;p32gn\WZmV-^s#[j.:'K*M$gTRK0,F]ThM"t;I%KI^AF<[QQAp`KJQ.HJrOaV0#Y;Ue@COJ3Jm3t.gk=7
%2YeH2qI`qHaZE8)\Z3_HM_u;?5/"<Gblq>\\GO.2]*lMYPe"C=a;8@S;#UEZ0\:t`oXGei8Fg.j`p%M6Cf>UkbCqmbT?laQZjNg<
%cX4@`je>?[<=tg?JLshhn`%/OA]6_a7(Gi=#=X1WjT8IMF`B+^Jc_=O`1C[`+[j%jYiGifgrA?p70s!PKe=(M83noa4]2^!pcc5?
%U_n.B*Mm<`Jm;1_gY<'`>U7uIgL<;dEeimlSB0J&L1.s(2F6-3K&5hK5S5tIb^C\U7E,n+WhaJ>!"K^t3AYR+\^C8A()Ni;L7dG+
%\D2s[.uP)X%"i[A:H3>e;8U2E`'q[m,B&='JNs3_lH4nj.:SE*Ll:RAT7%=2QD,sEYC*h`)\?Pbi?C+:19_TM#_JNlHKE#GS-<t2
%i=]UhAMN/\q'W5ZR0XUR7m1O);.u^.>%%HY]l,023O',^#hk<s^r8m/X=OiaCteUT_LRQE:%k(ji0#SkIZ<sV+u'0elqDne'Ud1I
%JlF:^X:5/<6%02OP$?#"3Ptj+1;r>)\#=pb[("k,+"s_)Ls8R^T;4OV7Sqt$*)_-R.;t?8PC7@2<bZ$,cFjJA/^h_G(h!rh>J)0%
%Fe.q99u'om(apNLUs0/U-Ps:afIIg_?jOH+7<Qf#rb,B1>6nZj"OV'#;[:W#,Q?>:mS%]FXXm(M/@VZ(ek'b;QZ6A'DNT437=V</
%#Ahu@C/E[em=i]r0\hhT,L&Yrb<7tL!9;?@^:,i"oX5=*@QE(X6.(5bRio2ZSW]2m/uotj26m@:g(l#:*b@(\U'.P]iO*5l"S+"3
%eeZa_Qpo;8McN)Lk_7M%63J6Zdh\aH!:,9c(.@)oV^nT\E7>#c/\Zkt`>NO_'tFqn6<c8QCt7IM/\C183)9os.B'o*Cpka<@KDu+
%8T7@@H#_N3W!X4.6=n>\#Jfsp2LeSUILt0V;S)TQN@j.Xd-j81Mshct#o6`m7s3(1`&:[3CG-1Pl2sQk[Z0S8$%jhh.UGL)"RM!=
%G4=*mi%b]"9ODR%3eC5kL6[tm;CAXOiWPJ56=)`VB:f\%g<*UKK=Vi@ClBac[7u$8Mmt\@MX%j^(_ei5Bkmrt?r)]gG&T8[UpX;\
%q9!?q>*)I?n(oL/!DWhb/bb%W4k+ePX&Z1G@]SmfT]9RjfaFOWA@4>:^tZ-(C-<)N;:Ui^i$hSVpYMtV;6AE778mu/R4`KQW<L^5
%:Frmj\(hS48SX[R;k@sX(>1Z5;4E"$%Ye.&5IYqbW($9thA8=,I#k-FO2XkP3iFVnAZ)q"W-+6O2K&P_Jt!Nk+tFolgpG.q&=JQ"
%dfQ37D7c(iZEY0Ik3#$*$hRb9h]qpmdjDiP$'7>)N;rCU2fpMroS&eNfa8Q__+bkJ<C'?;&DCgjb"N2`*X5XVe"T5M`bb.m2D7>.
%d*b6H9dPTVH,=+1d-G94^$F:*n'SFcR=^S;ED!$X"sY^V=n[.fUhsGc)5&fGWLsiUB,3TZ*[No#BL`[?9*jL&_eO-C>-S$O]%B;;
%$R$:FTVA!kK7Yo,K!uDNo0PhQj;^o_nBdm>Lq$SkgE7*X]WfbCTd$XITcNQ:#/+jIB]Ff!('*2jh$/QpPS+IL$JP9(@A"'<&C>Tu
%8e#7_m`[@$qH7?g&m0/482=M'I!0p&F3fRpW+W`[<l$oQSVc>m4H$l*.Q1H2]M3QAd*?f1ot@TTG2LP(88#Q4j93FQL3h6=#KdJ+
%<phX+N3gFDfn45ZWHuC_\gV3BhA'lL7>QTR`@7XSOK,Un/pt"CR='U(G5-eb5rUlQ$h4VZlu5bRa_"&=EB;]f`+@7oZU'`g9XA7(
%?9ge54$<,patl+A5T2JcZ`)4u=D#BaRtXW[,dS3IZ8cHAd`@>U(.C9O+r?!eH#+cs!0[8nI1Ld0f"'jbV3_?1'4@\FQ^qHs\&`.6
%R_HV__(@a=.l3Q(&Hu%VV\@85=h(*qKi^/<KGUaASr'k<_((As)ceCo=ChM!P'B*q]i::0S?g0mcBPUZ6CQ1J3u$f`qUh2*(HP]0
%EJgo"FL!.N+[HaqX&Hi?aCN,b6Cu#T,1n[^-<VZdp\BJ5(<duWSdlfE;N8&'d)^CV(qHllG,5%_9sRmhi'm<YE6+J5>^R=pfc:?>
%:BuS)]N0%i#)DOXS4R6%TibiLkJ(.FVEIF]fU5*m))aV$I0l.im)_9K8MDtipN#AW7<3h2@t-(4o$dC?SNmrC9Qitt#[npqP_rh,
%=!'_`kYri>YVu?p*XaSpjRt.q=@Cb3([g(`4U@!"gp%,uEXt(+Nhp+5FVK^H8P`JW1Ug7G:`rcN"dmb>Za-bME@ea<!HMi0fEuRP
%jeKd<-s9ik.1/Aq"b/.AKq/g4T*8p[3B:\SS?YklR>4#:^%<O^m.]P!jo/MDrB]\:3qfr=ie/8-]S!h*I**ReA1C]K"g*+EQ\W&%
%3"tU\-9:W4[hs/A5aSQUoB?R?mc6?%'.C88dl'$To]NdjFU!=N3t4;n!`'t,,.3P/;'L!h3X6?F_jTHAD4]$pVKY>TA[2+HA`9mb
%;VMX?\@CC[[?%s(3/gasiZo"Y/69jWb.d[2\<4Wkp!"a;=^f]'A:>TT>[0_$c/BZ/OaJEuT#=dI;/0E_$45Ag(_5\78<B'X3jit>
%iTpm^FZS6d">2?.cDFl#!J$6=%7B`HbIMOF]P9QXS_=jiCrH0INiJ(lo1B\sQP,ig7&NRA_!3OhGjK)ir*!t@]cRD`grpg_)YUHh
%e=aDeZXLI]El;ug-@2j<:KkK!G&@Ap>B[kjdStjf%MB11IRd&oNMVd'4H[LrhdksRY-]F%(jWnK2M'kJN0*C'(T1QWMJam*$ZnFu
%OTJqGoVlm*1KU)!MI3kpHnF&mU5@N7\#Ftj?BiFunH$+[T_-)B'26;S=2D#V-51J5Y\u>lCVU,_9Sl7qZGSiHd=&cM[''*Ul[WW!
%!cu)1Ysq;g:CCZpqf#%&"VRM$\,es'OQ<+,98eB&e!GME3o9>1X5XV!KAHW"o=96X,KNf,bA\:mHWt!C7>3Pl[@Z0VgU@U/j<6+7
%?nGn50r]G>W^TO+f7>%QUS'?,Hrga@34&,K]53?EF9n*2B?Zk6PUad)QChIr$aK:#84(KUWgDE!S[a.uo802;q$bL@hRp@L4*>:"
%$#&S)NR*m?e^"[u0oK7t<K;(:!Q<&&gi2]L#Vljpg>ePP:_)p$c@#F?^l&G4%gUmBqq@0?U[%E*6K&F5N!bVr-u!<>ob!jAm#7XV
%/.aI"<VWU1D>2*\2c-o61NhVp:-NhSpBH4:['1m7.nbbsjs<M%UWuEVd!)AQiG2UkZqXQd,gn%:H)`9Qo:2C[?28&R$Ze-a_pHeH
%rsq4BnsgAokn1cM;rIn0bN--c^J+2L&8o_QHN=b<@p``5^h^,(5R9+=2XDP#h_[[-(*_?>]=[RKGd._f'P55<V%q*B'Jji``*2;D
%5Q[;pP+g\S19&@SeEjgna<`)&#eVO*7>#NGnU!#4:m)MZF^53c._\FIkTMGg#F/Wsq?QDk#Vdfc%P7r@,?^gOa&bD+()bQHm%3!+
%8QdQ&au_oJ/hmS(0$7j6M0L;4Q`1.Hlcdf0Ui]Bh[:-qj/qi#E#M0q*;IS@DYuB?^`>%B:Jof/X6k\Qd?(W#26Xhai65CSlYP?oY
%(]!U3pHstVZ)_N5Rn9lZ0jt3pSH62g*Db`5!bDd-JnPn.#A!WE,d!YS1%"hQNe^C2$$VEF/Wd#.$(3.p!:rK:i7/#<9Z@KDemLB;
%%=.P(@,Y?7GSY4T$3Ug4jK']YoA8.G#g1M]A<uKL)Y'0;l4d<&odu&ZYFLFu@^2Wn`F(ho=&2bliPAfg\M*Oqqu#jomXuFI@VHAP
%.tE1a:^CV!+tN\0aWsio:e]:B86?l;+qWIDOO-0Din')eUYqDtGg[(-in?+gSJuut8$L8&[jZ7.X8/&5lTejdb-@m?.i-lIP-1MO
%ARC$dH5D8QPm'*=+m1u^L!.2[)%.ld&`^&ZnE'ffa`?aL4ZJ#<P!ils;qEd#0$UOLEi2iR=scY5LgbhS5iL`<keOn@K30,[fH-`/
%Vi9OFB[4)5OpnVf/R)C0+IGu1I9LFp%M-3m+3rkM>_0t,XCSe'[\psMmutAb(#LjFqJKFmk1G8FFj2I<*PpQdc^UfWA1@s4XSCbB
%lp'n<]XCYSdpZp(7hmAK%]+2b7pILGm&?<,,JJrmdX3*nD,Wbc]FPafE;rsU?T-uuXAed1jFlE4%on!ts.?!e?aV[,,jk(?H>FV/
%L[#5PefMFT5WR2MgHF]l&2&a*IQ5u[G+0']&GF\K^?!;9mdY+t\GaoOl&$IBLh=`c_K*i%DNRW3Qs\Ej[C;Fq=Ia@Q47G#I%C'#i
%ac6eX+N-UTofSE*@R$FB5eJAln!cQ^T#qa%5j68$W@=p(h4:;*Pl6GmEUY&cp3,1H<Os^)id6u2_</,qX@K3c7`CH9k*lC``8b9+
%1"kSPCnSkgZH%4Feg@h<)gCDOV)EaN!N)U9_7WXn2),>&<&eZZ,Pm*VFct8tW(hFu:!DnV3X%K4MOPi<2a!^o$oq!doS=HAPkGS)
%i;csT$@Z_lN(fr8$oksU#UIKlPJ'^*j+I?.R[8kE7Ap;I5N!J/D]0M+6a.lc95.$=)AjSFD[LK*:-@VD_o;]J\@;nC;\LCZ/Z!Z.
%QD`cK,\%pj4"MS,o$f9VFa'Cue-2ZS.Lhf&q0\&G.:UKm1RHb[#Dr$b"i44JWG9+e1X[R5nAEO5%Wi5@G#fRB/5\TiT,H)>N8,[/
%j=N(_krGrp$Ruuq*T!]"M)<q`=^/N1IE8]r]7_WF'!9^p"p(q)A(0h*n@G;PRGrmF^`6]PlG:`?;D)9nqL2T$SJrU"I5_o:0'L\M
%$\EGZL,u[7LWUih"1d[OXan>LDa>OOf<0T`.asIqVl;S%1Rg__K,#T#3+*sp&0&hj-KGe19d6?1*1dd-PspEi[B;*2iS77rf<3h*
%8p1V%'T=f@&#U&C,,*17eWS![72AANHS@6CG2).6(N&aQ2Orm;0R[-;@XFK/a`HE<b0[(&Za3j;CauL^%p1\FaKZJC('Xd!QssT)
%AK[ftjcD<cj%/)]@PjubK@dRkj]EKo[`dC[O2:F1W[]?'!g5gTpdh.H8DLF/*XE'uch4tbrj;iM<Q[C%,<-ok;Mk\o.ZK:]OHu7:
%&583t-C`>O(9J>QVnSfCn.fr]6+ge!\VWY3l(?<iO>sWK4j8&G*#t966V3HFDO3c75Dr!u]Qi<,M;t-EceW)"W.S,R"T/gT5K":f
%gmH(@LHXli,eAiu"uAk55?0!E@NEsEiI^1E`Qij[R#(Z>!(HM6"is<+qm&FR>!4jbh+<L`<#Uc=\-@`_OE])0AL&.&>l+G6S*3:]
%G%WQlO'BVu_>M49"aE"[$b5!llJ-]rGhPcm^(!tP,n.!n)`4o6EZ#+&$L'1C&SNPBO@Yic*I!VIK7ML5'\$dtLl'&Uc=FXPmu[0)
%1J,X9#1eVVi5j->`4[n@5o>]i40!N9L/NT>Edc>^Jrd#)5`cEEXZ"_MA`d4UY/PUpk>TmOqLhrr(46LqX`VPU-ikFnM-0;Y>Jo.t
%XuM%tY;l'Uf>D2=BY;9dC1t=rMjtR>P]'Zm((2,GG7RH>Wl-U(1=7L7e'%^:p"U6.UBV!L;YX[^9cV,qib4^RrRRrY'^%h0%F1KE
%dnq7^Ymt&5+<qc\eh.OHS'=X-"s0+Z,Hsl,EF)YHC_2OD#mZP!Z%dM-D)MX"Z-*X6"9MhYMI`UE6lM^0'5us.i-I_a2S^nA/hKX?
%OCb<D@X;#2f8H#EoC5;aoraHuZo4WRKdOgHi`85E!!0fsrLJaG+_rA,4fj&;=hb7,JDgqDbHuL6q\'T+.r$&F4jIU7(8O>*GoSSr
%+;*H.k,BqsXA'c,[[9%3[\@/KKQBRDaWt5nfZcSM&cln=&]eA9/@Vi1Fpd4YAB&YB=jDK%<Ng6cP4fN?&2@.%VbChQ8@Y69H&2r,
%Yc>lU_++86P"%4oFFpc8Tg@\C0$j9EA3Y5C,HXV0$8X@S67QFm[H*!QG]$QVjNu1u;`$bgRG;25h3ksQBJ+:7hQ7(],tN'LO;o\(
%r!rRV3sI4lZm,f_q\iOE[dBI8&9ij5L+6MT/RdpsCBNU9Fm.&^`Xm@f_"cQNN"<?joahq(%`cZ_:fZ6o.4&USQ",m`3#S09"Uhik
%`m'@gjpM2LC?AECf^CL+g3)--bT.9MY;c94'VJQg9pL=5MrITUg]m54f,@p"'%G4^2fWApjO5Y)=WH0g'K/=Se2WPP;N,<%#Am2i
%!-jQ"h^<\1RZ.RklOh0Z`K*KgJkp+%\4UH&8-2f95,2,n4Zk$TPF%c?1BVU`qZ%fr3OiD#OgAt$`-X2Y)97iB!BY`OJ3T4X8HUYV
%592$8E4:+JKqO?JD7EKNl%Jfq<;nVf?Wmi*[-HK;iSLu82;Rd.)\o9_'h44lO1dV'.HDiIg'^MR)DT19</0sf1/lT6.G#RXcp=tn
%^=I.sUGq)AS3TMt0fFE_DgEA53B&?$?4Dkq1"08R-?Tsb<"s.!@XXq<8*m8d5f,/8aOEsk$A9I^^]<FI>F%aLVd!2u%3lWXJ,iA<
%'G?QYj2!Y[`:NR;\#+n'G\?ApAKEGDFudJ-WtmN]n8&j]">NKT.HYp^?WE;"H8lGUBGO91'96#!DpK+8:gX$qD,\YIOR-G<ROXQq
%;a!bf@c'o(e"EY[W._Zdm#5Ud"?g0RZHNE]i`s4u[Es;QE^An7n%imq=db=Fjd\Jh@dWWRI5/Yqbl(=\Y>g&5>],XW&2P5a6-Y<r
%*\`taD,<>RM3?o%c)CpZYgf+@h&_F/EH5kj7_K1oenmoi]>8MR2i8pkFZ;<>U2`m7.bsS;m`s)K<2$B#i"QU1M+U<0(j=6;4*ONL
%-&QsjAHjjU=tV<.IF68$c6Z)8c^sp=:/s1WlBF9fG,M4u3`*G+HLW1S%L1L8\pSN;g%$h!kd:_Wigta`-m*jJdh'oV!Z-8dKqrMU
%j?(6Ph%u%27,Qhpl%+Kq*Y7L`*bTBD'+@uT_?E<sem1NB-&NZ0-YEa`qMnKCb8L.u0jcHaK"5[dVlSG2\G>0S_?n(lPd`AXa@&j,
%+j/[QM6%76!@*&C*8#$`&9^l"$CQ0..1ut'TF3Kg6*)=u0\nLrORtZ),bcMKU=(eD+;Wf3m_oqK^m03ca=%t-^\:GclDHPdnO%=[
%&M>j93lE\!D7$7g)eU:23h>GRi,%D35se1T(6T'@#a?,)h3'gA/s\Zc37d*`XR$@H9J5hcF`t1AES3)8)Ps#u6<&Cg/f`lNlr.pZ
%2a//%]s(fMPAT=oUK3a>90,3^64>uD`JH<jVk!rSI6s<UDo3"5HM?HaK`rMDZ>pK%6'Ys]oE.4d`1<e!B4;FDE!m!t2eEU0Ku/@W
%1E[qg"5t#4;A@If-2tP.7UoU&,=4pI>4bsZ(8a8un!0mu"ek9R-c-deen35Z5$XVZg_<r4.I7FS'Lk:.UK7#sWe&$plCt5o2Pc#%
%&/!q,%1M5STlic*a6(bMP"s#42J%7<e&o8`-JB/'2]+XD4oj5%,Ho4p3<B?Snr8dqc#_7:G&:/C]jNllb5##o_>o.n_;gc!JSQ\U
%^8X:,P&kG^QXpPP9gBV@m3Y*\jhtm#R>pT@ntJkI*XdPO%s6Ea&eo!M_3Bg_7;TK*<u)UjN8FXlVZMF&2=LE)R"!aMF,q=O&8@ih
%JtrN"!XJ2i>3XPN^0N0H8^C\;5nQ'0+mH(*6D@OmKPT2B4@ociO0OjaQ)Q?1M7k1;;k31K3,f)@:$S_e@Km?a?c^:<%Q3BQ+;=u5
%.3[XQr^A'UM!2e*^WnB*\#V)#Ar068ZA67nM80:Na"0Z6bphjCY[b86YpmY(9kOJdHe/c#-h6g;<UMOs*HGa;$_/eB\mP\[']rht
%'28]S^#!9'P!:Ub8CU4hlsU\A\m-t,X5p3&"O8"GS,YfARteu5;p(F"lcrpE5sg$4DH+[;^.=I/i/NX.f>^`P0U<pR3hl1MA!sL>
%/MVba`L^L_:M+(el8acA,h^n)QC70.I)cZ&=c"`h.@q$cF"P[JFr`2,KNjU[rWM"0',p!YWDSPm('W/apVqlrm('8m:8i$cFGl,A
%[b17+_LMVOiV\+3NBJgcm>oB,9SAV*2;H;3kVO\g[!;<J3!,^dpPbj+&1?N<+^(D>1;8i0].n^ja$#ONgk:Mub^`P<a&^tP",iXC
%>TF?9)_C^aL2+'AG(H*?f/PK[3D"W2!UmH.f]jH!m>A\[+^E6KiWbRU#?*NWW@T+Gi.$;ghbH/2;A!'QSRa:0&.nO7Xi__bjrf&k
%H+[opeZfLg7]^7K:a>,hqhun'_P_A^-Pm:F?'I%QJIEJYCY:6"P]Ke"EN2!1MM#/-1$6b2jG=rK\>4UVO$Ar(4X2C&BgONd;q,)U
%oGN>@=@N_/F_-F1B-[r8k.YjIjY>Y`;2hV;h_@1P!1T*6W;'G;B*@'KFUJK[2M"TpTTo?gSVi\H;t1O1;W7i.(3H]NGR,$(ajJ-8
%I8eL3o7Yu]\2C&3U\QL@nfd8@nRN!2mQcl!E#n81+b=f*94V[#3cMr1mN&+WI<%B>3Eee,9!cJ@HG5l2<`9]8P/+6=(.2S5?!?cH
%Pu[V;HgMfWAg1G_Q[!/O)4=O+[l)('X;aRJO_\DjcD7aET+k::&BNf^W4%K!-X:fJ_.Zd';rLKK]-hVof$SE-o7Wo>6;>O?MQA:t
%8E['$:ObkYEDtdl)=lUW<6QEGF=k7!=0('0%d'^)'X<ELf@'(0-!-;CloBm4QIb?iM-Fq\ef&-r7#rKOJs9Q*,n*g0).[uP5%:Qb
%"@*]8T1Ya:r7$WK6'%.*glri`4=Et:k%kA%JS$V6]s^TLLfkkWI=G`23/RBP0@teDgUJ"2#-ThJ%)Sg`XFu8(X^&1;0:Bct:?I[H
%%UVX.njP!b9Nn6+71Of,)ne_,MR2[EWt+"s'CH`$T\\pm=iA,23TQ$ZpSt-to<\b#.S0,tL(DCJM,L2>5h)[0CWL8sm`oiEEGJ1G
%e#n,^;mi#K07P843d5jY$/j=X4IIRD)Gp/Hd1lJ?4G46@]-8nl'oba8-9Bm][kDiWBEWD;(UFss]mKT;N06>i7&I^8V,I,s`]9Mr
%pGt71m/cn<@a=V/Q/oQXdY1b0p'Q3Wjn2!g'jX.\-1[t%"p'n&bkrD+"M<2G!uZ,u(V3qP+.u2"6l3flaL(kVIR;+ddch]*1&/S?
%+RRgY!.[S=W_.clWS43W]0$Y4gH7O6!u^ahqP#e1(GCKEEY!EK%(&EU-4t)?N'C:Ebri@]V9+kr9S9gZ`*r%WM0u,Ci(h2pp2T.:
%^f'ir\lY8.'?@qO&>-YUM;?VVZE1?Q/GBag,T!B@6l4$i/M+]u+Y0r7;H:b'bf()X-+O>%$Z8X4Sd`C1J`IdeCgsh##`7PbNrH9k
%b8'X35*]I:JW$H:JXH-o6hVKg6ch0Q)\H`/lT/c@?u.Tp(HM*"8(#2a465q*h0L35Ipej^=te[_)iPt+K>%ca:dNP=9<ZObVIZl:
%JYJ^Pk:,kX#\A.j9j<B?6I[&QG4X].g=r\CCI^+@'@3WC=oZkQ]-*b7E[-1;%,$BR%@^YXPon&GoUk5_EXa8;Ln3JdZ;c%o3FMq1
%.9rltFQcA,*?cW>YrE!#HIh3;,n5$RRAJ5BlY3pUb@]8T'2MBZ4K+]2hhmRD.,M"^Or$94\F0\n[O;^Rb2)-^[;!W-I!/(`//_$n
%3)bbc#g(KY8Y0e<5je1bmAcK;6F0^RdR.Z\=Nq3'MHC:Mk']q'!hMIHFIYrM15]$%.'LcM_7d"@(,$B^b3godSAc)[TjBS.%S&ni
%T])iGTj(Pe&+fLXUs-t^jCrg'H7He-]eptSqrpdo=9?W_*hh"gQ&s@BfR/0Cnue8./QF@"8=-4-9B)rrT!*q-G1'<N04XP`b@P<m
%r7j\dLBCOl"QffNbU=MB9b-H+<+`41[6kJ5]OJZ-F0jfCr=%&4aJYe*!ZlRh,YDUj6VPI&I)f5ZfY\+A(#b<,6<`fQWbo"c@W"HX
%*D.SJa_T:?#NNWTjNA=0:u.bd;)aGmC;?.Zj'f!^#^Hei=/;gOG`rM$P/?iN_Gk)=Y!MY#&s$>kfY8sI6l:dHXB?_SkeeV(0I$P<
%5m!I&%rm7pJ;rPtZrU#%`)XH1,tHrA&F3=n.7,\:`af;.S>Kik6j;r5`'eM0-]qKU5kAha+P&je$$f(Gh'BW>SuP,l?,"Mi(!GZ+
%1]iZdVRp0eV@_;n,/E1pl+;OQC>[U:a:?tH1^-1QR59X_3gorH(XBh]kR.ne"bpnu<Ul"VHTbVu,XYJCRe57CRpqB_0GL2OH/+X7
%nHN<).]WnmnM?XmiJ)X\#6OaNpKD`0k2JI[D9F[JQ8GUKiAGIY-Un=lZ`q5dr/Un2Uf5B!>R,jT>K):r`G6h-lEZc.]Yq-*[$%t8
%,r6U>9%j5/p>2lBNoNa\^6]`;6f,mXr(I+.GPC57;-HXL,uH"hB4NnY7Oo737($dG'FLSe^]*irT#Dph!<NtObUd>+>E(`[kntQ$
%b?5prTo2HJ8/;_sN'*j,&^KadPFRrdWmk$H=:ctu4X!I)7GKbV0$,UEcMI'9/irM=_/7#$X1lI3J5&i,Of@_FCQl7W*#\p9j4?+l
%!NG>e.3bQ)lAUB<*J%*J1IrVYOs>]!Feg5_<+-9A3_oPT#7imLAf=C`,Zt]PKZGctP![9*.)1EG0!Z"Jp$jREBLulQUSCSSZD\=b
%TS_R;2-qXMVeeb]aBLkhlAn&JqC.(m4;[U0\mZ:@&U_`5llZNGg'u"?ON9oEWienG-r?O%8tB[<5])VuYfSV)790RYg2WEFi1`a\
%U`>8i6O\`.(?Eh&&gna4&fBcDKtrPJLi77hJhQ/bSEN?Z+/bE**_"HN]O\UjR>>YF%!q-SbdK%e`09fOW:Qr?7%,Hcfq;?t@Urpq
%#sZLF$;k[O0,7X(E)MHoWIbYD=NT7$fS_"!&&0\s@T49Nc3YMA$&J,o.#5#Nf6+qa-NRkVO_YE:I=>KnM6td2-3eD?nN#>WNanYO
%=NI4H_ihJ,RqWMr5XW;tjp!o0][&R`$`S#0&o8^/Y/@6``5pk&H40HE*+omF`?q$TGDNSiS5VJ1j"q)aQM53ITAKK2)$r*k.M$VR
%*5t33M(<S5><r6U*/[&e,(c;KF,hQ'Y&S'\qC(2=R%365n\TFEE1Bl=APkIXllBopKAA(kAoj4jo(#Y=iAh8O!?bL+DLk0K-kHl"
%*+.7FKCh*),#L4=3TEUAPB$^[VA-Q\\ULMs;2.JH*;^VaT+m?K\e%W:TT$F_-To6X(F8U6:].Y)]dU;@k^hn@)OtH[k9:*?X`:V;
%SfTLk9c?:h&e>LE@Y_sN8UU(fH<DdDQ@9MK!f$m*kVB$:gV$Y0NhP,hNM@F>;$AEKa&T;4K>Y`FfkS`o&OPRY;%H,R*t6((Hn7i9
%/o$I]H>so0S=RU3.^S[RNmKd<fUtj)/?rSpf0lMVHQfN4=#Ej1`,I5*+G#b1ieI^in\L$Z,W.N]ARnN$@[Z`EdOtk8T5d+nc>l:V
%GsmUJrWC.XV:ra;:8M28K9_"Bj5Eqqa$$df%M?gQngNj[0+r*.,UK+*1`,0:8mOY]a!Nn0^%r'"!'i]b#"`-_i.`[HhhB`b)%]U;
%N91[j."IV.#/=+\VGc-JZW*0ZoMl^Hfm!i%;V`@&mR]<%b[$Z?ie`XM4+_EVi8fTeO<S*Q=4"EL'a)?88O]bKdNhS8*>_r?*(E\=
%6/_hIUH4.J#bM3<.oinb*]IXGUTMC!KK.Y!3iKNQC3$<5SfQ'"-,E02RUiB^d[/*V>r8;n$R&#J7I`#UirNKYk\'TPHYF(`oc2`F
%Hjg=1+\9hV,<3c^Zhn8m;fS6.k[os,K?KkqJ6%=@"3G@)3H9N^WS'qeM,`,S2ZL9p\al5ai!&j3b./Tr,`k\fB:C"p91/n1Fn<6b
%:apHj0T0o(O2*-KT!T-Lil!.a5=QEi*?YKO[pg?Xje,u='7cNjJZ&\nFj#l*F'bXbLW%J,agM4>,tdeFhnZUn@\[aP37qBIaD_TI
%NT,e`'lH=:XpFQ1.MNj19,?9H.^MtK)RErkTiR*.<Kq_HIBsfXfMGs$joW!8R$T?99aLOTM8HtDq.:4H$tTWhXl.,IP*C;.Q0:Ol
%>@]t>44V5>P14:+_CT\i.$`MRn[ZkR*Y_P,KgfH]a9BfhU"`"V(+)(_#7Cbhm&O!dj+@9'BA1_c<W&%/<WYuGO53W?VbA"s]UX`i
%q1Wk#&NSII#"F0Nn5m`6`H@hB;P0K/bM_?1>2_;,-Allh^<.hMB]1G=:F2;tTm#A3mjOBDp7k(7+dDFi6Pj(s8ZEp];2chBouK$,
%SLR1K"6XPFM/<k/+U0M`cWl8k;/u1^i=m"p$qLd\"?Bq:FuTd^3e8qmbF:skZQA5i(p8h;W^KA[0m'qRgguUM&IiFUaBkX1X($EM
%iiF('S9ZPheG,kSO,RmANEbGkF[0u0-pqL8p2,Ie@=6b:7f,%?6p]jUfX[h@)bsb+n4)Ec]]PU-m=RQ#H-bYV5h62(?'D.f"nq4`
%5?Ygt;ah79$EBGcT$FhROdFn("W,B.8W<C2,s2a<=McNAMA`,pj^AG]O$+=k<.XQh*5/2%1XHi7g&nqQ,UOa8fV-NO"1cPTkK'ra
%qTi;DQ$"!9-8*ip,=TlJ92GgPELAjalV'i$/6SDS+2M2JVQ'=uMU\[N#`R/#M0-6BKagpB:cNidk#k3OQcO>*NV$ri%1mjgg-1N`
%$QNsBI?PoY\Ns=6-qtsf7LUB37#a&Il:EN`c7CsO%8QU>cPWsTU/X/%)<1mGY"jdpFBk[h0-P)#L&+n_L%JK,l"!4\^BikNoNMnu
%aE5jL^0F,q@X^XAiXJ*hdRN!0Ar-[qg#kN?p-mSAb`dMiq%la:d#\[,KMEt=P2jgrHOAQ64&[bb"NqH9Db2R+$qLj?gR,RqiQE^l
%-<KkNah!!^J^5?LfAQ^Le1ii&MD.V[Mf32Zesh>K7'Q8.TjBpTL5$B$Qmr\2ZZ:;">_jdpig<Juo?Yl:;:*8F0Xa/;=@`3)jbcA0
%X@hMeINEa;9'[WT<F%kAD71%2X)\@]$>&E1bk:3Cl2u=]ZWtSmN[ADGi)bi/8`Zpu4;s'u\>GE_W#F`jp-K0^(gdPVn??b-T*!n+
%Qr_5*-E8N=8/flX`PAji9ci/&RNo3`YF%gD^X"#N;U2Zn_3io+Rj'/OZ,78O'[^0K1eu*QHmedQ$jii#;6*AcU<YIOcmbHba]/!o
%Bu3c(-sD^/PYssk-d)EbLug<[S@X4s3%;W-7%%qe<oC%"qk9YVg_Qrk9iq\p9hlb&TLNX#7`J"F2um0_-;g1bel/.DH9M1YFG)95
%"%U?3O]r0_'rK)2:!Q]t1Xa;V8t(Z?Db[<(<5'`)'HNMhP'bC["ShC5(5_'t)CIoQ,(f+^DSr5edHaA/p._Ie,Y#@(,cK"_o<ta;
%<njYJG[8d3GasFee0GT]@W(Ce\tk]]HKsE26I@isUKL6N(\O*@WJLP7aGrl'8L[!/[0p^C5qmk3f,tJo=ILY.oE-_ufR&>;8UOH3
%mQfU(ABP5fTIagcl<j[t3CHLaio<!08.mbh83YOKMH8\l!l()=FZOJrqbbI63++_H_GR#eZs-KE+=?KO6V,6n60m9'*Vi;-n/rtd
%\5i5hAS'+88LZ*Y_62&2_1^PS"VF+f*<U1(+2bs_UDCh0SDEt?:K!mh5J`Ri0@V=Rik[V\N$u"aRmR<RcA_m0$&ep`[]nL2!KT#q
%7tHL1oINh:P)71G[rLe!F-&Od3f].DR$q0YX.f+u/I_=A@UK6r6H1l8.?dX$-9`r%]R_mg`hLPU:6N2H'FA"@?liqRGOn"k0hKlf
%,-C<o$?l'*.sVAmq1f!q[<,m"1FMW1<D=CWS/g_Ki8lq=OW>hXR!E?bOZ&Lc_>Ccc6(*pg%!q&fA5:+C26\8p+EK\YbW+`qmVtd=
%m^K)t/;B/l`>jE!;E"e7-NU7pF,2ijkI;94%R4^B(pL[DOa'Sb)m3N[fubrqG7tt"MD(l;KkoUpAC/Nm\06Kk7gXba]KAdrl]PO;
%Uf+]3CE3`C67sY\,D\AgE&drm.-9@%jY>sj<oUlf"6,j2.gELG9%pXlbK5a*E1b!!:V%ju\`K'n$i5E8duhNZ3VWhD0+&aEV`>Wp
%+DDNhU#f67Nf^t1bE6)hlQ'LrNoE]S&Bj<?4WfniN_apl.u146!@t'+J<Ec13W0XITGFKs,d^#cQ'5E&A2d'@A3:Vn3t+M1imQ3`
%:3dVp^L>9+Q+XOcUmqoL$BiA_c'Qem3:9`Xjg:"Cr5aU6L<VmiQi]cO[Xj&9&Pri^Q[j+YoJ8Zk5gMbW!>L@n9n%#rZ`0%HK@'`J
%8!^@A!X9pNQDj_73L[U:kJbO'h&\o4c+rDE((t,q#FCtIN%.5.jR/3p_XJ/7P1+(&3tJhh;jr^jaf07g67%dR3IlD^,d1>P`6';P
%O9XCZL*NUFi(1<\NP&7T#hrbJ.(0L].fi-q:'Y4YjF[(haT4O/,KCrN9GA9[3Cu3+Z@J'!B\lK?@`_B5jO>8_O[Hq+Y]YN>b@40r
%Mk'-Q+OQHC:*pW@TF2HZPG@Q*6r!uen9%>Ia)NHqlRbZg/-`R^Gi9q,!eqn$^I\br(FX;:KA`LMEh)cblhkPbO'R:WS'^kg6`u23
%.>F?";3KT*"sKnHKRQQ+jD'nsJ\5"-ZC:s;8W"Xlo#Jj@;PXR>(-(,F;Co4UG14"[lj"0u3$!AUN2rgZ[j'4["aZ[IAd"?_4C/\"
%Bad+!--XI/>B%Wh*5lF@n^LMo'C<5oQnPDu8Wl]"3_oScGc_Z@:Ab_gQXe;\:[7^RjEM;"Y9CqXTY/Eu"/SO"QP9gH>YfuPhDeCi
%;,'-mN?]_.U]cug[9:AUar2X/5K;<,2,98^e1E(`S5RpSb/hE!*,8c0`hO<[.;1i$)p1/#<"bWFd<&d9.4,[uB%-KcNo2",G_JE&
%8Pg+ADb_XdL6<?=N$B11H(H1')0J46K$45TA/aH5.:8V)R9UIQG]?XL!%;4$`I/f(;Ol_jS"6h'n*,kMB.KD7U`5u@HpJOG3hXWH
%>5XZL1)s@1XuNB^=@3m,E@&^D<?*_m0-t^"iDtSm$`5o:9E=o=;Oi1H-DQ10EL,XLmJt3Trds+(;H.<eNar2=Y3-6IC#Tis_=9Gk
%'9B4H)+pD#K#hJ*OMm?m!=ToBG;TV`PEm0l%R)<#8I0&8&LRV4ai4l>!FlK!#]\"b8AaU\.L(#3c?TSL&&FbXY/R&g%o;K\<-id]
%S:\,$LF56M9\JBX-dMhoLGL^-Bo!.;3,2WI$PdV?fp!I5&oK\mbDflG^kU<D,sS']"QBD,6(-[\9%7[.$n&%BT1CFZJJ6N:S?0(U
%nJ4<%iP;sJ@>L[/;3:h#$7CoKP9o@iE!dHBes-pjPmOObnE?*#5Nd\ic.>fd3(;kpmjjXlTR621&l,D,hutVU4A*?!+i8lKitmC<
%T]n+%#cA>NRqt:hK]C-WabUd]E)5"BNk`Wq)a:=Mi8F5bfj%&;*0#/9"=8\a9.?X?9YfRCZCB?K)],#p!aZCU!$Au`9GR8lq%W9D
%'Kf%X9na63<R3`hEpb95'KN4'L'39kQNe$aCCMN[^aFsX/offITfZrGPJkBJ#!PTqHH?5\R%$'3i"M@4!<OW+bh^*cdl,=E>XAIP
%34bIJqRQ)OE\r'X!3^?fF2C'b^aH+I2$/#dJBec-hBX)?r,3E;"9)":OajXgmCd&=)uCS@#sO)2%#m&pmuY<'+_]g&b]WT2qe^og
%p=lB8rGLW]:mO&QOff)nhe!KsY?`I^[1U0/?j?NeU%5q2'u)6d>DM<lp>(fG&2ssn-=[E$EQ\-Li:dqapILsR2E5!$=l7GELjlSB
%-`#4GHAD/VJVo<V'S1ZsUUZr#VhOh=1^Dlj(US*Y;mLoS3,))X)ohaJ$4pR;^<'tWO@2[t%6?*h9$nW1CE[N^E5&=6BMte<"%5Hc
%Z<#1.e^QAhB7]k*%>rCO`I(I3o4tp+^a[ff;ZRYumf;W$-h?d_6dNqI[cPG+!ibfb`4$OlK+YhMkOK#`I+)QEq+l(G2l3o)qb6P:
%_+T;`l/%(lkB,$1gtV-\KZa#^E`09<]h&4cH9q8u&tDq*2l.$qc#u@,E=sAH!p`Rl,\MW7PQl:%Q2?J#80E+th(58V-<6p%ASe$X
%>++5l:85.UWX(:fplnpA@Ke4!18$R3!>ArDoFC.p<1Z&18YCN;ESf1G8YR)6Sq-K82dkL9al9!FDbJ9CUV&%:%L\Ye]W!ppLj2@1
%':9*^?')^-T7iUh.rR^VYpNS7]SBHWhPl@0?:!HB'_.lse&!@e_E#],cWdE%j,Fa;PV"B+)u5JlUKE&ZC$oGn)9A:"A9=]#]]m-$
%R;I#,2l%iU:`METG/0X0,QcKUAq('H9uDsY.e^j*kILr>)kX1HU8Jk:^Mn4qEP*`edjrV'S]=9o$="f;38Qo2TQ3I]hT-'ni(,lb
%!$i:&PKsk\8^'_<iHXBO8`5To_Rr_6QPaXOepqNe(iSKbe5cgo)j`NmT?m:[<'c%T<Q02-lPAhk_0Ao(&47WX(iL\e1RhN$h@?>m
%PYh_+Rg(9.L_gnH,]!94.,H3L/A`glbaOFV%`R0_3BkV7hNT\45tn,",P)eEmKLV"`6A'WN&Pe=J=dU92Zsuh$][0[M6\&]GXFe-
%$KHAp"O?uma.#*of!]&#.K:CLJd1d8"r0J(F,i2>?e/r1h?%_UEK!d\hW3buE-;`^-FXuM`QI^gM3E)lj%X/:nsQ++MK_]sfe!bR
%>ZK3[GZ-]Kh'%#%V3*:D)t#huR?c`*4[HC-P2T,(:m_rSn8;"JVFp=^rE./(#4NtS/"_AA!,kKPi?E4!G9]a.n8Xm!hb>K2UP;q9
%h'?AnWkc72HVsRpKAB6s_8NSn(ejE[,5FRIh)HFH.BRZ32nJB&R_h@q8PT7AF>m2#kN"QpEd%mr%k";Go'%kF=0UL?/3`Y?KA'&J
%+K0/P25hC94YsD`LWBkYa,o*eM%bomeDr/(V9g]uRs1:=JXXFAB%UFOK5#>6*O$5E7:I;G_'Q>J0::Q@k.5LtG!eNmodI*b!el%5
%A2hH*aAQP-IK?>[.'f<fHmn7]fhJVdBM+$G7em62#E%lF/d^N^NpK6[#SOJ/fhGH`$q=0-2]`T5SBdha&/WHa@Rl2(P+\l&DA7%T
%ku^3_;+>'.DcRO/<)>$N)\P>7Et7S,;D"eG$+(X!6im=ce8F!S30@`;mH-60qGjA8j2*'`;)sG=6:jgh2j>CJj\inMQB/*%DA#@2
%D\$YC8NCcjYh]k`j@6E1ORSBAF)EpAHqYmu$<u''46:Y'EJ=('_<lt[KbP<aG*=1l-q_#*O>)2n:@;^KP)P(LNQ/K$Qc\&/hubqS
%jDLK*KBrpkGI-6N/8mgMQ,1!QjDI0\1!?Pk>eq+B(Jo-2ll>,'%rsVWcXko5\/Q=N4@KD.%11@73Og#;$-ji?$PlLb2/Y@%PG&M.
%DDrsAHS201a!1a%jid]W?dNWg-+=ii,D5mtgeEihP9C[rc#++BM4LJ&O`Q3ANLS@hUMPDemUfNl(>=Ur]:GK_,M[0[["L-Ch/LXr
%Kq4/Em9O:?::]1W(-0sK"tsi-.,eH^]?,T]l<HLOLb'o+L]t7,\2u(Sk/$G>B:7*.&8jE93-[iNg[1/qTfhL]UML@,6-AT7JWQDR
%,i!:9r]&D8_<lsoWhOOG=YchimCmKrbUa*)Qm]"M0Q8t),.Y9]_;,U2&0.jOg)tAO_:)V=]-0qJ9Zje\E([fq]1KkRpBtq!M/sE)
%#'6Ib3J,,`h(1k=D%?!2+6?GA'\lD;;KdKp\!o^AMF\`>DM1DTU8?L[JimE]<?aB(Ii=(]jDJutEe%8f7+1&r1?!E>W+ASBCc=p5
%nU+d6+TXrg"PTF,87`l$6'cbV+hP'59mTqXf$tDcS`QYhj)l$@DA)D!Ht.7,H^aQ<=iX-T19*r^iAtt2Fdlb>lQ/rTF][8lNPS>6
%/1tA#Zareml4:Lc@Ij]gf$=^t[g<r#?*\"h.\rP)*'S5*Li*49KsQX2.Clrs:F`'-"FNu'*7.F;j1qYp\uBi%J1.&%:,;GXGj_<(
%V^\1+-ocTTUqjNtq8,DD3L^sEk/dN`ph(_"(K&9/`<j;"%d#)]VPS=D8J%^j!J(;m-nDiT:q=b+')rLf-,L("L'm#h!R_Am9^XGm
%M]oXQ`sN`q,.WWWiYdlJOEJ?u/!)jY!QrRF-:fX:*Yp_Q8-NL`;uuh:c3%)aG8IJfD8G5WC)I;7S,C!JE1='dN((G\E?d=UBD`'k
%RtC.r"V;)$4^FT@\=dg$K^dOsKKEruZnf/UL/;ls5]GblB[Kc\2a(oW"q'98!>PDkIp2r)L>PI#ALrJJ4`=uK\*XH6AT&@o@OZ!F
%<egj(Ro#ATk:GQY,)8T(::od_R1&A)c'!*cQSl2c%D#9uLoDqfgVA_^!>O+LW+FsTgod+2Z2ecDAUH"IS'!c'+]R;VEQ,2"/9'?\
%&r371[`Rr,3*fqHp3FL.*`>:@'-B`*Tgf&e($EhnZe^j1V3l,*8PNdTOq?^CbP?hoZV=o;J^gZS>bO!lCr=+fI.fP[RF8?*qbkWr
%8W"<p2kTD$f<c/+Qu1PiH1t.ZG)HE>:s([67Mm$OaEI"t&1n+>`f8q#.qBS)KW7T0;*.,P-i1!-D(lO$nB1Q'8Z0V:0-K"oX/HI>
%a>SbXie7`mL4i^GF3$6L$IrIeF.ID@54OdZg\3S',L`YV-=e(`8'o0iODTf9LnToIG"[QFOP4Y4o!oi`a>Ws)aD=bq2SE_u%=r=/
%%2/hU_:YVt^m18/fH(7&1:DJ.2`XZCG_*P='cUX%'(d<7HSheo]6')@gVt)b,[jBJ+LY-SMfiT^fVY6\L7KNsBc&T@9+fpS&TUM!
%!jOo\?d#IBnI!HH&_i9;W#R$$M!^U4&DK2&)1at?Cm+u>D@=<>E#Gn)Q*BY+58WSbZOnTa(sC3VYY?@0';:YpNV#Oi&Ji5A]k4G&
%?4aQE<Y+[V7;PoM)Ir33*kh(e:.r;Zji?WE!&,9]"nrYeOu_UVc<8N%iBP1oY'=gYO-$02G\p""?+Mpe'7U[0WFuYSjbh[0Dt81l
%F1aEC6mo\`Y.pGQp,*aq]2dsccN)^!9a!tOo!N7A$ek+(W%RY"d2mCH3p;?/V:^VQ#o(c:7;E^=KNs&88VgAF\_9KQ]G7JQF;E-#
%g12,l;=NR_.1."pVD]"oZ-=n_g-s:(1ST%A>!ai,D$%#Z#;kITdtp=i9#D6Q7dA#>DA7D46oeb4`gio#82TfcPbt"(H7oDu%>Yom
%WWu-XgR15ld\_2")""CZg''na//2N.,FJVtMF+O4\L;SF:5kMV$uJV2J9+R"g(Z2ndmXSs;02FH!,XFP)Q+`&ek,K;XNHFHNeMPK
%QM>8gp#<PjTk@;55Dm2jSfK['@_p?eoH[79'V164h;gbnp^u+<hSEf&I54_RKUSGK)PkGj1945_]-(^LPUjPF!2&h`i0mU.2.^5O
%qIP]1:/ZRN[-T'Y0@.?:gu]67D$M[B.2rHr/7/Eh;sFaBS-r(MFb3D_&kmJsPLYq]9a,-Vf$tb'SWlmCODM3'SCb.7r]',%\=ko,
%Rs#_F7?im.]2K;P2KD`[<8fD0fqe3!!,(D'e*URs.it0XZ76D61HK\X1Jcu^/a;e`_T$Ir&qT4^CeBj[(9aI;M2)C-L6AfmbR>u"
%,Q$.;cUbV!9`bl\`?p08gq[AD^]KIL@^.cp@T7/99S;YN!QD31:W!_lG#Q\c19m<phWIFG$Lr)KGd]#NU)Gja)l?Pq;l0a3)e/S)
%'T)4m-C/I6d57Wf?kuFP&iWW"P_fkK(-!P]`--=4c%:d8CJgbW,[i<k6F!)F!l-)r)k[eU4,%,grZ)1/`$`b2!>4?4-oTRD-l`T5
%7aN%-SRSkmCRW.Zp_./B8`c?#>i7oeD@MC/@q$*b!9Z!c&t:]d-]IDS*CTuP`2s`09`ctj8)Rh)pCJWTi36'>/DaRWYaZc;Q#Y&t
%bF%_%YQ;ZJ-o]Za$,HqPZdQ'j&\L+6)cfD/K8'i!NfjbaL(/@,QIubB24U\*#8\48DD&lD_M3(Pj^cWt2`Xj:/8RkE**T_L`Cn%l
%*/9Fc(-ZG7@+a[g_9&MT_`#U<L/$Q9:5m&oBq"%+#(p?JrY;tGB+Dg+0q\BF0PlnKWnYO$fML6)EBPfR-A;rZ8nDEEie!4lAe[/+
%^l)F$Y]4S`!!S)Dm"cNJ@AE`(9Ca'V%;D'E1`11$'!+QS_T$VP&tB+4)sXABYLs8&>i'?DCm&a<_ZGN$3uY#*.1=n(-89D=1>`6e
%.+R3@@Df>C0b4sV)8f_SU*sgf1ZMlK3=6^c)":97Kal4_O8TV,2ILW([bI46T5kgZ84I">JC2oe'Jt9V?AWG*(cHD@i-Q+S2?Z=m
%f9m/i92+E<UTc1p.PF(afT`YXa)ia;S$(_*[Qn8RD$frnU9G5B`SE$&RWSB[B4FRkW(L'P>t<WgZWVs79f=A[U'1iBhJ?d($ON;E
%;DnXlKhYkZp9-&EfZ]=iI\<p-]>tX`:tUl&&oE3:k'YMg"q$i.@\=`S4]j)RkZsjciKI=uH:)D/'.ZXOfW[]1ofblSF.dO\",2^U
%0Yp(Pf]3h^KZG-e9k*oq7Ua2a`]#7nCe3Jo>+i)kbc!rr@H0Ct,(d[$j%bEU",.3%Lf$+R)Po"&.VFngg1>j>%=9E;*&d`u4)C.%
%%2T^+(X-mOA8/?%cn=s*QRNDk-CNnuLKJQK0F9b)5]G@:I$Z[+-VP1KN?_U,1)^j[NB!dTJMJuE+`3r7nfg>=9UJu,_+#i9X23p<
%Cehm72^3(_,]Q$0@,i/mbR4t?k?-1n_@".l?\ob._0uX[HW<'PI"8GP:n8/P((`BU:B4uT#TIh^ZOQ%e'h).tP_;b_N52TZYi.#5
%TO^@*L7\e!#";rf_E/a4YT_pULcGe]DZOj"7:@DDcc9<!$CffW>hchT@07YgKa,d*585(iEe"X(.:.mJQRH\2Sp3C!"3Z9t`4*%V
%iI8TTn-^!iM8=0j(,dF_=j"U9"R20Z(,f>a#*H3qiIo#jl,pktT4TQs:tX-F]poBQc8K)K)%%<[$\hs2;:n7;-u<^L/[p;J`cJ1(
%ha(\7R)b_kYXu^2?&HM=2+ZD(TWfTZ.oR-?dg`>s/8XB4o!'b;Z9RDn:;Z]7]O,;XAdjERLl`G'HGHcD)Q+n-@+_Dp7f&o9Y"@XR
%flmb?L=t[#d\[m,b"">*JqQ:_!rKj67rhcn#3@uui$6knGk+ee/32>`ce3.DK2&Ng-V,*Y43Jdg9*f\V[u2uFZZr8TJR*tNYp<^Y
%EB5#W=pk-3s17J,>i;e9]R9=S0sfNbf2_*MQL&CeRmY2]YcfcfP#q95-+L`0^*$c5LtKf#P]VZ!:1;RW8qRr8CD&C:;m=jfH(+#K
%?6b3T_B%dHQ[0fB?B_&(iODPe+XLD6mfPcZQ8mP^%(rH):/D[CpXmuMT(B+a6j(Y>`Eb!Eb&Gru%gZOhXsr=f>Rnof7`I55+c<iX
%51L\!F\&NT$KaD5$-l/R7V$;7G9GKO)<\f&0WqDC!QSq*j#RJ;A:_6;+X4Tl\.4t-W.\rDL>b8`"lPilJ!qI(CPll2<?OYcMJR6\
%q#YFSS)De]D%3CO$Nk7:2&17"[\ejXS8kY[9*RpM`ELa4&%KddeN/UW?r1Y8*XL<=[&/T:pKJcB.Fk.!*1f_L<.*l`!*W;&+U6kV
%B2+.$@a$@JRaQ#V?Rj<h@c:-Z(GKVABbT+VO9JnqH)2KrqLCqh()UgB)FXpf22k(pUrop=YMl"@"iHcK3*,$i,2t#]Le=nKr'2n?
%#nMPDop;B*_QQEA9k(k#gg<S_C!;>R(:dDg)8$lE%$AG"LqP"_U@K$$>tn3rFt1&V5QM4pcH7D;E3!t8:12fY2X.1$(2@tg;Sdrg
%9f]-(&f"SE$t\oAQ!'X\.C;?@K3:R-M\)qQ@_`[[9`f>Q/U>kl70UEbWX32<YFj7Cl.;HaX8SDKlnMC=25t[_djh@9@J%1)C'pBE
%hkuuZ_?=;q.Af-sMU7Ma*UN8bJQ,Po$8YD1;%7[gZH20eC83m?U7)4t/P8Qq"A!0.&?:@($(uf`!r?=W:d2;Wfb\mJ.]MIF9.<3%
%bHPD0SD%VD]F-X*f<dh4;c?dXa^oje@qI4UJkJhC@Vcq)V'Z5'5[Z.Nf<\?k<9gUk0SmN;e5=8Q0W>`:YId?jKN3%^Uo'+R&SM>G
%e+cDNEl"MG<9lK^;-unQ.0lZ&7SV_h37\m&l@r]JgDGl1auSt2U+T[`HO!!qGLKUG`o(N`P?hBYe<2W"jA8q1?m;F!NO&l=`[K=O
%kiKDfC1=L,X:/Z:=0Vjm5cl+'48`g7feWJId/tbL54,c5DFpJG>YR!3dum[EltM+mm\-NjB[QZMRbY2[)0_OhLQg0"_4@H<33XeF
%4&(?3//Xs8=:s4))UR^kb*=`[]kRk2S44g>YdTNN9bi/GCJUX"OZeri>^;ajrI)d"f5o`SUoQ"_3l0G+#&JTPrBU"!@+4VuiM6O/
%9p9piF(uFJNJ,eQ-'k0WKNGhuPnGA$;\PESI:$F_l&>aJR[L'7UJ478m29_Dfl4s":0qo($e.$/,8eHMUhPF7n0uffRSI#k]AQ?r
%1'Do^@]"tc_SK<I9Tu-j'uN.+?C]rjR&7YP1:e/S:#Su5TP1.h,crp>5<YjW@RV#N1`]]#iC1XW=!oC@&VAr1r.%F!`t!qP>FM@d
%'2c2[e"^%[/PVU<eBTVdd`onUOp[MPE]!J!b%:2M_uplYl!!0kD8f+KW>%'j1nd(J<`hV`MkD^sR\g#5R*m<`+Ji(Q6tm"bj"+'h
%6rRPM/Em=6RM(M26R:+FKGr#jl1&a'P?+ZfUk-C#FeGOgdTI>2C!*Z?b*SubW[,]";iW[@oE<1%-EF&`.n.$_&sXZ999O8ZJg!jA
%00Y&W&^jZTEDV6Dbp*<9)ah1`.8*Ql1^"s4Ji'"Z0&6P!=2e_W5J#"2E6=6]q=?W&_+,.PPCr!aO/CE)`&n2E9f]"oQ4%lCn];Ic
%%JhBfEC,\g6E=FEUT%FT&","M8B=<W.Q3_r)_^XU6&gWKLB3CSpSp/a1r6\QB3QLRg\e]X>2d9["r(3jd3q9PkmfA8LhQ:O.5%'0
%$b/GjB[M(90&2"H=$b[m.[kbE>bipHBY'n%_\*ZcLiDBBdnQOC=#&)SE"_^S'2<NZ`Igd>DH[CCOQ^sWK+VBH5-0S(b2G(m60mg?
%j?ll:/gI<K%o'DhHC.0M/lCPd$T^+U-\)Z+;Mq?\)&aE-oqgIf6W46u3*-,Jdq?HQKaV054\]mUKr2pnPu;o4;bdAo;^aI+ftbp=
%0VNRIRQb4JPFW0NW'[1PYb4;nWF2F+YbR.K9]iUdi[KRJe+j2qGd<\o<7mJ,)cZ%R3/r%eKdJubP)"m=*8+%M%jEhJ<*n@_,8NsR
%)6%T[KI5_2a[(WJG9h^U\A1BD'Glj6V*Pd6M2quT(j&V/q$[Iu-,n&0d'3(u)_>Z1AOEt[Jqb3,g`Sn`AS`W*fZq%_!C;p?%:"lV
%o-bnoL4LZP8F6cl1i^*GTW:t`JRiJ'5bRR\7Ro\Rm^9Y<k_Ig9^&?j^s8U%[_UlQ9H7:F3O@\m6T<>Bsgi)hnhs7U],(FV+?2p2C
%?U";)T3gPrQ2gR;k3\X>f%.&(oBPW%o'GHbJ,79oq;RTF9UieFs2cqNid[:ck\9WQqS3$1bJ)lPbo\nEkPn;HQi0R,qo^A%Gh+6<
%heY4As"6lpN"<3i7!O)\3:Y*Oa,@,c.$UoBa^'>JrsQPGkjZ-DV$n,@W#6kT&m>DCWNXq02P>QlR@bGt6(TCFG3=2Ye3*9dqEd72
%3l+H]Ef+>3&EY@B&Tht[fds`:SHHGUbI^NsjPngi]<or]9qg7ea4]VS%J6iRb:QP4Wo6a)K1)%Q-heatdc`)#I]*qkTQu:XTe.9L
%da#,s"CYb3NV]P%b"khZ-Voca8:+g>V[X>,jKS-7<a,)<oTcB\/2-'ejI8_H/[q3CrGMDmqr6d=:=cep>H[g\`FimIcj'4%4kgVp
%CNXC_/i#HF/lh=2S`=okV)qXST'QUmcjE)b/8u!&%uWPi2]_ej<EN6\COq?m=QnF+B"@408`dq7`EgH!.a0BTdu/JVmkfKmn$/$j
%,[Ul3_9qR6C\t_^muDc(P"=aQaIf,Ng/GruKH,hYa!u")Vb&<-]2X78jPga3%Z)eSjL4r7(\MCO?Cc3+TSf@qU$;`5Qf>i.4.=uK
%,1dOT[E0I)`Aa!:Oc+C!nf23b3oBS4U%5L.8t1UiS\L^bb8+um;2W5;IhFP,<Wdaqh&_`)OCGS'Q68!?\N5(4h/&9T.X6;8N`aZV
%&K=YmDJajS`I;g$$po<SH&>pp^o?PM,b(-MZ+ge]@]Jo\;[[)/eOf0SdR#6ISp3/@-T1#1KD0=A>GBbaMku6R,[7!H6=>Y_Mkomt
%6;h:CldK*FPF!St'tG2['_u$4hL>m%#CgaK9V0M\84qg:b.U`!f6$gkAaTmY0N:=c_X(g#ojMCW.e/P9(K2=B=QRUZjT/+kUtc0f
%6_:BDg[a:9c#<L)O4nGpAOe[$arELOlW\F?Ll3g!)igY9O7d*Y^SL=,U2gnd<_`#<F&BD@L0Q'2eu'(6r(]=`@4Idp,n!t^[m@HN
%PQsF8%=,&G1-'X"WJ!+hGM3p!!Jlb`"a*%r.ec[#PNt9ML4qYYj.mA_+%6J+c-U3c["T_#!H"O9RfZS8GCmXu6BiDPdcmV_>%kY8
%4V5CqRW[<JP+#BqV\eAN[Fq0+PV,rW8841u?(0OT,#6ogP[3d`gB.UKT5#h/(M&kO$`*eeGRm<N=$4$nUTTU2U\`>:CglHD:j=/A
%3L!6oF;g`9!chqalfP+Rlt1kQ@"4;oX=`Vp<1)J'_0_[/G&O.U<YoBno<BAHPO8R6!\u=n'2DVW8q.F]?XcIF:/\d628*$+CJ&\"
%.]cr\]lRu\AO8<^cRGEn9VA8.lsJ3<8[VCerintf(WWD"ai57Lqae0"h78/XF,><^p_0'hQRYH["RD%&#;XonYYI6ankP>C8_4R(
%^Y6Po;NlOFQXgmk<LG5Gpn9c/SNXLJ-N+<(dUR\7H?1dHD10q8:J!ED(YI6h2d$tHK2SkBZ3XsuRJYnq*m`_Qf>$B:qnj:1F8mb2
%I;Ep[RGQWe,ON]V`R9XVqh[G+[OO1tp2s].%-1QrO;8@4"fba-;O+CX8W[-b8X..c"Xc'K6>O//k,L?\>+)Lm3U&ZiVLr3FD"`&F
%?A3V"0V?%\fdJ3)Tlk:Z2rqOb+RMidgmr`[F%)XF;]3'"?'9-0lZ=*E3PF)B3eWE<YhK6]eJ'ehNP%+DUm&i#ecmQs33tT"Y^5P)
%LoO3:I/h?`\)A9E8.[,GC;]i?S_KToQ`aQ7Z]:i.f`R5YWNo1e8f!/Y8dRC+&R+)MXL8?PI8ioeB7&N-T/(ZmhD8V[Y_i9_eVf>;
%DR#W!:+tbABJ\HPg7.K(D5snJ2/dhLFkW0r$7[U$5mg''VF5-u7(,p6rj3YUPD=kii&r()Sj.fqgc.`N`dfrNI7gg=Tc@#9`tXF<
%F"Af2CGF*Lm9h]7a#R)g>L&]CmpXK.3AWR$4H&>:9%)D@dX-^=hr8aAOXYk9dgiBrk?Tl%R643k*`:F@@)sDR+5"=jZP'Ga2IWXg
%[#m0*=Vqekb#5do_PqgoZ8binW)c&@\QJ1uMWa/sHWTar4Ytqq#I%G$$?O>C!:1reBAGC[+c1%TbhAkeqT.]S+;iZ2cpA;0&ngM7
%Jn0EAZ`4fhVI)FS/6,e?Q(s#u'P@*dK!sT>5G<H^+2g?bU8nLg\j9G>S__2S2fWYSU'X2i'9*Xg\mE?BO@^L@a5ciFfWWVmIcaPi
%d5tK,i#k"flW^YX/4Xu]3*JV&*7%6'e`*EI]UOo4.`7i)TM,,bPAYUte9<M+PXKEtW*e?5Z7!]!'sN@%Ne&mj,7qLqXWp@'N;'@P
%W7'6j+/CV)B+&+)<V3Vj^,nrkojTIIP_-\;HqtFl>N)QI`O(U_C^r\/17-&(N3$1H?Z<>uW5W"*ZA^W0W3iuI2231$Cf(,;h"[j^
%cBaUR<+1)p,Hr,YWn/$9U@mmNQ&!iTb1:1<aN[n[Gtd@@,k@q]N"9B]g_[t5_qEc_=nPq[A;`C73r7]jC,L:aJo/e.r@mkZF&PRj
%Cd42ST0F?5fQ=&MRkpWo]))T[c(7[3_Xn:+DZ_1bSK@cYG9Fb9UM6)BcHh.S5JhF-jMq?niIMg:^tX:XC>u?':ombY'jY9&cl\dp
%$O;i.+d0'F2MH&KjK^@Pa>eKO/6)!^Zf@3mWb-$*Z6PR7]Q)SB<L<,UAV7^@$hLt<nk>/V3P2mGgCQAAPMV,l"6.\AaC7h7KT\Cd
%$mqT-X&*nM?1GKTbUhAdqDYr1IBbMo\9+<lY%I:%<S]L:l\m2*b]-4f)b-X%^>qGBodA&o=!*nMOi&L1g,*S*M],0lOK'<m<K61A
%9C'8=]N!`e!J%Imb$2#C?)pmZZ]^L<>b5g,6f*]*?V'963EUKQ58$K8,6mqgF#Ke/Gp`u`WN'AeR>ZE(0f]_agU9>t/dkt@CW&+q
%*-3jO"PMML3Npk[ETZ[422%]h]KakL3e!kFq['"dA7"LH(ZJ?S=akt.EiO;60KpqBHtrQt8LU9j6GUIJH*Ck,Ciki1%"IiWfqqMb
%EHIq\<hBpLF,A`SKHCDF8J_+N(,ih_ZMc3%nO@RN-)\);c9JStCT4Dbi5f%YHMk_I4peRk'9`Ui&nuXJ[SVlFU1N(JVku&DCfVH'
%:(Q3Nh0,Z#Y9N:)+nFBaai1.ig&K74e9'NJT)D;-/?7e*]@0S+ai3WY\U'j$;,k<OapAGC)p<41UP2g_gfkD\+qM`*S8.b*0BO;)
%81u`mF9E4f;?AnDqOY#UeP+ZOXPH^5I+17EMFV0M/GJlX[bi>?DUG^&7mr?"/&`6)=Q;VH3Kb:LcKfV<j..=:imGHsZMeI,3"R2"
%pfAYsFe\<:]]]p'C/Q/>jAQa94O#XSbhS)=m)^j&c9X[-/f)u*n))$1;JP.5cXTcS5qis8MS]O+Z'1)E@0I6V0"km7GXp>jq0B:p
%+X@Jr*@BB3\@dUeo\;!.$LI8Yb!S)a=CSjhC51$T_BD`*"_s7#4[k?93fCnV(9S#O<SEfj"FKgRT77MC'pSrK%o.4BX=u-:dgPPN
%Qn!_KGf=foA,pnV[c1aTKoj_m=]gGUZsXFYA3YfR(:0b7%LBCI/6_*:pL(I#P:`dR:*!3!RRMk[`PG>;6>,$mNX&tN7%(_>S9/^8
%DT7QY"jhk3`%qW%n(iQ*af5!igU?9%P"R05,n5/DhC@-7,]bO9hRAOeDKP6fKOdo;15DMA$-C.L8BV8D>=_jQ$rFkk'L6rj8FZ,;
%&9M1kD2NaIG'(n(ju)<#%G7GKJsMp<q8Q@I1jO(L-<Hn@^,A;JE*\,eej?SV`$C#?l,A?8U&4S'1j`0=5!Y+[GZAA4,4`oDmqc9/
%-W78*"psnUlgj16Rq+OQB$L7C21+L-k-sM)6O#DVG'fFc=WnfDE%8Fc"Q%r8:/kf!0?J[Ug(nfkW=n=4`Mu_`^lb&^pFs@qA9gJ#
%1+2G^i`N6Jcj(;CVR<cV"7PcX(FT_u/nP8;,YKeaAmKc0CajP0[p+ZSY_0UF#<Q@H(FK3fC6\KG/l`r<@jH%_U'Mdo>KJp#6=3aV
%bZY'_-Aqpc8[s>)ilRrINq_B,pFm<&`%Z%5T1AY\ngUQ.T+_\@k3#,Mh<`<2@;=N5cl_N+i`,97?7UkJ)7?gqPB7SW+gj4D@!QCn
%==)+@AttM]c?7a7KA"2CVcY.(a#'kq;Wp,pjrM4i.M#jcph6\.hto^R'`nZi##F`\Wk/`iLR0Jl1Dcu-<W%\W`l"fsWY,]/7!FO-
%#,ks-;(8./k`K3s+`b%<EAZ`"S;M3iP=>'NQ%VnQ?Z>WZX1V-;;>QH`OlF&Z*"nau78O[LN0Y;^W"dM"%c/,iC^"JGaMYH5bN=F$
%j3*#c0X+I+[pE&h;`=j0$)C'C1"!FG!oO&e1UkBV`D<fOPm7.m`U?MQj@P'6)NY[\`ZoI\C*!gKB&?=sg'$>?7n`J"m[Vpo<-ID8
%KHa;D58_XX0mdd@XXVtUj)cNK8<YR!l%!?@&S;Nn*31'\+ditU_;X#</_(^*a-*f6>"GFI+OP0Y")W@(OE?K+8ZX0_gu0Nrg.0U!
%#Y/6D#U8JPXE':q<7[@;k`_$ON+`iuZrH0WW0TS4e5^M1<'JHY>:<@N)HSolK4^[gcsY-bWh"4fl(DFL#B\RtK;+2n4h6tV6aJl$
%Y^5cE>T&u&E*t(%2(hAtKeVfmm%n)*Qol9GlN>KY,*]!%fFQ'?P`sm<*U^>p/2Ipg^`XG/[#D;%A=P^[N5P;KbEF5.('^],Q_S*9
%i[@A6:0\bNbctS.W5F@1_`@KfLTsNJ`cI>$Rs;2Jbnf.Ba_Nh'S4p=gfZhbr7`)"7Y,Vqe^/=+DAN(MUeQ*JNRJC,??BA=c'VQeC
%AQ'(1(tBt*"iW5_a7\FCR148Cf+C?gRk3%%3-,qi)Sj/LXXEWUU&&r1%p`,hEb;mH[p"tY*BK3\VI/KY/SE6ZVRti-:Vo\WD+"R7
%/mi]D_g#ad0=ncnaQd"W+Q+L`8YnFjoKM_5Op!Ti!*L5f1pLTJW!?TX/2*m9-h06[0;N;);HHe;RY]sTZ`.Og";tm;V4VlhcEp,;
%i\GAiWTOEi_4VC"a1T;u'Z;c&%-XM]VFbOMZ?)ttUAf!L?t1c^5pNK\3k\WI]uWKMBiYWX.Ln$d[o]qmWZ1r:.'[J`l^tl>EMaZ_
%[HtmHp@=5a@kEdq[a7C\ZkfYtNOJ?aOlc?E(Aan(15f]hV0^]Z(3_^Fd.B>_8U%G="hcX5R+'X+8)8t`kG0oZgj_mr<!jSs]85HJ
%+Ka?s^c_26ALSJVUo?D4nd:M7RDOr@1Qd$B^Ls^c@%eC+MmNS8+jP6i&CPEtEor3'1Jf\5:>^M`I>!8[FVl[1j80H,:R2umrQNS9
%kpi,!="S46prG(RCIC]kT1(/4=_9<M$Y.b#;dGdH6.CXO?@-MZU-?dF\SouWUj&-C@7[U:VntKSNPP(H'Kgmmko0g!RQLkR>KOgA
%X=R?e+XXb\-"Pku=QmEL`Qi`D-7PY1m*cq+'Fbso7WE1/Ah:AP$T57Fc1b^/=k]1\2Y!s!Km?R)-$60nUNUMFQ;NmBk*[#dH'3hX
%:HImT/ac&`Jjrn3Xa5X1cuN!mW'%%'7YcF,<W.O%p2k>'<lGZO%gt8D/"pSM855s$ZTO**,pY`[PZj>LN8BdNCF_3W_2PX$Z?hq%
%-/9/S`q"JN":9m#):_(FhS7)f<DQU1QP<j^F4,Ud\i.rCRm%c*$JG0oW/S#UV.>EJahe7TE9d=W]$u>GYDX3]!>a6pqTE]Mit]PS
%&Y?&2TK08Ef;=J$)6^=di\W5mk%9nt*<eIf`Q:Q\32hEG9@.:5nL5.#2N/?[MMD"o/N0"FJro(1<>2*bZ`PP1l-F'4%c2iGlc#-S
%c%f'@Nb1pR(/^UOg<\/'Z/dK%Q.[jq^f?k?E[P2jP%1@MmtU\_j;_qNd]fs;R$[;!KklQP%'*K:-ECg:EfI_$DM"9uBsJEZK$/1t
%!ZeZeU1blV11_]4).(dt]k&-[I<Dm?CeJ"Upm(VVTfF4\`?Ph"''1]>VJHOrQA&hJ:;upK3g%r>/Fk&h(pdu#E'$Us:A98sP-=,W
%%]PI>Q9\!cR\(_fau=;_RY<RfXG,N$aCe+,a]hmtrWECg[4cSQO9ih(U_.%W!jPnIA7<0e)X^([f8Yj!*X.,"L*cX-&Z8$t3nA+Q
%NZcm<7P-f-S4dCFU8]Q?dU(^b]nd>W09mh9i^>HMY)?@iY1;DKBlm+,c%;?e!n>brI?#:@V6Y,u/C?p4O#$=3c9*AHmCe1Lb%`7K
%opKIaTU,,hL>/Tp/n6K/U'n\ID+9&rA.7),WG?VL9@U<XS3^X:BR/X:FcFM+h]f]*=U=Da2iEec"R<G0\Oj7+8CiVmE:JKUX7dA3
%9j)6SGr6n=`mPLOE:SW,Wfm_/Na=9eNkeq,F]FMEZj#!`U(1SbLiaF+GAJq#Qs!"FlRXnDKS>Xa0Nr4:rJe+oZ(b&haeY,JX9Isj
%,+M=9pJh;</Ia#Gr%0Xl]-:BY;oIB8VNR5g`)4_q\^JEJ0[B6#[.]?0P8]$VV#+O2L?+T(QDB3YH3jVt`"\kgbtAkl0?s'Tl?JJ0
%2S4BJA!A14U;0=lSIXGtVJcq8'JWS;eZhNI0^#J5EGZW0ee(VpHJH;HjV#\Xi@"gZBm-l&7VgT>C'K0J[?)Z/-^f$$%Q-1Jc#ae*
%PDOEDM0CdtY=*Qjb7.*inZWD#^I@N,pnGcL-pc_%QAAF`hO,E4\L=.k\H:+8Af_jO2(`O!]G>]'V6K2rfRb@\2b$I1K&LOh,2A(2
%E8X)/\QL'M!iL-5p38;NP@pN"Zp;'SQ/bpPJsD`a/uDi$<ehdmQial'NHnEV['+Li%D!0H;C!(ZK@:jP[QI_A<j3Mo^Phq8Aj.r8
%G[DR_T'1UM>inGp'mFP++0Rh72sCif7<(SmPI-FYE$\YS,&oK@7E&`e$l`33.0__*H4R<-,HRb`Gig]RQ7#[*!2_eX\Z-"DW&0LY
%9bpd$`<"M`$CoUa/PhPX&hKN8%`+'hN?=&c2-(EYk%ZVFfN128VIWId>00,K'.KC#!'bZ>+U[Z!b+e#T5lmI`&D0WD]N9s"N0I/5
%s,%%3n-KGBCIE5F/J#f?a"!-QbBfW@ecFs1C2S0^1`9Xf8"SD>d^!L&7mP9VZ*+4Ae*1A[>@M$)*E&gWeq3a.]S5A0)-[;:WOsFK
%b?@53#0)07E7APQE:NMC7a\sbWJ5)/*5G4sd6_i12lPD9dE'1sP1(@s1n\,+[nVH)1o@qI[T/e:;q1A$!"``EctOE,[s9Z=X1sqU
%iPC>`?E>Tsn4"tL[:aut#Y293eL6@lMA;cH&_J`@3Y:s!]u\nobk("*`EW9jI2B;)3^\_sJnig%W0kS\9!\SDX"rr25&5.I=$ebe
%?UlPl*7#dL-9^En=bW&/[+_B;Mr*'_AW01S[MG)`&D.;2D"=M2:KbP+[,u]eHdo&!]$^q:VP+%n?flL$pcMcP[DLg@eIDuI!2&K'
%=DSc"=>_r9X>!@f-sFno\R\$=JW(Zrn6-m1D8FjiFhmkT]HMROP]mOdA)6d`m>M<PbGO`NOu=]agZ,8Fai_f?GC"8"FFo/k)ENj)
%.q9(,W!0;!T8)`Vd9A<?+mR?&@$hZ,TEUAZ=-cNY>//cbZd]-HM1*k!=S'#%qAa`"e%$Zs<&n!k9h3MQNJ%tO4Ynmg=mhJV.o,9[
%Pg(su;ptD;7\>P.Who<c]J'F^bL*=mB:@<SQ\Sb)R`aujSXS60VQRB>5$=<I2Sn0\@@2.Qcg&E(f/@?kbKTb3A4H]Z3ctN=.jp=*
%\C[T\O#>ZM3IC%_ab23e[W=lMq@guG-8.hi1ri]sq`QH6cPEZ%5Hc?J`EGj83$8'gmV"n,k=B8D-IC1rZ_rac@';Mjc5o".pXpd:
%c>mp5&oUL$<f>TLX+uAEm[u/GDmcEl:pMe.[#^C"6oiqq13&QE^E\NG2B=mu;G!W3cZ;WZKU0W9WZ#raWR&_,^'+m7emje0m3F\p
%Z9$`HMi4^S^<$%=JtsS>P34WQGU]ZammjS#rlQf87dm.@KfD?p)'"NK"8R5I*"h+e-L4]8q8h<)]:@:RLj`su):7`pM)sQR=q48E
%=KBHkE$/F8aqU7*[T=i]GZd3j]f8g<O:5!WdHVgnH(qWlBSN?LJA]%\d1kB+dS*u[p'&LiYctkeV3U/<_N]-Q:X)dZkemX%b(A0X
%;sop%&^7;C/_qr$=[s`ufo/&BA5fqhmB#?edbdUI:F]>7=$Wh7o#QISh!8SmP`Z7j39fiKLQF&e43sZ_$IoD;/9.85EI4LK0[HZJ
%/Em_D.-P,GgnaHpA>8RW9QgLV.RKi2Fs24=j5jW!e@4esL\)"Ka,q[.h;H@@P&]"Ib7+\/oipX%,]*<];]1]Znu<Q97J+hEp`q8u
%@Ah@b3*B5%;f*[^2,BEE7Q4A4\"b[<4=F?m"$n.[*jsk'Nf`s*dEa$kYGQSQIZUr[@gV%<-K3oaF<:lo;PDDpE5eYb1JC)mWRR:\
%HtlI`QBQEY=lc&/buSI/7%GbdlLGg*<(%`MZ^_Fu3QK7$(;rXf\DD1^RamOh;-7j;TdnZ&*pC][SC@o?TV9eC>>?j_/<5b;fb]Bl
%LU.k?NIjW=XRb=&dbH'6D20k-UW?om?d$D$V=G`\;;.@JcK-sbDM(g-(SebuKGe?`Nn(N]GOOpZE<rc1S54"/MhL0,aX*-_.j_5A
%e@O&eAgMM%5KO`-Fr6S[Bt7B8Bc#$-UYID)M\NWdfj/1tqI#?9,4eLjOlX#4/&<)"FE*h:`BnKclps4]WYp`:74m.5Vs@d]QEBL6
%qeEL"FoRH\K.Nab"j%&%?7;)Vc-%bsX$3L-_2;^=XStYh:<LXP+^MngI#4/1mCBZgKqfP..@)MY;L_H:,gKS,@rmd\I6'JS=Wt!P
%s%8k3#.6L=P'LYCeS/%hUr"=.o$QHi4B#"^8tuCNXi`fSHW_0o$%Z%0V1iC;&6.QV`GJ(TnD["cU#E5uM!PefhL$\ne2WZIC@r-n
%2L2F)Y%iM<SJtu&D2Z%O=(b)qJN!Z+75kV,HV(KEc9`_N>4CB=_ISm^C<B6C1Sn;i)AU:.h0JPoX1(FQR=DQcnNd"nPF90b_WGs$
%cnI$ol,hG#G4YiKDee65#"`^p:1;&(A7k,joVsmAGeS`%"/F?nBSh2WEBQ(>]VO$+C2#(UVnh_NZ57XFM:kSB8i1dHJn/$$.aD9X
%1^XJo#]DA9f>uWmeoDF:9>kg,\@?Mk4dso;XP/X/)OT\B>"H6L!+U)OniDc4Of:?_.'_Ba-m4h/P:kPh:N=R"3l,A%$F-Uf[r7"'
%'(8YTVWW4g=&rL\1V>?E>'t7pC5]k-2Nu0t^F6'3/TF5k^M;'7C<;A-jn0]u_d5j7dQe,dYH!-6>a),N7"SPnhp7V(3t*:DX5OGW
%Wns"qYR*=$;j!)XN-927Z`^]F[>;YVXBV9IJp?:`Ckc$L14L(*TMp5YArY46"_QWWmS)dX2`2YA=@H<FEg=MSJP"[hqE>Lb2VJj@
%3BA!c1cbo"NK0o7AXFG]a"#[$[_O2e-?$&T_Sr\7<k3UBQ_e:YfIR5d\\T1:*OY4_8Kl&,@2aD*5rg;<XDtNT:ugJB)D6c;Zj@@[
%qF]]<'bZ\4TW;8#KNjVO8^Z!"59SqGQ#hVqGS\:s(#!%uL*YB86I3e-$%qV$i`Tb7cBdDoCkao%:'55fn\oKcos<47_J$0M'ZW@u
%'3Qp"a?):4DNer+.>k?/)l3&lA/PrO3,fB`7iH[N2pXE_/FhCLVGg[6Bc:,5Ql+rE@Ogre"D(h@1kt$"b=!YR".G!(H*$RGEu*(q
%KVn'*-Ng8$14ps92VVj#/^A;Yfs"'OTna!bn`.[EFjBao?Kon4K^2P'V%/b'5E,C"R^J5Nq'YQ+>+hZam?SHCEtZAX[BOAB=%F#2
%(Ip?hSP1(;3h$WqQ^77b,=$!i':8<j*>DUciUSEJhW8u>Q%BE39PG;jECh(Lo@>O*n)X:LiCgl'8>S'S6:il$-UhtmXJHeRQ49`F
%CLN"NEg?mED]lDDSsjklMW[=SM\U,k2+mtL!Iba_9RbQEeO<0EqJrm"hQYq/35_I_c3]S#dR*"hNINSHdij-4Zh>Acp3BTc@OGSF
%1WMirSna(1N(P*SP#?A&ne<W:eB>(:ZbhU<KJk0J>OJ+D'`eC0R[5-c.PRg6VL.GNA'M9bN8ImgbY%e<eo^?&Q5iW&OnO?rGnt/Q
%,Vt+'9\Q@&XH.TE(27ALP_FN6W6j^1$f24IMV#dJ9`8S&8<fQ[X%[Z):DGmm7`&u\4q`d*:jQ2f2mi6N6`N,q2p92*'J'ZVI]SoC
%=26*Pa@V?'i9HME9SUL&>-*2#\N3p@]&q5[d]ot#\t)tM.P:Kh""P@*eG[?-Z3<WfY)^`M)4\aYF(ru^YoV'*3\j^AXKU]6M`)5P
%(qZ]K9UQEA3`c&I4I/YF&rso_VRh=;Dc#S5``cDlDW[KZFG"2)\6^+N$SA\L`fpke:hZ!u$Gg_ZXE9KE#*ZA;pr!1fBjicV.^R9D
%XR[pB"9in*W&X'j8t=X,,$-W:I^\C%MGuG4<9O\'obgdf=fWic+F&;J8;\'TYF.bf=E.*f`\\5i1+jMSP-hO#$rRh>F?u+bMknG%
%2Cf$^)SoH+n4!(_=`8DeCmUA5j7VSW77`AtP'`;0DNQ,8pWtb#.Yp+;BPtm^Qb[^dk/#.Z9cFF\dNm?g?>0[fJB2U;NB(\JbM5^`
%79L!;W6SBo%r2oXb-B=H==gmU_3h1p`$VliMGopZ^EccH'J7MJe8!YZ;43uS_b/&IbVY6E%'Za-=.V"/-Wu=5[TY=>"I#]kAjIAt
%Z"A+c.//,_87ap,-VG>#Ooe+t:7BNWlNN5?9=17d8\sW?m8l:Re-AWV`u,q-Ws((2^sNC1&(PIXZk<nK(X5u)8Z-H_USN8`)=j]#
%(KU;VhM$])@nXlYOk,%p4q,L.TPdTU*8:95f=[D(CXtV=j^oeQ2B[X'`:H*GKTk>YhL[5jA!Nsf>?mJgRMP7;+ZfLb?'*=cQ<!)B
%8NO\*da]KHC;"nN[E'Q6=8JeP1pSX."jb.[r0l`?OQP5;NFk&aWKFIt72Upd*ZCRVU\Bl&G+f\95uNZ,hiL9<?ib?*[6\LY`qmMk
%RoNWg,#TAbnhPEBdF!F&D(;P"TS5\aOfFI#bt=I&YA,YfqH([?0[],B=q)c#]f);S6*#a4h1N%Ek,t>G_[:$:C1=^Bf",h/-l8JI
%[2FEq<equ;+^/;J[>c!jWM&PnN-1=G59Bf3?k#ePAm^LAa\8+f"SZ*e9V]K)1;B/K3lSHINZ<)*YH>oIFSooS/^98#Prap](`D5l
%(Y$;HM+i,U)tPR`&@rX8i=R&\"'p#q@o*`"f-V4[8h\)FRHUPB95d[`?c>u:6SUkT>5+bY*s^O)*U\WJ\lrnR/Sn6IK+#&D&"tZW
%h-?]n[`&OeqK&*"<@iidSq8bA`FOV/P*TXYdE!c5'5"!dfbYOrFRc;EOlRd.cR,-%1QQS=l99Y\P1*dEAa.U4WTs8\AeE5gM'T9.
%fJ;^4VIWb6,F$qS2s,7RZ\g)SSo`>HBnm;MA-jGiMUu:q'm?+Q:d)tn%P;!SB<KCqX]E2D8)SM(SWj(9lXFX$1*e_m+Ln)Iq-Z?a
%mjIqm#D&RP_GWhFSuuc/>H6_ZTu)&tB8@EN8ZaO;"h(@^Z`O@a]GAgi-jH7(3b^Dp)eMNS/h$9&[=Ygq%P^CEXO^`/BW5-=8V1JS
%eqkD-49P-kf9;mRkam(dJEikE)I0j)e1F[T]u5I?Pqec6CTs1fMt&']$L_qBNW?%uS)7mq:?+O+)1n2)%qBtl6/bE#EgTpF&OjTO
%!E-8.">MuSlG^l4*HCS$U^HVj/K>W^0j$26i][9=j]-%IBm*(eo"5a77&q!QB:Tl\C:OaIN$]75C+_luAhIb:oY#UUgI(\L`kd`X
%H9('O[L7+leZ;`#@[iN@?"UWb37I7c>DU,*`A)(QBF*nuoCi.E*Uq<Jnp82=d0b3hdc?_-U8=RqC>^UuRRP)(\TC1L-$dsISRRj4
%"kMu_2:3>@QB-XHGcZJ]<LuP+Mi1#XQ/m2)'?`,cat0rGS81JM;V&MJ=fAYm\!1b[bT,c,^)[Y0heSU/QOZ71#>@]1;_hRlk.rTK
%n,B7tK2Ck__'aL$:2ke39[[fi(UqLW#'',LQM5>TVgfV!#;55`+]hA<fnCVDb&%abpcFdd;].HpTT2F3U2U&t8Eb[bAfNHRG&qDB
%j>!\ZD0W(`l[U-eZgp[*aR?.SMcR\Dk9Nk3<SaPkiP'dPA'tUb4:B5B(e6]B0In51&VLm.P\Mq";4'r=Me3N9A]->cC/j@mKLq40
%X)]+h#d[IPP[&A2hSsD.jtVj36]E<)S0k4GTC`,B?o9mR<'?Bg9Nk#U`t=1SpDQ5M94o5e&;q,sUuGc;"ECe0dJNYrJ(iaS?A/u"
%:L!eM@SF((Ym#\e'$n(H-#;^\QF0)#91+YY`!Qf&p6nB)P"4tg4m9^D=q6Dc)Tr5(8VMB"0RDn6iBM9,aJd]oAJHcZL?`k+UHXVo
%gKWJKc*U?TJjifu)\g<V=Uj>J'jZ(Q*fahH`bN'(4q.^kOsI\;M+Q@,StUtS5XKJH]B?LU[UeG6a"BJWjR(l]jL(:bnb_oTTqL8`
%F2g\'98^SVQB0;,6**lB35bX\*7+GO2?eJrO\[iG81KCs&koQ;Oc,f"kcD3mMD)e+eS-kD0Iq=%8ufZiBZ2*g'bB-Qd@AcKDqXQg
%0@5S?'"&!VB3K-76T*g^mj3sVR:u#mBR0U,Ct+=.FG[Nb\$9W#JHf3dm=f9:!6om9o:t5=UXa<Y+$\3!G[\jIJoXi,V97=P,s\$_
%'8GINN`(*t-*UEAC_`"jF4OGQ83HNk9humf=tnH.MrPn;ZIn'HZgh;#=cC3&\Q$*q%ZqeG8O>G],4W2_/6$:LRWANt2.20gFrrs>
%Mt8<p<UmqKZ6pL5TrMfH@@WUJNQDt@dmeEpHWGbiUWIsnd%8]o_VVn[UR>H8R[+Pp)=TS)RNCO4G]=pZYHhKc@OC%3Fp:9tEf(T6
%J94ork6J2.ZWZh@i4,a"J]]n!n>2Q'R,#o">)H2NF&5J"Oo:/P3Lneo.Jm6UeJl8!63Dc4>8U&4U%`nR2!a(j`iXm@,"Q%P(JWF:
%m#)i1c,*V<]ead`o/7j\j/FC*B]k&[?"Ps^W4flDH#n9u;k$5Oa!!.C(u,!iNpR)JN,YZgWr`F/*>@WcKA,>`QE$oh3"h6n^TP"d
%e<m,%V)_89>d4,`HO%K;%*$C/kJ`ThMV&8k:l\7f&_AKi8&^sKfS(M@'%SN@W'5OgkN4.$e>f*T"At/2Y<#J<Jpf]m6NK*!$Y#,<
%Bub[s:.B?->cr1JEfIe6/i7(3H8+QZQlefR5*ZLKNo&H@egulT_#8W<GL=[F[e\IOS%npjHiO*,(OrAjs7Ya>Mjq1o?N']\p@dk8
%$IV>jYQ&]mp#hh9X5!6Hn")ZUq2;TJcEHA[q;`?AHB#\MM?!A$s8)]_c7aKBTD[\)qtK5;qPV+,nb>o30@0.Vhjg=qSmPiqh#-Z5
%5CL9AeNY]?Y5064oc(P(s5r_9fpbbr^[;neEH?2ApR9Q4k8,dicE;,?hgG-QX5!/7qQJWq?D$2;^N.fqb>1'hIFT:MqJLT+5>Eif
%b#R>k^V#!faCSF#Q[DfJ!P.XM>O'G$Y5E?02u^AB?2.hs(Ok"C(Y0%p=(g^R]t.Ls'>8?hh>-%@?[m(cqUN^>mer\;J%;:@FO@NX
%F8a@5SXnWO\:/etZJX]#lc3VTXA@__mJ>/0o@l2S3k)WqfB^#RCMVq[oiJWc\#59=GdD&S#1rhHr8MP;ZWUPHXV'LKhlEfeQX??@
%T)<(uVree6X&$3CDn^LH[r0LJ]Y.FRiol*Nm*=@DZ`DQ]pNMM0p"h<(j4i8:SknVL?2<XDc.VQ'cMl_UhX`U/gn!b4/iJd`^qHcR
%mp@?drqa?q2S8X+^PAr(U9C`WhOL29roW;7X7OdT)r9&5NUCQ5Q\=t2a-OVS5Q(49o&u:/FlW>kg!.Y+p!&B.N(^WB?]M9B?XLQ.
%^Kid(513_%=aC#VI.j&9D`=:19Xu1MK+=d6D@ENC1ZdW4PWP7QfDBI.XVf"^;f94Egp]3irJ=kYl2(>&dkTuc35Q06gqf:<fQ%4$
%mU46:8B!YS+^=B&Ife3V\k_V'4h#0.m?9^-ip7b"(LOj:H$TAe:E?+_7sg$#IMfUk@,kU&i4QUKq4"^?S=e1,XKpUCQZ&p3hd!gB
%Co@+GNLXj#!P^jEqrZ0!ajl<iHahaUo8;N#Em4[cEf2IGRQdh+BjYatX'IYIG(0+qrq>)*B=I>s%=:4h^I6uQEgC'oc9g33Vq2a:
%2uiFHX2jUn`BNn2`>[Wm>dpgi[j'&qk3^F&-`:TaSXuqKd,OW6P41,Ij3?nrdkBTB2K/<:_<Ig3,Hge;mD[2lDu]Y0qWdE^9t0P?
%ASW;khnPrPX#IL8+4S'qPs$ua\lmhgkP``j^K3O^s5'JmT2tVof6n?Nh9/phV:_Z*n`T60X4uZWY)$G7]\E3RVWtGM%=>)HXPS2F
%ILH*>&')G-9OP>bg:l6&*u<tj[2!)'*qT-1iapJ*gDX6G[^Nq8f$?c,geR1!Ip]NqrI'T>esc@&Qm6@nLUc`"jQQfh5@B9(q*"9/
%k5=r'jk9$i(UI1ij2Li]T23`S[1Ek<j*ho_+6)P`OG.570D(<<2rC1RPMAfJBDk5FRd]:3hSgY]kGQ`3h,DJe8LsYClOL:%q([XM
%T:`GO?i8mKU[.6((H5u>s1KUQGGs8@$?[<Uq2.6+S!03%Dq@)`]l:Tlk#9CEH?jsZZ6j+r=-hNs(UH%TfenEK-dIABB_plac0JH_
%(Y@QHfQ28`%!c%"fO==(dDbE#<QqSEoJnI/5E@Pk"S,u&'oq\VRe=p_R*koWmk%LQI&mXga'#XI?GipAN$hoe^ESqen#H9"=ecJq
%b=_IRC\q2GTRXY`IqQgY^2,oY%OcQQcY1%#Y:WQ&Ea?O\fLAreN8;euq.@UMg7->u9kSW5eFCM8=PD0'PH1ajMm(DYc;*!e>OHuP
%>Q+HBMLalFp[A)_[_1Amk5<KiMj)VrbHn8(5G#OEb:RA\k^PMbrok3uI/c:I5M)jhHJqUP,!3P$X`-Ypc*DeDd[OGQn_FRg@Ek:p
%(QJ9IMLkg&Y.(alleAF`Z0P>:9s*M`nig+LEqX)O>LT"<NnLs'K0o50#BB>*jn\<>5Luptj3heXg%:Y,1Cs8^@Cu#/gZlef.l5/Y
%4hnL/QVM\.^!<-QI"1_)MYGP#L"hf\Q0SZ^\ZIJY/%Y<]*MTs]\&d0<X",]DU\SAl5Q3&&i;G1Co(oI?$S0`WlSZiMohK9<hqhUF
%Y#u6Rfs^`sEIN%RZD,M&o]5$(O4S0)"_O*=X&E*O=)57me'kdmDr6\jZ^<e[MmmG(S6VUlY.E_%J#k_V!arHLooP$9'*d1T;p%L2
%e!YW(?gMbZb,X'tlP&;MB;2J9I-k2hb3:&aAZ)*B5M)<S4$362AaA%@>a,u'jdtP-4Gf&>e]c\E>a3^8P`)iE1P]5"6S?O-Z.hC_
%>SQpNOGgDZ&_[!9l&^h/UZTF^2mY.UotKU`XEk\p51Q9?0$<EWb!fI^R=1Lr5@p'k+*20t]uppg27E<5pD]^5.`:TA-MEM1Ys0o$
%UY`sJn)-e-$buJSf=q>^jm/Pk6aVpOf,B_-^6!f8)BAWa;h)6eY^RF#k-2":aL[ZJle74dE*1^%le5cQgP^4A[l7T5:tH3Bg+G$o
%B/E-iX4gu^qlj)fTWB/u[DT"f=Oj"cW]#nDID(@0p9$QA'p%9[%E\$<!:V\%5("96__bQe#S,>I0T?iX-;Bu:+rcY+rKgLjM6h!,
%V31GiiQp]e4M1C[`Q8Wts2<H<>NsMnCnVRSl29i.fsg-GO.TF_aFnkfG&mJL<R?r_[G-$-:QnH3edt4B!).HTG'X&M,<p]m%Ub`t
%YTWR$)tEo+C#6KL(<ZNdG9ES181<4q^c1\&5AaZjs#k5qs*`c(h>dN<r=>BY;rb/H$fj[20>")"4fs>DIg/8a48HFf%N=5o,lVrB
%q0,NmhrWIpl]_@$UIRCQ;uYu*rs=9IgSstX^3kA-VVC':^3sggqA7biD(Yr]g:P%'"]flcrr-",c2;/"79d+]<qP@UIP1KT[\u6j
%keijSlgJ%_\CS<Ja'sCR5/_kPX7g(J>cm5Yr8)[=F+4#Oo'CPE<kl+jj@=eT5)E!S*s3)sphgV-IYUP16i?\R`IEAH,i9dE];s-C
%+oZhEruU17L\U=d47s0bh4OK2i?XB\M>onhU^42s5$t9\*b)iFl3c6ba4;ErH\hJ=@_Nqc@B\%]cbKGPm@1GWl`71b?*+uSpV*o7
%_=ke"`PqNEn*f8Tq00#[qZY;@$,F*GLNgM;2$7R[b4*qRP5XD*X_A4pQL_LDhfa?jD7>gtn+bVGlT;4BmjGIkXmXS8Y7Nd?aS*kG
%p-ar/4a>$X*jVE_J$_Pq41NBBDR,nh:AOh"S$TH%cb#Kfp3GPOcbI*kr#b+R(MC4LhjhCXr;,R:lI!-8_1/nQ]sk.`B:f%qq;pAc
%a,Yp[$q.dL>GEmUkg%jMs0U4(2S4.UDOTIQ_\$l^/,rXk;guW=`j'>GHTCHi@e>mJ.L5.S:-0QS]KSFE]CjE=WuTdJ;("O,m6=s%
%/SLCopAS.%f"i)JMr*h+Gae)NjktAD3*m)TQ\4>[i-77A?4N!^KB)(,gFg$>f^U.l)#.GJNgCcp5S&mA%ro6uDlnLMGs4=M5l+(]
%T"Xh?I?4oQo,`ad<`/bTBG2KDA[K^IBtn'iCB+CI%\$Q&C=m[]`1$F>J5,rHHca_sq-nb]h<s`i:R3hWEIRfJPOh<Cm>&r+LGtN)
%h]*.PVShQko<2(S^Ft&/"anrA[lrj`"K&(c@/>EJHCuo3kY'YKVI08[l`XWc]Y+7CE(J6g$`*!#<TUDlCE9GGG=En2qf;BF#=Z@3
%EDe5<g=FVSdtbtEc:&iS\a.^Sk?"kQDng^AG"]1#k3V3P-$eD1r0QX-^S;8-A)?Y&1^8-jc$[G`aSri:K8$`E(7L010Aeu\^H[4Y
%.MY[\gX^iJbbZ&F=eg@\;>42EM)AJp(6q-$edST\BBp2Ym)!U^BD=1kYiUKZ@h1/BI.1Y4O\N1VIZ4++r"s5GE:@B(XJNOIF8k+<
%3;>4OmEHXK(^E:FT(k%]6G#B`Q,%IFc^o`:G5;lM^20c"q5`9AgXF2JCCBHeY5@P\`MsR,`RW`.g_seIe_A8#:N'&.Z)UmsMmq69
%dhN@c]tsDiHZRW-kJa'rce$Z+nFteo.;OAoM8IS?TSU<BH#r\kS$W.hp?_'dN>['*qHY.h#K$'51pg2ST`\rk&In*B)>Zof>q;65
%rFb^qcW;)"FF1]5QbM>H4o3p&lcV.!$(#M0-O3]#O('DPch[/UfV";eq"a71Rr@.ioQ=n5SV!oLcs8TC&($Map17+2[S9ijLD>(T
%*2W*G.;jGu$"%JZZK(1UCV$b9a^2$&e351*N@k"m`s;j(JAMs--p23Nr/,$N]lV0Mp.>+6SFO)W1CNp&'gMXJ^A)R1VgE=)Xd_W^
%C[PTT*NZf(27Esjd(u1*N?P^-f%^UdjC$4QXLT@\k#NT?%bBDY[H]-Kk>mPRK/n-0k76Y0Z9JS8mU4>Be@j<E1?Y7>-Xb<'lborq
%FK:/H5+-Nmqtg0NG;gmb<n;mdpCuu)VfoAa$<?p&AD"U6\$CO5:QC"\H`k;<O*TYUllfG>Mk,2UMq:`,aOlM/n=ltaHu/G)Huj:J
%qY/;p/@p:YEdE33_geb.XhD:DiF7e5:p/R(\6F5>p>4#gQ2TC&C%OJ*G^DH/f"Qs<\Ej'^HTCi_4mgLop'*M"USkN.4o+^?j?1S[
%lRSLg]uE[Sqi,G%\F3e,WnG.KK>F1nCUKdYnEq+$e\BW^CjgGPZ:^*\>eR7GXiQiSoCh>$PLHkGh-+-60OXpWDQH$oG&R)NodB/k
%ER9OM/*>^1J"L)^>nmaS/%>1\o*QDcfgYqJdbR'uG$A7hf!>N,cc8qUIWGu>iHSWFnCJcR7^*.<bLXCog>#WYG7L(X:2:%UF@,HQ
%BEr=7K%fhRrq#gUe_)Dsl2Fb-fS\%Fr;\)3r`9S%d6T5XLe?&\-i1r'j=?Y9H`\!1i48A>^;h;cP]to8s3[+)K<tHq^7#cUhqoMC
%YKU>X?*qMlg>=!aB$gjm]frNC%r2r`^Me,J>188IngbK(LtgcZSkab#H9^icmu&PPkI7WIcW2&=Yugh_`VJnn:X1%>+V1(&%W<o1
%^,`?!P]qOs>k9!HS)Z-';`h`II\6jlfGf$abl-;aNVhp*4rcJjX%L^Y=lf>?I=0PVfZOls[#X'ndR9fWH.L_sBe]E$6@XSpU'#%O
%f2m"%RH-RCrQ?JTIuF*bRe9$$gkW:IkI7VOpM[fl7i']?Y(N&g]t"lVN=T:q[qjZ&>i5JL>oh\eA`@DQHqtLInaS-h[Q0-:SrrPZ
%Keg%,OGmgJJWfQn]M)PocBgao4mY(>ruONS5!V\dP!a'sJgF2F_2^hgoToLQdGW8F,#GQMmq1aL"LmO?i4[X<k:^R=2;u9oU:jX,
%T@1_OA*n3lT&'>4r8o4aF7q=:lo-H3(UkdL>b(br[Jn4ce_>E)\;@-FiqhKcX4+iMjYHD>Co5HcR-i3Rqu(sR1NusFp1]c)fP5F4
%9H5O-rp.hNeXLL/S><BAA,aBQR[mO.5.DBhi:tsELu[*o>tt1RqKV5k+Q`!KMi34Ao4,i,+iX$4Uf`)A48?TYOFI#E+5HM]Dm*L$
%@7ZJ+&q0_Vl`38E<koPu-Lqschjn-!s748brq'CK_&pGgiUWK($OV3n]tM+nqXftco>N)lQo9Hkrf^^%rT"dphcoC+Db0FFrKel2
%r9XacoKW2eri=5VhmdCla3FY[^XM=VDr>P`Tg/8.H<+;EcWb1!;uG]8QRiLAl'OY[fB/^<HgVm^kS(+hT)5MO8([%gLbGT#2<l"J
%aZV;:^WGlQ3^')^[uoS4+8O*i#PrPT]ZHRTl:j8Np!9UOqege?dMb=B)`tK(j/tmFgo9BKl/2N,*nG8j8%I0nfdHe^6s&nIfDc]q
%mUNT9CU`MnRm#Kqa\U6(.\=6q&&inoM,;7UW))'l\g<tPD^:%]]KJJ#0`CTVp6+7f#<WZ6DtrYR>;Vtipft5;a^4\!DeM]@l9DIc
%K"TldGB<?G]IUjgqC+nrZUU_>bu3(uHq.!-=hjuL\Sh1Z(4Q12]Au2Q4+Hg4oA]DiDnUDj>;T7A>Blhp?M)A2T:c%UD5QJRc">5V
%VfDOZj-kJ'#Q)lG].`."9CduiitkYVm`U)fJERP*\j)jRKC/*)q:N>^^2P+,GDGoLT2PO^O(Y(sKB)CXR6T*Ja2\I^426-(o`**;
%hJ)*FFHD/;J+CtkaTLFHnaO#do8>o_a2fpKmMkT];Pj0Mf@/lg(Y@7TRpYj-3rHPWct>:=^V(h$qY+pS?cl.BbHFoqQs]O4f@Msj
%J(8E"QX@d-It7JH7s+F1^RUj"E4-Y_EUhTQe\sPDh"kXQqj[2Ds7>R^BdDO7Ttg4?jN['$i\7^2URg[c)Z%5FFS!!A4l<\YZ[$6a
%l'fmVf5ui"SK6prlod1fb1b\7)3(HTM]"E:oB;h%6_DC)k3LppffuYsEHF0Aq>M5X.a]CkT5@Ejk:s'?9c;OBSrXp7dr!'cp5qjQ
%C"f3hl7TUDB2:`R)qt&$rSm?ch](KHV.%q*J*5)O4)a9LkN/1Xa61'1nc!U<2mIT`\hZJA0(6Mk)\#:JN=O\AQ_3*OT;OcGld=&X
%\Sod#OfH[,5,&)tCX\iZ2XrRYX[F*BV.@5kGDrmd40245(ofJRgLK^MEOj9Ls5o6[^3OXprQj/3ds!P8,42qe;s[9[rs15NI@*4m
%fs_gp5=1r6N=YsID^Td;NF+pY3_6<#jp0W$"ZG&i`q@B^YFf<-muP6MqQg+Nfu_M'X1O;$gO/NpeoeIYVGK](\*#K43`hMdIbngq
%(a@pa/X8/X*1s^qap,%bpA'rN@"%I/En-"9A+EcOmrYL&`BA-fFDVf\oNtr&Spn]RB(n0p%Q?Tj>P:i,)(i1>n`o(IR6S+%%/2lM
%m.k-MJGMfd(A_r5GHmr<Ftl060fdJ00TjMrci.&h]NsKSj%7W=oK/idBTqfAn[rgpCd.aFp$H,3:9SSBp,g3k=a<[77dn_@J,$_L
%n?:_UhcsoB4:fCp?=.#gF8#8CIqW3`S,/#&:AT:la`>>JPPNtVq[_/jk@*4OiTM_$*WAl/GSi(m\A#gDO(jc>1\Cp,7k2VRl;)]H
%8Z1tlC8ci?/nH\&+0&Q`9(Ap3dn$<XVSqYC;FTFgqI3uTFYRf:kS)J5P+GIW'GZ@'=VscP18[Y2@E!D8:/*BbP><`GV!ddoe-9Ep
%j?E!!O?;bI>.6LM==>3_a7d'2>%DpBHM`GNIZeIk7NH>>/RWUTlr:IA*6PrfK1LAA?:6D?JV@%J\gt8^4Sg1)H&^)bDgDgUZTJJJ
%/[,Ug?otO[ql-Sh^-6]<?"Pi`F&[o^hdE8%=u+865:l_];i<+.YBElP1A\?'np73I:TO2ei,gMp]S/O_qX3.)KBE.=4'K*oUe`qq
%n?Db-p1G=Y#k[ZA?a%(+i*Cht---^m+8@aBIjD[)]&MIbSKOP%In.nqY(-,lm;%\:s76s$5U)COQDop(-eg5fJ%YdO]Xd6J`mC!U
%biCN-0F>=l[Rk%e*Bp;ag-3#_!0e8o"nk.#nc$.sCTfe`)pD/c[]@N<N/)<n!A42rmP'o1n#9Qn7^[SLVkBfbL7l]CjE2gD2`R'F
%Y<&#C?5@kC"h&N>V`JC7h4ak[#^m*T`W1\CEf)U.]=@X//Yq;n=EBUO.'E<]<ghGk'Dd%'@TOD-<F.'0rb)LDi01CG9d38^B/m:a
%9,WC/#!Z.Fi:r#upQXk+YSZo@^XMP%//&[[J@dIa3Db%>^Cq^Nim2a%Np([sR`T-_C/-B6rIp*4mu!]jBr^GZ_$X<YYBuD="'^-L
%1R+K>.0Nd6S'1C#-=3IYXH/"R6D&&EL1s[Fh%ZTo7JdMQB:UQ4)lG?JhcG5>(t:Xb?n1^7`O0p#b/HBqFH4fa=kH'bA!$Eg>J-md
%];Dp4^Kcg#7S=aTFKt<*?7&VY<@?+W=;Y^JX0pIeYp-N;IbD\K1JKaM?;[HGV*-giM=WZMpFRIMr:3u*-TBh1o$U'4J8O4HVe3[1
%^O4,.e[=)?q;Wjfk3bD!]-]P6>j`,11:*ZMqL1L^3?-+`8oh1\X9k1VSpc6qc_KKO3l:1R>!6'YcXWL7]Xu0EeHQ]=o>Mt+]s1gN
%L%$%E(7Mu0Reph9Z.dSRG._;X`Cbg7$PSCTR7N1XG:kMo6Qc01?tP_45.$MiXL2uEqT<ODLFU]@lK]a7@XV3L:i^63Ul0M;1tkk)
%TDNAebb/g,[Sk/,Tt_Q=\4o)((Jjf)X.[/RQAG@oql3KP0^s<-;t2Y+a1hDd]@uob0st_!i3q$aU8t/,ZklKsqk%':EcEU3GPe"*
%920"k8kr\lc..!&hO\YA-1m<>U\6F?&9Lqe-dOuA.f3Li5c8FJ_0ssn]PB].D#5"DrKl[\/SWC0/OF?KOIkRho&=PkPaWWM=F[&-
%?p.69`ilR1+DmdTg:TI';U@OL_(PB:Z+ma9C:Qn<?&Ql'WY;?ndR#&23T0uT)tA?h-G5n`Y'$#6a?7UU:gg[^e"k=[^>,5$bt[bd
%@=O(X,V@mL]`E0Gn@1JbX`@8MWh`bo5@OmT$:s@FMf'WVpQVgI]s"/PaTqh@&6S=VrT<ts,c0fGZ=5ZAT\e*\cH18/7&JE9PG<Wb
%='M$&4=&cfKC40[_Rd_E=BJ/Ri/-%uCGgZEl`o**M24H!BW0%meK7_%A#'WnB)>_\Asoc1cTD'0hT26,Hq/u?G3u]p)($A,XaTN9
%ICmYXJg1*fJOc+kbp&$]pca"qobCmbeCf;;-28su<c"%r.X`?'G=EXS&84#k_^pmq7OHYQhsK!1S7miPZ#:,cK5aK^f\_+^p30g.
%c]J.INkNdepZe,t3d[aK.HQH"]m@57oBPE0g#`ppppo5In$lutm%6MiY7/GlD8Wpfd5"7-Un^3+V+tAKX/pC-imp%6=L>GPlFnsA
%WZi.pNV<,2cG`L97:%R?./nWEA1-,.TI&;#;VB-)##-DeT%2_Vj7U']m%i;oZ&-h_\-m1j'7E<dZIr=%gk$H%]sS=+D!u&"D5)8k
%VS1Z#[];mETS=8KLDm0t>\bk$q+jS8d+]\eI<;(G/OWo;BN(AdIWKV!\$']$X8SLh]8?D\FdlN<kX2W9a;ZAt$f40\lgBtMH>uX)
%=%rrreY1fkS%j%7`6/XDWC:+S@uaPiD;$)NT@WbJ;Iu-FQUs7Rn%mhoLq:k+&0em3igbG3C\foFgp;`0_GZ;63;7o[Yj9+kG5U"P
%f]mkEBKtn>Kn!tq"f;YJDrQIEegSd<e`g#rW`fA;md=t:YfTF>\D3HQ@u,edXCi<c*\c\.j:JiA28NUpVpL3*?tIIRl[.+G*J)WE
%5=#aT/)R_`k5H:r/^[5W,OaJUgMMr,l+UhR4g4/ir?([)aG&p#>"V5\WiostF@3F]U<5bM:O?Qc0KOY:%t0^DaSmdfC0-T$N>nt*
%5OrGoXSc3./,*2(8O_?YJ'<g^<n,PQ'mYB/9jX9@.<BmJ@1s@2(mC^Zb*'F$*rV)KRIF0W3Z>YhC\osP8q^GbH<#G5*6)tR.S`ut
%9!L4E1F;N76PI;d+ql<0^>2:kN)@S*((2#7?H4s)792LlPK9r$s'4mTm%`TUGF%Q^Jn&B!WJA+U,\Db"4IkEYag_u,=NE;AAV+9m
%YKSS<Zu";[[3p6<.(jbMq&8MsBmTH/:::kI.DeHD\@r%;G><^p^4ann*r<g0j-#?@dYrH.,l!V:VmWc[iAACIE9RQ.Bd9G#pPqE3
%h$/:l7T'T#Y4;_mO[&_Pp!75*#Eu6T.>P@%@;d7YY4q>*7lD[ZjQ^\!IZQbIHfQREE<Yp)+$\QWHdkp(]W9'Y:Jtj%2??ltn'g*Z
%(eD8ndu5oSh84;mNjc!$[!k"Qb)O80l5`HE)8JmejJQf.#ULepiU9+0Uu_ZkXsrsHr3=$6@dWVN9rO4+7mYc(.5(XP.f!"39?F<A
%M1+T)!]f!2!9k#.Elm]fo^o>"s1J<ik3V06paKHK.Dp@%>2*#q@hnjPb2gS-V@n1&fOOSnr[%dM*<eR>ho,C(=.2AP`C>0"4O\<k
%P2hs`p/dBt\*coU>Al2&T'+f*:sp6Ws1Tku[EhWR*llU8+ZZ,cHmn#Fr500Eesi:EXEdhr>fusT>$Z3A1nOa)D@a6A>ePT5H[!D&
%5NR]Bmi6)`,?bL58/=RPgn)]_G#)T)H=3\2JUrK;`;kO$0u.I<=q7c`')U8+1r(+.[CWrgs6*[Qhjn3K@hR3?s6\,KDu5$6q9=D[
%S_j)1La`;c`Qd-rY;Ukm\N9QSlt5kNc-*G_:Z(oe%KH+bjPo1s4"eX<9E3`'_.T7AH%#R;o+uFAI!5PD^9dPlQJZZ1425g>H#BC,
%j3)qB>eKe=J%^;XqWcq0\W&POo]pp)I<j@Md&Y-0O'\C4S6hgmCn>KmGLle=G4XCbS*0?Eql<g_e;s*N*kEqL$28B);c#nIgSclm
%5MPCOBW_&GK>\.1MUV4hG3"e;K=d_gIdTXki.(S&VR?0r,Cc<j/<(tTp!E_+3=K2S8bBdglQ>Z+B3e=35P'n2+0ji:c\sfdj<]'K
%mt]cCNu9qW5BlSLT$EA_Mr*(W4S'T/3Is7ah2Z%/S?jrd`[2Smb[0VSrTq"B-$@[E*7jJeqom`7cMDHaW23CkEg7PMI2DMpOfDdD
%Bt"#ojM.AIB=;UUW'"mdbf1FmM7_;<.^B*TW.[MRZT92.mdKXD,UKj19FWH7.m^8[opCH\O.Gp#V7.Nfb7qRrd_IZ0em%85LFiG"
%IaHJp(P_@iI;8=V<!2e7@pe!g&\!Em+J:>H`W#kGfM#hYnFdMINpBKG`PZ/_2f`9Y<jV^$l[?1;miTPeJ"Yirqo8j<h&g<"QlYB8
%;uc<@$U9fk./[l!OBY7Ra@rA)9+_M"g&>:D;cD?[6o9[U(a?mD%/l3mDC,=D9(S]\rX5P#pJZj;7GDcTFS$Nho-Ag)L%HBcD0HF2
%c6YoDBTo)"jA8`"N`MkR@q>D,7[\S!=oN=OM.cT",Uft1rY47-K:^3b=/GNiACQtBG2]Y\]-2FhUY`V@Wj@mmUL!>h1Yk+>Dj`HT
%0l`^+dJ\feJBl`al-]fh?jJb%$3e?E*8a3mTD!(*-d07d19_#7d\PP@3r3K#IordRaQ6D@3ILZRR*XPUh;l1NVS_GeT\eTCJ,e83
%Bb[CU/m`L$>CZTuMA;QFa8kjFjoPSj9](-T;9'WDfQ!`-/n#%7ZWYY&iB#cSU3'?oqPmGs\,I7/+=uJtrCI6KDKI@nAiS3r4Vccs
%.41i2mPPuVrM/!emWl7]7<'b=FRSn%'9:DsY&#fK,43GpVIp5M2$.S<j7ar-B_I>B,Gssl^dh+RU/TFf\"r2uXEl/?J[@Jf%.47c
%/j`WeO9-;<2<u`t@N2@=9s-NpT8\Nd$RWG2Kj);ZU);c)*oB$J<?t90O[A*o#::lT)P\[gBFc&_Q:DVC,'&\Vq%u:;a\U<;-FY)m
%N`M-_M!<iN"P[&ONI_E+\A_Zr%IO=qGs#N6jsF9L',FuYg+uIF]C/N%*)69rjtn8Qg5b?bXIUe82E`pckLdG1n<"/F_maL:`!=+h
%0(8t[R8ql-,NuXt[+#MmKf^#a1(V(1JDl"%<(tVW1(2U<R='2X`6"[^:4SAd.TZ9FRj*FCkIF8M$/Fa&c:%k'_4C$+$cPTLN?168
%0:2G<ZVNhG9/VJ.>iQ[RWt4iU*>*7A/@Q6nmXX@#17/_,$O;SM",=&p+n_?XT*6]HX4$6jO`1_C/%,VTGY4H]Vj;>!KkrB[a)F0p
%R#A4jE"\mp&jH$4%#2WWWD:9@,A[YgD@0utE)FX;G(-mHd2<CTd-ZaJ'UIkPrE&2@b>?5f#"KSL<,o@<a`bOLRV$(_O-!hup!ndg
%+'Ou-TI&,<K%Sbm+Rp=0oOk7oY3`2IFD!suUo2[/UbVLi+JHj[2'jreT#ab[%,<D704^Yr4I1HJ''RQk\h*)*O9"XsQ7*).d30Y\
%F?Ha&Ia\%TQ'?5mRi.8?TOEJ5dKu^XD<;S^[rCXm4Pp-%5r1U8:FEr<eN4eEM4--ne5=MXM%*oH,EN7:9c?P+$O*mDKiScq7O=Fu
%bB4P;^;h^V%`*bd-Cqj\7C&"49HY)TU__cZKOFgn*T(:("Ej###K*p6efrd7NARZ/!q#1EYACJ^aZrXk:1*!O;)ucK->dj"Wgse@
%q2e1Z<!kEqe*KQF0?A'LXCCXI7(3`T"W)=f@ETCCp%VPuMWLr)U=<.eL-!<]aQZ20W@n\koqNc=7pq]O_kD0,auZI8%bM5[&&pC%
%k)i'`@\k5b^=e-2\Z<-'%/<<epk00+qrT\-HRp-K_YKeH9&-+=jUJc=_)@cBi>HH"'uqj'ijcXM83g9OdrniLAONF/pG(Q'm)/#o
%K1Nc\Y_BoP'UlSJ"P<fg%NQ3nk&A[RA7A-cT]U;h`m'eR$P.6hZ:9#9$2"U-8r;kZ4^cKs/_gV3Kq\Vh%U*0mY@&YeR]IZ"r@`\r
%bOg[`(/+]?_A+UlI9gWXY+nsgD`U'46cTW-S&[-g&.(?h"(;9g:Z'(r#eS2ZbHq$YU\W,CJT92A7unL<4WN17abLrT00?Djg@Pdj
%0=G-uD/&mE@')g$a(;kRk1[9YX1M8!QiNFFo9hU\G2Q["!$X$&*LLA$Qa!hh.+!8]+c[S3=Y6pmDspWX#:U@Hq]p>1aVNW0RnNA.
%d:0CA,KoDW:Ls\8Rt8p(8nI=FRDq.#l9NiSgi]SYpP#"*_BY*>@+A>D5R.N)9XE-HQXdReDXYV+qBH4lJ<([3H2HXBkJMl9nZS,j
%Oln_BTgjcgk)u(7h0e,Se_;[33M;=6dqG'<+pL#bZe6ROH3FbfZe@>cY%dIK&?GYfISg:M@4dmC[0Xj0Q(uGpRZ(L5X4>&./E*73
%%Le%tH8V*!%TW^]Mc>!k:M'V`daQ*trM<UiR<5Cga9:Q[Yo(sifZjiUdd(*qq^?&Q1`QE*BR2A)"g3lq)T$]7em?4jBipX)VG`qe
%7tSfK')i]WNc83AoooC>cfEeDPKUqY*_.)`<XV7(/q4/r)ZHD-Pq:/c%V.s@qbj`hdb/s5k.-52m(QSV3Z*#Pe:.R\!WIeAZm,Dk
%9_F'Ui<EBE"+$u4M\.'jr#qH^@MR+L(B*">&#9]gQQc$pN0<S^VGb7KG3iOln@q9,k1[`8dL\TH1%Nt]a%Ybg$H7U*EHLD30W.ks
%R!fe(=(&siJec$l)e/b<154S+NbQB1!cB_4p+Tkbkhgi:jZ,Nj:su=t[bnsMEpErI%=\YS%>2PLYdW)C!6I#CNQRYNb7Q3pdN:/s
%2D9^_2[h.g&TVj=oP`W@VI5NDLdSGYa8"@&\a"toLf9k[/QW8[/h`iPnl%\QVdSAG2a$lcW$DdAP40jgD[-4ObV8s#hesaG6u9!4
%,e:$\qmh:O1R&Qg;fF_6::V@54Sk&+qCpAo=bV^3^K-`SX`\smq7B1/icBuNNW-E"7LW5o56GaQrV)1<hs`DJB@),u^i1l.:\P<5
%HK2P:l(_*ip2\,Y;;FgqJ.Yl4FWhf;E_`$'b.EpRmlYtH)\%k@k\nDW?b\L[X8_t7H2gglr0pa_lMYo)DM4-j\=7l5R;-mer_`$(
%Q[aBC+UuF-5JFWe`25WkkPt4NC:9Qq^VZ,QeQ\lZ9)2P!$ASOA)>@Lqi)?a\-A6mJ4]!%i4EFEbmIP4EZ-he)Ij\1mpPJJ..j-2]
%IRf86\q#5U)8A2rs5T(-f9O5$5CTdO0_R_`iN^]A"_=aTIt7Cms-6$>\j[>4?suV:J'Y+o'680bo.RlW:ZM&]99d'=J,T]Bp\tDc
%]Sd!;s#"G-)+Ng=J%=Zjf#k[m?_+_Kq&c<@J)8e<5>nL^rt!dYK$MO<EDJguH7WRqa+)1%I`6ahQ.kiQYLJ%]oKQf+B$bqtjj'H$
%'KA#_S/ucecTf1sSWWaGd!pu^_7ELWb<CPR`r?GhJkXpK"<NOpY?3.7lJI,Ns5-:X]WC]P^Z)fFkWlV3f,W":n7A]PD:OQX9'ck$
%C,G%MgCA\6LEEj:(MPCr5@Vs0=uk09r>D]t>)q]5"rBA7VcL'$Ng3f@<[VLu3aj.IIQ?c(F$92qn\o\.RM:(W5'hlpl_CT&ijIP/
%fCPHYH%-h2be7#KORQcI@_:&3dPO/QrL^n'`IrX@rODmkg?&A9%QfqnV=Ta?$n8hk^0Kt=T5+%&0<c?C&_c3n5p@pcD#U3^4mAU$
%bfsIj>l/3QN[r$a+1ceOj>L<obi4aPrR$W?lF<50UocE_]iZO!@(N&2^jbu,h3Zc6Z.l=$C4A!u,4"G_Ch)CcK9'?.:@j6r,-SHM
%K\p[Pq>=*;Y/CfSm>rP^jW5-oMtL8HJn6&-j`W3nTI0g-g;S)XQjjtQmb@7$FPEo_"<BWI*G;9'W9LEdqP2XLpD>5>UJ?!0(::$;
%:U42/SsudF?md]"cTduLVs@e3s8.;t#*i&sdu0cfD<54/Q\s9&2X7EB@f<gbrht#GBGnq/*lBs-e$+I3T=3GU3SI9Cnt6^ZWRNkb
%4ZX]06`%,SlgiZ&/RCD[[oFp/_,LN3UE`MGhI5ZplsMuH&H/qsT=n9NoHl>0SYQ(LZ0\9K'G8W?95bP/lLf\:c79osN4oaWl@j:#
%dWb'ch_2c^Xp:?mr."B/CLRmVL@S8Zp1c>A^LDDC?Q]VXb^dpb7hLn)gTCCK;BMSAAF/BPh'QRs`ji`'48;=Bdmf4D"9M$q!RdJ1
%>-ek-OU`6`n#2pc^),/pR0q//"(Xq*p4-Ku>DC'/42js%4rR5%X_,-7?hA8Qj)>-JkQ;;3+a>4`8UR(pXJ"aGAl<^B)1Rl4):g5"
%X$q0'&'U:+Os]Mg+8q'*V0]8gn'\2a8tF*\c//EXO`mCs>J[:lqBg7=0D\(l'gpt&Zo,,j,dPC$.H7QAd84iSQXj@@!CblKr6q-e
%"08\"=JW>jg<,C?fo5#':UCmA4BKU9#*AdtWBb>;qqggO]:42J7:%$ON>PT/,`.JF5(f?"#6gnV2?!m2oLp)"a]nQl>0]OQ8k-/J
%T,qoNC\?!`>BEuFh!$.cmdYX/,&^`_Au9%DfnsT<M:SS%!NU=SZX4ADNVmIUIMu/D]<?d&qnXM555ejUAAeWlF\johX&[V5Tp]*O
%Dig[/X`jO#V\,cV:F!H9mmfY3ZJ+]X^S;9u7[@4P'&&pTH9Vfac1&u``7B&EMPE.I["_&tP!(EoI5r^mfIah\q87RhVZ1;lBkUn\
%nm(O$/(1Y/2DhZ8;Ckm1Q1&r.UFJF2BnT&JnoJ#TF(ACO@YP.NW!=3R;8YGc@:t^ndSWB(57RR#TOrh4RC'^gieW:02:lX0M6pKj
%;/D:sH3AA^)fNhGpaiO^26!kg6(%3(pdVO[f)7FS'\a*ms3[s1F^u#^qlQa4/q+@Z$t3B7UiQrOF*"6Q*)LFcZoW\c2iP+7Oos/T
%aBPfhCX:8b%u4>gG=(78J+9F.Gq2a%nC:9;*V^qq=ZuB]SlFb0[t>VE>hO[\,i[;l'_DqA<kgGJ(g'i;."So(f(Us1E7$V>#P*0s
%\Or.B`H(>0O'&PP>,ChE%De5??5g@955T$Iq?Ir268LE:H#BFCDq3f4dW+Xb+>K$u"(m#SI,/*lfl!-r?M2CJ7NDYelD%`N#Sm0e
%1FiTAra/D>%f?N6[<)Q';<et!bs,n<4^Wu=;X>kbpROrF;g(g1B".O%dBcM0-\G='3SGs^aboa`3)Gu,Y]V>1Xktc0o(.f-]_Q9F
%eRgI;Y.$LC<o<`QL&UN3nLk(Wm:R]XHaS1<jnXathb2^Sl0(PV]:T9t<7FH1_dH5i4V^'93Z/deM-TNIBl'9a^"096k<Guc45]n6
%rS7U/n4(6t[S=&`^cBO]?YDcb-4/tfHM-`lr;\^MkPbiI)'o1t](UhIFt5e<qrbc);,XPVs!RD<qIDh)P+qBbdk;C>R@AN-*U84u
%#C\&49YS=Sl-!MknCI?c1>"1dl_QgpjohOH,;.#WR/+^<lZ=gC(<M4%'CIn@58[-Ur$r@>Zo[PaZ1m)20WIM.Dl6fRn]QEr+52.D
%[E8#S^4!m]I</;iInMI(%!(Ol,!LJuB_/TU92T6\:Wj!LG=N^oG3`k#oZFsH6o3e43RV-:0Pa[)Q??s?gLRg?C):#3A9IDV-i6+k
%27Sr5q7jS0HL)HKrT2g]1bm!S3mbFUPCZuu@"![<pQspG8BPLd;XSch.2QTNH0JagppgCAc[AmeOOB1:TYV)BK/R?,`Zh5p1KlkT
%[ef7(=KSQ/c`MXM4s4kkAW2KIElI9=8W,mOIRAqK'RE$fD`?qk;=hEThr"tuor'GZ?QT&X5M.m.@\Cf0T+p&(buVOW_4C_%qQE9j
%UJqB#50O`_Z9$)oP4OUZWnkA^XmQS:N_&8m)J`dJBrBU$8$19RX#GRGl1\N=^t;=;$N'r3*aKn[\>VN\f.-gu`FpmRA-VtE*t[-(
%hKo[NSp"k.4ZGU^e!TBCdN`U!b5E.*P#+S[rGLgBl+sL9\+p1/%Yb1%QX:Eb3#ZP(^6##-MOdA@pJQk4fIo_"M]3SjfKW^mbuhIM
%%rcg!)1rdMnoK@9^rM6G]D,:;"H8WQ$gc!f=dLM5J%P!VJVjD?IDjhbpT[aT7LB@W0H+]SB=q*Bel9u7+qhBsUP6SlR^AnnYD%g*
%Pus#'@PLn:Wos@HH(R(.?7W!qE#1/O,D<Op3DT;?-W;P]on\2AKQX?L8#Y!uI5KjNI\#O9U*&k-c!9P`g/0Bth-'&kCh/<H7>u&f
%XU=[-b&:BZQ+p0JD>"H>q#Mu/YXP&]@os0N:%6mMdcf1pYa)n&ZW2>9Zl52LO\)r"J+bk9S`5<moLc;P_<s#fls"+=E8u1m=>\.h
%iu&GcMnd?ioZrB#*>%2N]/7Jc:QQ[k8%,$Vhl/KJ9>6A#CuFNk[iqOSq_\=uV%CD(%t.57rDo^Y,'4chdZ3$?g<Dm<$#]P;Ya\R#
%hhVO0Sa@UQ_hW:oOJ;Mfj5=tc8\"3A/Cs)Nki<iNhI"7k_tN.8)PqmY!Z]JR.%h!H6LQbZI.dG:hmO0U?0K&c[4Pq-dSI!Lq"+I5
%K08nmiU9NYP]ll!9JOgqcImDsj_A>c,BTV=8Pu-LaZ]N6X7NdsI?&]*8.jP,D&C#a)T,??G5)lrX$_h3h^b$U,.#Ru83IlT^IGQD
%YP9%uQnEMb:W;1.nW-<*#I??]bC62X?U-I5)NCotNFq3H2U;-l@8Q\;)>K2rqdeggV>Y"T.e<P<OXH;Y(ju%$9mhH4[VqjVV,j^P
%3MPu<?B]$&=X)2WQfdqL%6NGgn;rP*/pf?IZ/>4.0#qR;*@9.e0]3o\m>'Gr:7B-tGnn+I?AM4a:@Xr$A*]?<5:V!o("?nEl(M)-
%^QK5*fX9T',tkA$0JEqk@U%*d(iG9CjX#[9eSd\Po)$*9ig#::jV^?Tp[aD=\"A".XSl4s:5#WJ7V"jai>bk0fF2Qf[d!F2mS#,d
%V..%ini)m)mGd"]DoUi-r.fd3SU$#uXf^9e`Igm7\PSg_XCb5-HfMa3npW^X\M3#AcK9+]koeOJCPBIV5J;]MO-d`5`bt\"5Q?\_
%B-23bptYLD4?g)77al\ODZ8S?rr:=aC8Es]>:+cckhse9[(Lagdtc$iqIe%,aJ::)$DXR:$uf/.GOMm1@="CBbWhE%[diN9s-^.*
%j`UKHTE_#pQ^7,RM>p7r7s:@cb`$!$Q*bc1>,>$$X8):NQJ%X#VAJHW3K+k<hO&]F\*;AY4s&$_CYdH.r5knK\`@b)9-4cnIp9up
%3q)k8%"BVpO)+2?pjaDfhp#7V:EBF5mD^O/K\P]$-tKB&X+-"Bd=02%SJl!lQ/"kjC%&4NfpTgt@J]W04'BX;jt*8$b[(3^@d,4@
%S_fm\m<mR\9Jr]F:"/\?bbrMA032u6hQq592bV0N\U",9T2Y-6:.g?0g9Wb5>[:S0GTsKhdTDtLcK+G-h>Qq@5%kqp=]HR&gtT4<
%7_YGW&9Z"55jS4N#3'WSDpqabGO>e:<XT+m/`DKq*pB)qj$(>CR3lusZL6DTqakiRF*2o$4ta$7Ab(c>%V%>ZI"&i&c`Om_k,2CL
%EuUNOnX+T+.PIUSYA0I28+icC!5Dt)#RSXPDsup[lhR<[;V4#A@]+=>XfZInc0+hEc.)W:8^?LC$i@f4paH+:kMk7i:4.Mmf9)Lo
%c0_A"a[3"qXZ`$@)@Y</>t\'0[4_(&eNtUj[/^!2\5SrBAE1Zl)o?6+H)nQ&OFK#$512Moj&J.dfD/+W5J"sRQ+*W)\kG7e[ki/N
%nk%!CDUhL+8mCHURstZ/)*?QL[<Gj>PE5L^HmWc32pu:c0qZT`5Gc%]E\(9dgtK<_hVQuU_<M^4PF;6mq"UqYLlX3T)Y(*'k%d)N
%]5WRO45"k+ICf_Xa7Or-cJ=K!BD4(:j)[lm*&G2f>oKH6GNKBbN>H21T(/_g8CZg$h:ZEO?R<MKnYu<9eD4#MHm,s@T<RIMiffP$
%G\ZoeKbR36)&r+6p%hC12Lj/4cg<82j7>cNRJ=YprHUMFRt$DFT+\L#`TPrigh7ZK`QbQe`9m*O7,7c$'6/52ANML[`p_s9I-AM^
%e=I]T$dN@3kq%9*?S:jVguGG6(G`_5[XA]o5@8i!Vjcaq4L6l2Me?tJ+6**qc:#<apn!@]::>*$>6jQcpeKfn*T&GD5/d3Ik@`h1
%;dq8+oTZMt:U]tepmH,I(-hhD*K+:5(@q"]LXd1lF*i0Zj7c(:g\Bg.]+BHQ5<apj0A@01C3aYTrmE:iibqc8B"YBjocA#l,WF`O
%V2P(mDo(-IMf0=p`l?c$]s4Q\psds?bN7F0I!4<_96;O'a,I^knsF:^2/&C4pN:1sbhJb])-^E^hN"^4(K\USSZDLim*"q@=Q+_L
%);DaWWfQQ(DB=`WPkU]Qj8)Vom&YD[3d,)]7(;FWf\")5r*erk5tb:G\#cjg),8HpDr6P^&%sPGe!iN7j'sI-M=E$-rFLAbp2i$\
%3"_Y?VL@Qc]2SG$\CW-Pa&a=KX5g2>fB_t^rq=2'k(uqPhn=8=*C%2"ElLm^<tjUqj0R4pGCFmT]QdQFN)uTH)WS$Pc7:J&hE9)t
%N-D2JcP'dnld^jVL$\ELr;FXYKX&2]3oS*))AE,;_u%C+:-1Y%c'd#oRs$hIYr@0k:)kp/=!oV`9,ePRMs#j/`MN*oM<`sCbJ`.F
%pLBrRgIP)ZQTnMbRE;GOrS>TkO6PCjF2-@t'YX/:jN@JOg184%SkO%7*5,&6mB"T.T#bGWnnP7M3I+t]H_2k(f#6Y8_rK]d]38rC
%`QL\_CAP&[1mOSG[&4m([QLs>B\lFZC?ZU>Anj]'mnE+S^,;f`V\W=2Y)bK4VM[jfR<l$G2cIuV7<7Z<0mbW<e\+LI-Rt%@e'@bp
%EdIOpq0"g*drM=p%Sk0qLUV'bdhfE[p@S=(bMI>@>g6&'G./NiHZ,m+BZ')BebDhDl<hgB?S'I'^3[J\HsuhkArh&pb\?ZZC?G5u
%=IL[W[s)KM)+2X?1-9!Pe!WgBFtl(.3%K2sf4NY']?/`cpKVq90_nb@^"gn>bW`Jp40u?&;_0a%?ME6cakZdk>]T+AHqrJYhWNHK
%S[Z.(H_N9>1t=)$?*u0VF&2JgmG(q5mUiWRHFTB8SUJ5A\%L;0r:9"&dsUT2W6XibjQc=QH^C<!i`LDFrcQO[cM,>=,qZGWo.Zb=
%YR4V3$S.(bbsK-KW%B!R]&O0"GDGlYl-[d01nNPV&nB28[mX\GD*B,0''Vf1s8=.H;m3VBkO,ICGeC`B9=uR3?P4I,f1'dEF0h2I
%;c!'slD9JOOuqh_(Wl:)Q&0$kkA2qWheq!]a0tB#`Ph<:e"TnbG8IS-S+hgG90IXlqJ?%XOkA&eHp>8n11k.H.u&I1rar7D`IbAN
%3ug3)T5tggduj#99j62>gmZomAP@/pG0sPXR=-g!MT265erl?pA7f%XF7\nVRXD<8/SfKThHF^Vldei)rlVgB95[knb)*L^GK6WK
%g"]0J(=)9ASTQ%#lpI2o[dX-NPl82jloAPl#6ld?/G?C@cK^:WEji16a.1>`M4RYVRcle<H_TiO^WlFVs$DaV)qjSRHa\/Ql]r10
%LAS\=-cOkGAmKZDj/+58(/Mm5n]?E.WmB26]72[akAD:`rRl2l(2i/]k>InT=`:V$C!Fb;)9-:Wi5/^Ogh_=!fo4rsY:]3i[@PgJ
%5CS^"I&jPok\$d<g\t(LA]9/#9T\=^.go!k[B$(!V8??)eCXQ:dT,D*]i7(!c-\;i'0Gm<ZBO)m/E_'&h<!,@h<o=Z@XEF3=#;O1
%N1"[0-'`n\XW5'>[T8:BmHhuBp%iYcZ$qsD?(3@jY3m*58uiKc'0E8^D:`)uf\#GiXlc5Cf(O=M[alM&pV6iGm94jO4d!h"Xfq,9
%ma_p&]8,^k_Er.Rdk:Kr`Ij/h<*J#)WKWalGcKPDCT$4eGAh3-GZ.8ub?*$SMs$"5qK9CEP*oX%Hd2=U+-"K>gZW291E5ABG,I/m
%b@Hh6F*9HYmB1"rHG/]^okEGK2f\XjcH1_;DJo=oREXJm]VKW9a1[]7im_-`TCM&Uo4PQ&FM9Zb\110Z]QO\+M_BNf^[cPKGWP&2
%2r[K:WuGrn]AM80h8_8iGE\l:NVE8%cDKRhA2eRbS[ZkeQi,QLA$5gD[;`^`[[!GTIGHrr.:otprJf+rm"`!`]iH#Ch`a&K\_DQn
%YH7-8*8GX[<j1u<G:65Y8U8m5]/*dVC3T?e_X#0a:SuT^].`>+YC!Tfr-WFbQHAQcT%0pUf?A8_IpP=Rm&*;OB)f^ghqr@Rgu]*0
%H\LR6gq@,:gl-Y4*5(IlV@TeqiqVK`qX)>^6gqa5'Yg\t*-m7hf[5771J,b0<Th?fn]^!dEP-2(b2[P]EW*DPJ$sd2=ID33fiU@c
%3k7JBD4ehgDWag/e+K!T_kicRe)t'1l"mME5(8g.fi^AJ5"QccF\\:\cJA@to6g"<D=>+uQ%-K7c($c#bXMB=H?O;q9o`M$Wb_E'
%Z$H(iGq_IhI/3]K=1XiMS<-g_]<eE9],Sr*NYcK]l_Ts(p$:(\V:Kc65J)8P<kEE348/:E:&4d&m<3Z\'Yhmfeuiq0TA"()n[mir
%/T\D6^[uVlG'($:f/g%WH`&:3mgnF0ebbf*4*sMiS`Ls%Ak`"s\pToqS9;8(*j\T4mIC1Q="6s]4l$n*;s+t9ldXlbnRLnSk\9kf
%nF5\TI"(k?R<ptIH2G9r>,HDi2/c*hSZQ@(/3L\5O%Mm>gc3':XZ5'i><,s%c;a)^jl<ASq-L'B>[2_Whl8.&fs^7LkC\ttLZc-a
%/,j!"24%Y[(E;Njos[\ok1n67f8e.BDJIGp>r\^biiof_H?)+)G\oZ`XhOU0p%$j_/hPtlYO,eI-%G"+Y<L0&A*gM+ejup51`H*h
%@CnN_j%hW*e)kMRZtQPL(1a`&g>91i=t`Ze.rEHh(iLLf4?U&VoC6[$k1tAhF5JXZMIW3eSZHp2ah./i_joNGc;%F=i""]^0lW0A
%6P&j=`:b[Ok=Rb3I`j*n]6:Fkf;IITJ"3GFZ5$WB9=NZ@@V>0ke*+lf?0o7PlM)2;6kd8@3eshN5=`JAWDY6[WGAJNN8_L2BVS$B
%s7U=)m]7L(h9<'-XA1Db0,M(aWImSce_+WK/3PrPgP,F>b]L9o9Qhf%fk+QL0;ZrPf(PX,V;9nj]i=0i,R\m5c^Qa3BA>2P\_#X.
%Jh`Bk^/*%N<YjEF<-QAdUh*HI]CAWMC:fgXhE9LdXZ2RZ$EDZL\R]aWq9rNZjXXM2jpI;Fnp7'tHbIT^f80Zgb'(D]XcqVbr0eK&
%.--nTMp,sb)F#.,WuB_g,A3L-IT;s]h;"l'ZcVgB=,i5E\kB0<(%+smh.1"Z[kRVTR+WlhBc3dLiUPmb,?MRjOGLn/Q`?I??M6fo
%Rfa@MSB@,@h=oD+\S5e&6FrZ"J%fjKVl=l.FR`&AH_!^",fZ;\M9BB(K9l%7BBDk_P']$LI;p<o=43<+e9kkXi=Vd==Wq#FQs2Z0
%*e0mAV>,d@[J>2mpI-ZN)N.&;WD,K-eaBoiRJQ"@FJ:R@qiT_uR<lmXAlHn-01Z,"jn$)`\lkJ>bcgFd02ea[=rR_tQcsEk;Js*n
%:6^sk'mX4,jeZ.(Yt0Xdm]Fb[(+P``4D^rZ>jY:`Z<Jj>(\n6l75UCd\e3t<1>BC4?TBds/6Pd/G<G=tF-<u=-K`<f/2uQT*&U$^
%[ERC,88&2j0CKhAh=t;oZ+)PhLsKFPY`-@6pH/foTk01\Yq:b2QsVAFkYE]Fq&M=V]9%MAZWUA\(3/i?0u(/_?a+S:c`;AdMq+*S
%o'?9<T4Wm6c$,7hK4S^qAiiE>Y)e/pZ[.R-'o-484Hk,"E[1F)`3jhAV,)09o==/Gc?m9-S=[fXVmE.`c.p3?qXgW69-6onp<ok)
%%2MLX];optW-k/NHsH[WWMGo*J6VL"qQkJ?A7m\X[&[61HBKp;8SR&@m/5T4nqB+NbY64@+3aQPN,uO889HsHB?nr^`B'WSkLM\G
%:2k)Z51B)kLT*;DodK&,;Q7RQ<,g^V=$L:(\[n1`[bW8+B>^[IM:TUD/%'cY)bZf@pHCc>F6GG*U^p6#Z4dHOR5sFn=\B9hlJpO#
%'P=5rZe6.7I%>aB<p"Ff:1qBcgUA/3U*pY;@s90rY\c/AXX"qq&D<UbDX1:<[2)T:lCGRHG1$WiRCtqq]'UBtc;V98/N9h7PE%VX
%ND*WZ?M#T]]j3D/S#>;I6V&?Oj'5UpEZ8q\'jBp:Ki:3*Fm5Xn);jCm-2P!qgLuX2q>U;tZTgjAjfNF$R]U^JJlQICk0TP;hqIGc
%CUp`-eKC8DSct>Fc*)"lD[3=,hi^a@l.a>9\W,H5\WK($gs.M&<bDbSK'N!*8>#=XSl=gM>K&qc41_5!<p#D>D+Ke4I\F/f'rJpt
%,ouo=T.dmk:B`8QT[\ll9i'S=mujhYSPC9YgN1b^8&\2#L!u&EI[Nj+GHO]0E3/pT4W*[M3gEVKg"lC$F23IQ:$&D>l2(LFE*OeR
%bf4"7,G]jZ'bW+mC$=<%"YekO_"'l7T-L\RdE4,4Q<&j(7i*H1QP8t+X2=";FcrtP<6"([(il)"g"B%5<q>Z0J'5HLSnk@rVgGDb
%9RYYdik01*Jh"J,g74?fIp/(lRsW3<e,<G'Sr->)XkAR.XLXJL:#XP>EOr\q<1]E,c%VSPH3f/H2#*.NatWa]JVMD>PPh=<fsQk0
%m4(=AY)if<US^Ye,RVsojGp?tlZO=:<hQ-@*fsX:<X,>mq\,r?Yi+FZW=]$9n;1]t!d"ni-Un0LTo%2))=1>i)/+RdVgpAjD#Ipi
%NaXC<ku"MPT)m=njiJW2q4VAIb8XUQ;c=,0G)DC+kN/J##U`<oE1*!TDYb`jp?h\TqCmY!JsI98%.t1qeXr?j_PA*Ga=?YZs!LSW
%0"oY&!m-%F"'lkbGi'R#6CL,mqbjKgs4!PsP!+91)]64,m]4Ye_jmcOo-M(NeQuC1!fF)QGE'EDUZa`aZF!:r`mpcRL1FF*S7?sY
%SS\=/rcVu*i,&5k(u^s8UL!1A0+S7AdN_.l3CNBk<$R9#okk+19:kmejGkAQ/^lE(_#g9@3;M8VD9/1SAb</\,G0f>g.JjV@sKUf
%F7t,KW?V]C.`H\=9'Z?)eqVOI2q,gtk8eS&GM5FX,COmPdk%:go*pPHac-NLM`W.-*m;UOj@\C)G<2'o2@ed=q=DeS^pYO9,!JK7
%;]$">U>s&9L`;RW6WSIr'"jVr"Z/:Y0hjjjm*1mUQ<_/\/YqdCM/A7c#.HG8i<*h4X_gGf'+7ef\$Q)%7$l"X<78h3PI'mQDl]"m
%hd)`ir3fp&q311gjuAt"LM(@UXddf6oKbBVaI\Cb\f([XTeI5<g#-0]*f+&RSK4WimIkO;]/01@C4`h)H+0'q\N#0OX`6FlI,!j+
%<'&_\g_C\^jgW>cZq,Wf>'qDnYfdW3(77h=Zb+@TY'SS\=f`Y#O@u-ocRNS_[`34!O-[KgQ"ZS![+&_fCeb/nQg',hme,Q_>C.*C
%bLOVn1V(5@-BVm,;9Ip>$eQd%DNjd5:[30&WPHl,[f9WaLR8G_#A^m5`9b'=iQ,>P,R<aF3r:[^Q!LJnXY/l0)C3iuW:EF5T.KW0
%Aa$Mb3?2r-&^[QO33it)MYAuh7POWfk*T=Nm,"(]_p(4DO+)=-(`Pk>p"q5\=kZc!^@:p%k3"Y*A<in_]Ob1acJJ''8+G9eTbp7?
%>!?'`nL.I%S)5?j?-$0Tjh)3p%VK2_I&4dL=/OigOtTtJ^RH/qjI76Peth3m!Z"m@Qrq#kA8-6LF**eDh-;i2FX#c(C,14EIr\l:
%c'Eu8qE3Z(1?@31e"O%Yo@31ud_j05lhV''PC:!$0?p\;4?NcEFdJn69^ZHJp?'Ke5HOR4G6qE?qokP;)Xi.f-4Gj0EhdNfVX/rn
%fDW>fK#/,#s1=WK%b,r,Ltg%Hq=X@=Ha(Ad9J,^<NDYN-&g*YA+FUOmI\jARm9$?o\Bj?RLTii2@9(*f<W3%\D>g=._'eUlOc#uH
%mY`pBBfH(=2P3mjB@Fsn;U'7JA'<D`_q4PF=n.AM=K3<ogQYFrCaMJS4e1e&5-8.)<PRN41E:]ZLiIOF?])*OOG*O<Opt'[VfGR.
%jlAodNaMoCIKi.UAe44NKq*L,c*(F/c$c2S(YO>[]Xnb1cKma-0M-7BCL[/cQTQlJ\7m7r=f5`1d*1ck,-bOMrSFR9(,)"Q!D01>
%M_C@m8!(*YZ.m@%C3=j-lGE*rRE!&]bh@S/ZL;<654!&/pMi,V5:<HC'@u>10U.qAJ+li6([ncnlK6Q:C?`#8SP&-b(#o*da@!k&
%Y:Nq89qFIVch1+EL;NamM9bU:3EKo:m';Zq`cmtn^oZ>:l/#NlI<f/V4XJ:\5*:=KRWl=-BatI/r'G2f,OMAV2u1m1I<N\idb2k-
%aZ%YNrg<%)m[pCQG>jSn5OfWiQ'kT!iI@X6Nu.8NCA2&":AnW3B+sf]P^Q_@,ehs&,Ice.XRNIlZ8fLs[J&IMPCAOeLT/`%!pB6=
%p7C!a8TXKN6,VoRiMW5A]I+%B/Uqs-47d01bNdCcRTpuKT?,M$7[9A'm96SC*F,G,gV3K/F*\gu%1STZ;/>UC;*8Bg>^h#!4QJPc
%1]6S'6FJ)pd\jXMRAkPnSma4`f2>6H7s.#&W3Z6;93g:T/R@4pnDs;ka/>p2cO;Scc.5qi\uDOCA5TFdbDkk;p3]#F)b".Qj@ZOr
%PM7Q-+(h#NX7tlNn&OI!9T5a`bkCn9^Nj&IBa7c_A<PS^7kF+&UoV&hnN05n[?Fa6P%o(:WK]K#frC;QGjf6UG%1"C9YQ[>>.e_`
%]&a8XmrW=(V!p'%F[A0[^WkZNp.Cj`r(POu?N)B0LN\rZ]m9K%I<mph+(1N0X`3-&S^c*#Z)^iEnE90T>d?@raJSFIG>)is4'9QU
%S@W-t;;piUV=UU!koW.ec=<_;gWULA%Y7n6,*nZl1`&nS[uKCSe+<7AeB1tlK%oIW`mff).[dd1hKHoL)EZ\Y]lg3%[9)bq%EpSk
%]]E_][e;.4ag[uG-rMYLa)17c,Y>Gb.>#)'qf=<V?@9LAHZdt6mp):BaJu:&qrM(ni@bU=4:&D6;YgW:c[BZ3<-%<p`Jo[i=Skq[
%GCI="R]H;>p"\#$D:7<im&UoLp#[+S:ktDB/:`?1dXHB02Rg$!ZD`.1lf]TkaIC_J_G^5T/3)1<));>mMdj)U?H\/H[[Z#$egE\]
%UAEh";<R?aMD^gVfc!5PCIjUh(-W53$7VbE5R61o.`CKc9T!o;n;qRN"PJh]O6^+_?@-R%<X#/e<8IlAYLMW0#uB#Y\M1A?8Gb'L
%qr<CciSI.7ZL*aF\YqWgm*)ld(J='8dAO_9`J)+74;lJBl+bKm8g68WH5V[1g-ChsQ:C!'cb_U>Q?HjqBDIt`diEOf3D;*$]5Z#M
%5SBTsqKeQnh2F3q4WQP<3PA]f@(hbA]c>6b6`]ZDQFT3g$GR=+0Q2HY'a1%nPq/GBghof'gj-gpD]b+X^"pOGYs<&Ur=^f+Z4ANb
%Hb&4Rb=[G5f>L"V0K6Tda?+Dh.FLc;\RrBWnOr&VN[M9]U3hm^.b:`=o"nKncMu+&;,c=(<spfG)h.FTR:VFsa72S]IIbmjWdrM1
%A'^R_R.hM=TMh9HpJ=!Lp4epEYZH^&q<6`jII_AiI5Wcs-b%X)FifYT)MDR*'HZuqrNEndK;B;.]!?\Eh=8m**]P(0hc_SmT3@_@
%+3'jH?/4P"O'?+^`r&fSAqullnO_=+0Bou^OZn;hfcgLmBs03EeH\.Vc+/%=a1(b0,L+C'[5356R/1Jt1<rCE66Q]W,G@10C!:gt
%:6YL"k4SC$Q.mc1olAeC1Bl9,[oDH<>q\+gA'4PC[c5-OgF07cn8!5<3Od_[m>RCJI1,;7\HfF.V1ojfcJ'F(A*[`:AOnA(h2pAh
%3aLISJ,1QUhHLG.RN9uAYG2N6>0016!@1uK@a]M5+^8qHPH.Hda$jpE[p"$T-Pm#SWSK3idtr20jO4#)#qAR=_e3K*2JmIIS7:3?
%So4Ad`QhrHgZ\@XLHpmV<q.rqS\6#dm;1[nk:/"VA,Sbn&](50B"QbD9ldioQC\S`Ieu*rodTakgakS[mLk6'FQIVKU*j&L['C"t
%L-r8tWPj]b$SH73>^NBXq5;^67IJj"WXW[J:l,AP.l?$RAa*^Ho5UH#!N"$,bK\1V+ao_m0C<mH>(bKr+l5rn3*46<hf<eG`KFK2
%o9K5rFXnQ21jR.Kao4j4[]11Og#$VM##doO]U#IVRu<!U8".Vj8*#Cu-ZXoQHB0WBl"oL!GpT0?QD#b"8_KY^S<j&s+A+HT8WUkH
%mVDoP2YloAmQ%"&omkM29kd>9Zh/6QpJJ$*cb;gMCQLP4]s=,7\BDhT=f]qGkq]rn)W0+2['fY=mG-0%jd<u(D0+b&U&E%>1DHT;
%W#m(Bc7H,]3_pI07H\?*SK+AH;V4)")9++!WEMeJ4`Jr/3'/ZEP/s4H'IM'BMQW##(NS:#WY+'>)Vd6iq0P!D(8<Ln/!ku;%gRa9
%$<,R&c!7Z!2p[>XObn"Yq(j(tb,61#anC./kBb_FZN+/9VXpXFZ$YqIdm!HlL$e!=_nu5tn8?+":@kS2;a*1gA+o_p0T@!^2h6!0
%6!J0$>OUB:[#?!cmV5h`"/YJ#.TkCWT'u>D0G&%BO`.m6R,42]Cc9/?M'AmVM.CLNIb]o8?11MK92>q,DG.LDehsrl2MKV0J0VNY
%O<_N(WTF#q8,>%m+"/lr;]rfA.&L558th<:R`1ji0;k-)c8)]9F_^(,T'n5k"]"?^`F(T%*J\2=`7bRcH,*(to0&t"X&Cc;je%%6
%]@8AJ-iE.c%O&H@=6F5?Cb:*g^;^$J>j4Ca9I-'Co%eP6cD6Pq0h0!pg!^/RXcoVFfN8u-[u9kmRQk%U9\8UHCYj]ul&k^@"l5'p
%n<8%#<,4\Xp0k]XEI#L9`oXsj^VN#(_mP^'l!)pXr-RLKGPNl_hu@<Rh^_aB>\qBT+2b8pj!U4(/qCQ0ppJpekm]jJK$2`W9l;F+
%"@rEp(k/Jn.5p[GU6kC8:Rm+l?3dnLpr28MrjhqSr]T23CDOYCn1S;k^*38!Nu^ma04,ZQl.CNRl:7;&Ugr&kAZ;:ua3Q^)VkDQn
%bZjiGofqrt2LTltfKWlC&_i6"g_mBfhs!dSReWeR&pC>gI,pp3g;R"<O8OK[Z1P<D^VXjrdkUZB_gVN(FT0*gbHbEskMI\SK"'\N
%?Bu8@bg;a1L6j_kduG`MD'a&Nn.d!^dddeY9@-U/e+Fu[D<#9$X]WHLh5"K5Ia%DHY!]6;9LIN*M;P![rV^YtVXZ3`e?gb8TQ;q9
%;9P[+';dAOF8*P3=jflf^&ZCIm%ieM'2RASTCcq)Nse<%I=mi//Megm,Yao8p&18>'N.P%!p5?8oS(64*j$i<8\6]?f1A"k*^\Wn
%8OKW@d::&#m?hSpqV$*HJS,Qe-D=!ER'u,*U&m+^Q:]i)F\TpLBJ'ZX@@KgnpKNJ&pb@#b_'Rf+Rj`k+KV/FOR4OB;5Ntn4/KKJB
%ik(k6/X!:&a%VPcZ>aJF.GIWZ_WF"KSe+KB!qB!R+__=F<qB$AC#d7CM:a_bkm@E-3ZMrPT;3\PT"m9Rdd\Sk7Va@lLR?R:RaV8R
%45lW/;S!X7$F()>5mZ,+W:!;I!lt%u^.eiLGsl0F:YUPcn%!r\^X2*K,@[sS.JO#O2:#452eXPmTg*4cTJ2M!A0^>3b6,g]=q8qW
%H8941-M'0fjeEXM#T@9b-:s]r@Y4<t57!mSSJ.lT(N\innAF5la0G/Uj;o@aC%IXC1W.g49G)=S.qo<F5f3&).Dq.)i:IXTd;J#8
%a]T\pr\XC@'kIUGBh1[l`pI-5VdT!I<RXJ-s&hiXkWRf)ZfCf4%F8H7A[o2Fd<<]T"m[\4Peh"[s&LS:P)dkm-+M=2P+Lo(09@<g
%8QQ7hV*h.kGZLmUY],f7Or?V!#UNRp3CfVhDT:,l@22?EP.%"cJje%.[`'cn,f[Q.@:GS1KLOXl3IG#c1e`tHZpd+>6ZP=j*2Fm:
%D5&.^'dAh#ZOlEK#GR7#1Bp,!-Ou?'*Y-f+Ka!)O@NdM89Ch?r%O0RQI4-\2[0*BM5G/<3%F58R>Y.HI5n+C_91Ta/`(8<I0+,%%
%R1sb?C=`A\8aB"l=!**B#%?K&R$XCdV:&rc9`h@MMP,jckEq$D"D01i/)p=f=Z'e5>$l"pin1'/_-NWU4U3'"M+Z2hMNpa07?5\A
%V.#aEPmu_'DIFCJ/DDG`l^;Y7pPBRoE3`%ERANq+7t=?r:dLs9$U$h^mhd*3/Y@.!ja+.VUs!JI4P1i=OD6U0R+N#YR)!fYKXh;N
%g@/6^$,Xi+fl.QM@?$poaDB618HlNOg!NnggQu6*rZ_luRLgIsOPV.#,P0hTcr-Z@9X8_B4A3%9%1I>4$V:M6A5hY`*%\(:YV)Ro
%.ZPqXK_hSQ!-DXf_/#>_PD3^".-W_KF*IcG:1<[q#[`rL`@`4rqNt(4d;TtG/4>7^SBm)>;]sO#(?7u@e?sNgA=6[q;3+[8$j&e%
%BFk?3E-X]GLFnR`TE[r>`<eIpjtGj/72u]dPuM_NGNj*Ca<XF`LdWNX%>i%eg*:%lWYt&7eVkb9dP`(&Q5P:JA/6.S'I%/qVM>Do
%8#MF>+Nb7B-n&Nh6?Ge8M3WdsTVUUb&%!SMJr\-6_)X1alhHQS3sOl&(`FguJm8^_+\H3T&h>B/9Dj_Di"7u4\Wg2f\-c#aD4h8[
%-8J6UX@XLG%LrlZ$,\M5ShS_RaD@%sP$b2=(48(G&jMNV`;h*C#BLNK4H#;1O9']B'=l1'@2/gA"361iZj^1OJ4Sun$sa6e(t7/0
%p.>Y0HuEJT5`m$8<c01OY!UngX6IOT,DSNNr"OVtF9FcI)Oj8HCd$8m57RNVNb?f6olc.a/7o#2]`FI`Tu<mqa('tMP,-eVQM&?q
%+=1j^'=!?`N%.LPmZ>?K$CaK-K8q:T#An=?R[%V.Rp";HPfW!3?GK2\0ku=$++2@S%CT3\JHPT146kbFTlK&2dfe`S^kW+n_Fj@"
%K!;/HSqLV9H"nMO-`>*3p#-al!WWPG1;m%E_:rrLi1hRJ@Kc`[n<HV#I.EaHp8&aVJp544%>@Hl6VrpU3*$T4dXs5Q-4!-`+#JT:
%K/Xb`]"qrh$+!#H:oG68R51UPLq.rUO#tK2CSbQfMX\?cC:d)hfoeos%[gsF71%?W:j+bp2<#JW,snhAZUrd&(+F[q:>9sFO^rGX
%h+>>UVmr,D.J\R!Xj_"=Y%K4<WDtIuh\:!ZnQ`"_6\O1M(']ZuOkL)"!8.R>CA&$,HdFc.?=ZQ^(W"PH'1,k'<;LFM/a,Y?#02@i
%A+9]:'5F/@QSOf#4h-m_%&H\jMd1\RAC;b2GE5r15>r1UEF`\'#DF9e#f(!e#?p%F+dCkMkXuOoMM+Ob=GiCaE<.77I['IK#qP$@
%W$HqG7`+C$'qgHo&+m0'[Q%BS/I4B$5%M-u/;WI5(pO3W7V<$>@9+USRGn@4<?E^A@!0Gs`9#VQ:e?h$K-EqspB\)c%dQAUbMq]e
%rd3liGP:KpMp+(re:a6%HOlUn?m[*a2EBV?0EiP]h6.*O(tb`78:ub_*8"Jf4:T1;7u(JG@MsJKkQ@/DJYdPWU0uW#`u^fTk*J2`
%:LKgm'[%Ic&9cn/N&N)gK@0YB':=Bb:Z-aMol!T%PLB'Xi$m+a.HqEplBU<3C-kC_L)\RgKDJDk6I>-)@m_YVcr>[bTrA3o-=RZ=
%65i=+O<FoT;!8*X_$FY=#RM@(Kad2^h6@C12hDOSTUqAKbt13Ue<;(92a@K17A*DJ$P=bbrNJZI#%L$!gZLk#KUPXEe^TLDq]$H@
%61c$K$LRFl">eG<^F6J8I?>P.54ac,_f'd\*#eL7$&9d:52X]p1H=I0#hY'>+"8nO,m$U30*:hl%-X+J=:-$e?kaSh_<<-V*peO4
%m0T/aO!)4](IkkI@Dh<k,CDJ&-GNtW0/rqD;2A*S7joSX0ER646R`,g&.rarJOYkI;?r(a,,,I?cj1liB8C6<-oAesIEWm]0FEdn
%@XlE1/NA=l^S%1_L/`AJ:1-lQnE9i^m7@G>N<]*p%G:es`mC;F_1(:5\09$M33XbBY]'1$8RrIkm+[^f=;XNbT(ETt34(%F]J56`
%NXe#:RsfW=JgS5TAXMsb$&`KbMSh.bXua+t8W%\V2ari9m8kd9LReH6Rkb^LRcG(^AAB@"O>'Yr&l:l#&tnUbEjA<V53+OUe4"N^
%96:$O+Q4LVDBOb#NWKB@n.@X[9m^jB9t8@f]J<&B>XLe/9-K?=:M%^3GkC@(!pU)LPS"*=%R5u\S#!OoZ'10oRh6dXSJ,;#%?\U)
%HfXi-@B18+oKkqLk7b!VU,I%i>m55i8K<;To&)Xi!QT2./;3)uYB0jeYKL@Ya'QGE"c"o(=G8<3O$nsqm`1VkJV\n?.0`Zucd/%O
%1+Fi$5"*u_>uT6c_^u'kg4lLj(7\D9_1\p6Xs939r#%jrF[X\F%JQ!3;[1*.jQ9$&3?):J?0*.ZK.0;eqOXYR+<b<aC,Po/4b5.0
%UGS:&<$_Z8Tq3^`qAt5GT$SXYh@jXDb=>B)YoL_[!?33s)M+V,]C\poi0DA18ojlq8s[O40GG*TnHSWT_r2X$*sT%='R(mXk;%kW
%jf:3\#'uf!6,M!EYY1rco&WTaeK/uIXs?uNZt1u(]1>He!!./Z?QO6n[`;7a#TNr`dfPi^-fRZ(SO%KGO<!.VkO*VM-9ST'N.=1h
%$G9*V\m0XAGnDU,R,2r7`eh0h]YS0aoP'CgW@TA*ok[8oQ&2Gp-fcfq4,_$LYn8C!_Fq&&na6]*cVnq@!:hiVQ&$>r9]B"dDo3`>
%BMQkQ$<1(,1*L=)G7]mJNEF&N(i'dS@B?Z*^1l4S\3\%\%"`OdWZGeb36Xc#EY-&Y%\ouD/qj;5Cc0p%M-LMO[<\9\"1&<SV.l(9
%Q:T>@$3l2DdOD-C!CA?t(sIbu:;jWHNeMQ$7M<kljc/#jWCZSh=P39X3C3`YTa=+H>)jef7@<t4Rd^uFRU`-g))1<r9il=fM/5,J
%F\iCk!<];T@<i39\0\#831cnrZ3@4Lc;ATlN&PS\?673^RrctN:=jO9N%h>J7YK;).8E3]\5]0>(A0J<>!G>1OIp$1$ra3M8NnKn
%.T6JdI1T7X!LZUq!Wf%eARZj#+W)E>9al#@r9eiY4tr*of7#)&ZALg]R#qsCe>KYg8D(jJ,7r@pmNV&>S$Yk"\eMafe1m@s/?g!`
%.6s3FB8In>5o'hNe!#*B$/LEtKkre@1XL-'-tj,"XQ?aTRSXZpi\lj]66>F('WNq0(TbR^jIkR<)Mt5$(ihOUr\+DLcV7K?(tu$k
%<455!^^["o@S[)t$`57\7Ai_[O2I,Q0ssH[+eNEDbQMkb8?FW&a]+[U@'KCRf1n5DM*dH:;NSKaI+3f$UnD[$gPCj)0;,l_'UTf7
%Ma6N]Jf67^QDC5]+Wj%NMYI16GC\0h5XIO0//!>r&h<*7gD(&=)bE^DfVrlu`gS4g4+UYE7hbURP73Tq@ue>>l/U2_*!<2SfaMD<
%OZ4\9Ub&P//,U#$Vfn>3LYJ_s)hXE?a#%teSWMcW3MqdfUge.7G*bkR$>QVd.K\^b4ImD[nQCbpMs6FF)1c6^Ga'eA`PeR4A;63l
%b7Z9u!?J<%!(HF3TXIai'(NA>o0@O-jJr;LE^f%W6NWg5;U-oS%6,!!gGrROAs9/3^4'=mD?i@cb?IKJ9q&?5-jD^:3D,eqZ!c#S
%'[HcZm'L;9hcAep:%0KDG>^]%LcO8_*!X5SH-0b$>s1.L^s^8$R_f8M&fs!aon3IX$74bq%A,p%$:0W1X`K\u;:I-aX4l?P5n3s!
%CD-JuK!J)Rd#kJo8COu#!ZB'C!^oKu$ULr;C+7Ydb#]5j),?m\/Hjp8AWr^>l46:E$X0,'q$m`uLm>M&"Z+SHWZI>L-u+B,B5+]b
%iIo<qE>?fm'O`dd;&`U9-D4U(`#PodX,->4/\GIGWFX]uQE*ifaW(L96g33LTCC@r$7`UCU1X$O,CMhYTiP3PHpTPqG?5NqQqTDY
%hQ1@G;[gd3,&ca.C+2IRQ-BFO%bm[Ui-A29:;Eq#@/-N*QO.C@/q>WMm3=kt5gEfn/\!W"UPG!Yp+FbI5n(\D5k&J[[(@Gkpl&_?
%W7%['$cFb6,V,`X!s3O&\ispD<Z0!i4pr/a>l#)i!1bI.V/;>nV7;8=]HQ5\9*^SSOGb:MF5T&DoE:;GR>q_H!oB"*TQK:jE6X:`
%N3RKfd:XF$?\Y/Y@/F)6>Cp-Oq"O-jJl)ZN(@6:W5,724Ch.N+e_t%#A#\KfM&I@P#d0Dm.#_+PqoI3:d]hZ:O=p9EIMa4^HU\'6
%*J62J9-Y%-3fq!ujSC=P<":2JJH8O_MTYYq2in)GTh+@/\VRM'-s9%Qa@0VCO>IA??q])c,SqX!KS1hqeeQQm%Q&>44>[M@#t].>
%O39F_`($Du=U%'gad[<YZ_Z#*^f!^-dDT"X"<pQ/@oGC:Lac;P5b]h<7:2.5cJLDq+Va?uG2e>NHl&&tg*oSoM&m/T2\a>#2:RM_
%YhI]eO?9B,g1MB-_NX\(9b-J4KMDZ^BZ-"tQsA.%lfsF"<sci:^4GL,5bsW%DpdSN7F5M[PX?J9[bWWVhuK#?.X22@"XU'LT;7#N
%,Ok5.Q8Fm8'(sR!#(\7p^7eRoY\C%$(%R:`6R#="h)=IO=pK-$3"45A;#27!A(s=s-#JC\LSmf_$D])qEmDHiR-L[X%>Y9;%7l6\
%hDj4td+8:M83r69Nma6-)]O@%Af3S\K)$-!&kAmb&pI<ZhBf+Ri-@:r.5f18e;+#AM6n4SCfeS7R*h-LWYXueFJR'oGc4A`$;-==
%fd9&2FEp>t@)0$4#/X=XJj>XKZMGG/X_$]l;m=*G;8@7;QGI4q:XLPSYlR-dScU%t",GABQ@cW<UG58D_/=i.]qti>3YY5p'r!gD
%(.Wm7-)a'7>n@4gd7L`/DBUHg`)$!9&*7?u>(CGH<s^0.dE7jXH;a&3+,N(hs+!/oP+`Pce_lnuA=s*c_C#%!9OA;Z3u'f<X`kdt
%G4\+T/0f7i+Sc/V+$NZ!V%L#[%Pn/Vc0_%P<:!%'Na,Y>]GCjH-.0Aur)JUl9TNHl$P#;0N"l.3<=k6a^ttHK2Ud=,-)96EJs+F0
%kD6c'cUa+DMS1,Oi(,EIB2*rf8)U>X^s;rY[khp_MHuPJr\kFYR>kKY7.RGbs'fa\Dp)/6))T4o?jt\VS7QZe?fTkV*aIYr(!7/o
%XT1tB;#iJu&F-=_(naEjE4k=KJ:OLc",p`)Lo:.mDR*]5B;i"#U-U3Jh[Hp?<b<j=*CIAY$oL#6a\XS21kTF\.-j2?,1&.)aDlM2
%+@I7qaAEjI,V@.%5-f=>Mo'10-+;d9E;0R7WQRKhQfD[7cAWn]$BU,$=U#0;l"W$i3]\kUU03)SUi9U!_<Z-*[dkUB2*&X.Nb9bm
%?l=)(kWZ4>!;*,1h&$E0^jL+tXT4%P/jMa7Q2q=$+/"S$!tKAEKM`kdo(jbD";u;<[7O)<T`\'t@jts=r5%Njrn!hhI9+,r^)]IQ
%K)ns*qX@@U$Bd(i*(tfu0462=!!!VJ%3IHlFsX*JQ8o-!1!9Q]o/Cel'bJgD@O"U<__Crm78P3?-LMo(>Ukgt"JJqU-kN+TVB't;
%'hJ3qT.(\_,75Q.1kg[e'LAG3='8Ng*DIs3>$T$]8G.%8"=i0VNt_@t;,V4rVah%a)"YZG'O=.M"a)pS4o@D+3<@Ve$pCS*l-qG0
%TBg2$1'2_jWl>L8&pF?jPhZJ:NYHJL$io&B*/A%&7R)E:Ln;pN9TA38<1$E7T6*dZ,;q<$ooZW17)ch>mUG;<;^)\ghko<6n/QB1
%TYW*D)&U^CSS@*LH=/!bD2?2NJ8?*:6ZA['09-e2:r<e0Mr_lM"k=$<L-([_B%AapPQUanWc\G*99h79'J5@G)295PY)UXe&r*ik
%Q(EZ#.ZL)j4Y/JdNko?]cp+HhO8B8i%5fu3TN33-:uNWk1XJi7PX\p=j*d.t*Bf5*;8L:cW3/@q-7@[OFeq/$WX9^S1]fKc?ft22
%8SN-d"-0;Fp`\/HN&*gi^s*X-IK4Ip/o2]I_/g71jdoWWELS/)-r)K!WM/6:BIFaqJ/gq@$i#`%cHs)33891B>/"#CNcpD$.RGFm
%Toe(1-7qTk\^s&l6X"B#c6;irC1TkB#omij-1;]lo@dMAjVAJnT'uf[WUtum&;LL6<B&D0CATb?_7H\!HmugKR,Qs(jI"mkAinLA
%Hp+*;X(q\[L_7.mSE8fb>[.oi/h+B$PmPG3\o7`VdSfe)X1dkK)Hp^_b%S\h'V&M$\=;1$SEHXAlmSgqlh!00Wltbtbc*d'npGQ\
%_=fuAJ=:oeF_oqATuu9ql3)fW6[.d7#m*O:J>?ajODrj#5XU'qCD,(#[EbQ-P\cgd;)X)6*NI!-@m))cl6D-%n=G\UMWQYrSmXoQ
%<K3M"4?8Q&U:7^_`_':<2*m']!E=t@iY*PE;qo^F2Rb4Ec#(O&!9,t)O!Bj^fRdqCAj/';KP[?XJYCdR:na<d%#-[XjEGt!e_ZU6
%[2HD5;\0WoV(UgRnhLY;ejFU&S+ga<._'M1=q#F<1MiF.hAlX!O/-I)^nah$V,0H5Tb9:JHIW`4'3%T+^/-C;1fSF&J3]-(2U4QL
%0pT\"28h7D?+Kt<XXg?JC03)\9e'@3"Egfl5f7eW!;4m!!p]':,.,BO;A[3%oSZ>jqmp0IRlXW.SmUT`+^VSsRsP[eC7,Fi\pSc2
%(W3$Q$"%iR!c#>`E)D3CFM](qgX*!ViTMXE#JiC2YT<+9S##]lX)iI-f=K]/r'7;S<sDJ_:p^:HASjV_Ca)6W93[D+P&2B,)9g:u
%/HKlkOdAe"Tg2LHff)&?or+c&,Ck>2!n;3IPk;KV3=lWm`RQf1VlO/E,MRdmBBV;V(E>!&g>Mb!OGOs<%ZENgC,T]3Uf'c,P>DK<
%"=<*%#-),_K?+)n@jI<sqkK#o\PD=^!+d\S#Lm8c!,?2]7#AkPoiRdq=X`O6aNRW.'EHfM(D=7oVK:RcTlgOHHoHQo[eUeuMjkkh
%a(Bi+8Id3!fo^+b1/*+@-3jdsGSsgq/%CH>R-C=tKtA2%r<&HG`!'sR<(Li3=Z&S,j6L]fANHOP$%Z:ONM'n!j`HM\kU$_qdr$_0
%#5b9JL-1@O_q12Hg-YcWC>%PSRKigM[-rQH.-YIcj:^=>iGpnfaQ=!B(n:dd[%4Oo+?@K-[fEEc2d@k?,OZPZ'0oj>c97hd%O'1Y
%jFf-5C5k,Y(Xqdq:-fWg4mdt"8C3\m&h[Qs\.4Pe.j5k,*"P<"a6qu2MGctd&j<rMlJeBk5SP=(hAr'o1Y8hSi))k.QO)fSo)t.a
%PoptAQ_8`DRsSH18K/;j&'R0N>?cM(?]J2a=7i2fi;o17(B@HDK<qOj3aq(0.A[3gab"jCo>-GMY+`I951ihS4+LXF*(#9Jd#`4=
%BWTmTRmgHFTeL@dMOac*%4cC1%*^.8ckb?(89KN7'"c9$`b9P(iUbeZ0Li,O@5qM/@r,DU!/SS?<Zk=J:'OZDF)]1E&)7Otb`M[8
%dghbp7bHg9q\]*A\3Yoe)(9FO'2APh)R+6P[FXNA7;O.+\)P+a2XfCd#$FK`E;PYfk^X_M&ld'/-e\_DD36I4)'"`+pE0KOEF]?R
%:@E2!QE*s>G_;G>5_e^F0e<PlN]mg3L'a(YeJe_n<F.1naon:aTOE2.#WdCucm;2>2L*CRXam;`T,%43"$k1VquGr]mM-.Q!ga'l
%rn.rOp)>FlJ6WR!$"Dp.Qhi;A[#I6Qm6hOc\[oudNYBcKLi*6[U)`--QNJP'L'EABS$2tMLbOPC)]RU53WoVN0.XBVcia?u24:Ta
%CV/P-Y1mZ(kQe'PCMEo$>YO_3&D0/ihooFHWp'gQGdtft$Y7spG_HR9S=i1Q:g7W3$4Z?94%K]cpJIZfbDqqt\aoVoV)eScGTV2V
%jdOi%8AK(k\iUP<0dp+RNsq;HK)b-siSCN\[1fLNf1-E[F#dFD>a7uNa<tiT-&C\mAdUeU3kg9rcAmG8+D6?3:"#c=@XL[giW1;E
%Tg9H!IkK@_5deABh=rH_l_k/CL:XgqLRM+^1tlg^9B2>FlN^7#E8CjsX_#!S7-.S@`XBtpfF,"/i,O>A%`s]/MXaDcXCgB-3M*G/
%#<g6=G<SD@c-s0JCbc(Ub]HimLg%/)[%07\5%kd4Bkek+SdX6\\ZF!J"EfrITe>O(\."#p(.>>apJ8Xr"nut!c>rP*6O.%EH%k5B
%[>dGh!brVLBuAN&THR&YO-OYM3?cmKnIE]]>'%UO<-8eKD+N10ER]qZ.`7#04=fo-*EVng0i[odlC,OE_t4Ai'MNB.DEnH/LCFD%
%I%Qq:\>MDH#\m#+`u7,uRRGFXW0^%3-VO(K3'e>9&P@9J'e1d9W2]+*kY\V8.qMPC%_PFN4Y1IN%93(':hd.#7m(Tk:?W#[XS`s9
%qQ0ek<"H!_^+@b;qj&><Ugs^%W-:BYaEN5*AeYg04K4Z6=91jFW#)ZklI[TTMVI!Jd`Hka=&hG+V1^]3N_u2J9?$l2<(dfQ8lC$I
%oh?1/i]Sp2r!mIr*/jf*<.!.U.1"^C5"g>>$Qpee3@4>D(\SQm;"liWgJkRf!ZH*eJ.M(KSJnYOr"s1K;@6C3C(l/F+Db,gc'"su
%<%k_lGN!M3M>VMg3[t".g:97=r#&Z[8c=1oE=jD=QeK#\T&1K[6X-+C#EZTI*A(LZ.0R^M3JudS(Ul*QkUt4r21FRV8Ngj&ntEXl
%orP9Y[L%W8QG.qNW8RFg5i;/8TVl%:$a(&00NH#[JoL03+I9nW^;X89nDc+7L5g@m,;9>>RgsZW?0tPe65Fs&L5,9TH9b3NmlQ,]
%+pU(]F<hltUddgTqVOY3r]LF-D5%aATgEHb6[QI^_@/Sbhk.cELKuA'*o.gIfLShC"dM2NVbUL86RiQhs'GF6W#C8aqrUW/O2n5-
%`O]`266:cCAhL\HGR"BR?`o+JW!X-E`X,K!PlXhhU`c7Il=PE:]0Td*#DjP,W!Vdhr@:d_VW(I[V$QI^$-Uob#8Z(C#lkoA1&(/3
%MLo`o7fjPNf679tau$sS!iiAg4ZYNh0fmmn/3iWmV5:OEhPT4b^9lr2+GT/0%Lnc-UO`oJn68oI-:#H0VB3Y[lrp+igN.N*"E>S(
%87_4tfjq%^Gb:Wa\<QQ@9U`!c1`!QkU\Q"r(&!AfrCRNJ)]3H5e.n5'Cf<W*7u(o.=,.<VTt9mTTE.^s73=+AbmSDQ(oWup>]+)q
%oS&%6K*]kI2<uF^:jSY\D>Ju!DB$-P2P%SUXjNc<Mi5)gV,\tIZ`*#+2"i/E`-j"u*^j@"gfTY)$@NH%+<FK&AnYgY2To._h>/M)
%)7m!FR@*ZO)pRl#*Se/<#]"+P:^L-DW<Us44d:Y*"gs^jnNnX@_`3u0ODRj=*%\UV\o6(cqGtXJNmK\.&F+"Z!7V:JNcLm3l3*6?
%mHaZPh\0Q3a[-\SoV"kti=-@sTdI6p1=4SjPqReo)X-Fc&+2h?Yq>;TmFr\N@MIko90F7!#urNTDrm(s/LfYY3siuCWr1KT)@%f'
%YK>B7?2?%$7NCG=ARGhSMKTg?)&uf[C?R8n]`1ZZJWM<;FTKF'7O=n4%+0-2(g:lq&VNH]#c+,j/is@nZkm9*K"+YHm:DhaF$-#7
%7Mi:(=lZ(^Ck4jn/uW;aGULJg/qqZCY+PG0E$Sd#0srm$6";D8NNP/PJOVqX./U+$k(_Vc^f**$nE[h'`)c'>=7`NODN^irK,3<W
%(YimElFbYL6[+Y9fJ6Qp;;`4a&%-5%.7T\j)aL7"DHQD]fWdo\R,T-rqf"dXb,G1o-GNkbWGu:[k_Pq8k%-eP%W_XC[/^#k6ifZ#
%aK>`(A6a!%d?\3]p'=o;CB&8bC':fd=&;ijR]i:]"K#f:^n>M#[Wb^YLA9\)$U>3:<sg'fduOW^OBbGT96d*CaJ76k36+=^Xef8`
%I@pq8!#3"7"a;O]?cQrXB:KO5RP0bL%(^7oWD>!^*G#`2Us8Ae$LFf2M\=NnLA:f$Had>)ZK"RG?%DplGqhQA3iP"*F%T5;Wf:mU
%@G!0$<]q>^A3h\)ZRD&q1AL=O^+j*"^!A]#X,>,q8@?A@1-*Y6lS>Xu,=[UtDXXW<hI@A*AIJ+t(oqInmudK:pR^7K7ICIVDh<)/
%]J@H]dL6FuqP;$I=ttCT1G^rF&k=7`(0@(:*@<!nr[28eV&h][R"UPdF'IlqmGS3h)_5(gGf'I!"G*:.if6rrAF`\EQ0Xqe5sE:M
%UM0upHeGmW$s"G%AqId4Yo(VS`&S>hLUSLQL,E>2e?b<PfS7buHO`X*.6)T3P^'FrM8t'5`<l2=)Slo5L:2ccO>J!PMtgm;hD^hB
%(cZL^9?dF,m25@g:11?JJgN&X66l)?-oF#n^12M88_<>J]jg!>#o(me2:eBRq&b6"?Io2Sg.(g".d$[&Cogb(`6ni=AS2<]lnP/J
%i`VR>O&pV:k>Eb)doX_Z"/S"`N?e4!B#4:Zf-BYDEIkRL!7u56$^LXS?!Zr^P^0>&(tpl@,#CorQ=Q#Y*X4:0A'\C2[Mip\n"s1p
%[9$F_h7]GUp"!T/e#?)3>i!TVGnt[G.W19S9\t9DgfN\EULWORSo<J@kLX#ucY,;@,?:tgKE5?gMC3[C`Xea)5X7pM@p'9a;cXPd
%a<d0Lo&6'#7=qCW*2OFMMf"F*]&64A.1tU6c@*UCCAb_c(AmU*SR]BtrbT.Ka5H7C')=6EdBX"'KM0:En.f`h&_74oh_B=El4,Bq
%4f-/5VqB0^IHEA4h7#84At[o'G26SoAXNb*-%$O`ZVi&C<bOb@aEJV$@R4dV2%GCI?uJNO'I^9.JW>,W(epo>_hFOf\:_f,h?hJ4
%f66HuTOgX!.T!CB3CBZ?H?$p8%Hs=J?Hb[`50(kaJtGM*Nl0*k2t073m5^DSpk;,pBkk0)2Sso8AIHC$p_(J[^qeh0e637D>Z6NQ
%.cifSADo_01pg_l&=_%h0a0&FS&j,SOZbGSWlaJX"DsoL-r2l9X_IKP*co;S"6UCqp&^E@g`p_BkRC7K;)KV%/[lp;#qPOgMsSiO
%A\V[m0K6G+Q?c2T-!f5(8]l6HK.]T3Y:KU8,aKHLT]+V-IZ#p)f^^"f&a$a:k+GAbM?,3(+eDLrVU0Fp*oD+!i:AF'C;U+&<kmL5
%NNcgB-J&?gnGp-l^A(p=>l?[+#bZ8;M%eEZAEV"rFmO2$=HV&*ZL.AT3uka!Jj[]F8#+=C_cj@+=E3$9lH[5#p8JbAmaQBY)cf8X
%c#J2N5113=aMeO`K#VN^n:m5DDK/&pk)?.Fb].?)bq:e2l/`t[ZX'@&n,e3\]FChAof-=BFetKXl0qg^-itlS.Oq<J6rJDDo#M?T
%O?@Shf]q&\HI\[8oTC]=@\$c?h*&TlOrp-np$reEYA-Y[bCsP,hU4!.=M3BU-eG0l(+&9HcNpU2cBVjQfEoB,'(C59T=1fj:sRoV
%m#I9LD;Gp5i^o-k2t-Yl*Sk3#/eMVoSB^G[W$;%e6O^9QH4'(.[77Wb1X/(/s/:odPX7k\17aS(#66ZTM)iUa^n^-b(@&+l!/IjV
%F?6Y9EY=Ul7gJ9oLQ1aLen'bOgnHm'QL"Y.>RbdG,j8!Ha@[&&_*P4Kg]?`R?%XakP]]CZpqF+K,=O\c)ZWlB*='=/Ch.?m[^ihj
%]rm?tc++"[)?c_0c2I@F<njC2OCP@c)62jiK?\D;'O%UW#i\bKRr7)"':5H6CXkR+aVu<@h'-Z?Ws!@fb3T6\N['^R_g9jf,?JVS
%Yts9SVfh:K"<),>Xg$J;l2`79k.8/fAt74&UZ^CCPYB$Inoe)hj_UiC0+!N<(=g#T;I7HA7h)q_-8\fun2](j(($BUGmhkAA.qL!
%nkEdD18Y3qRR/hCrhL]s^O=X`C@Z`O2JCVL\eTTO\`ZV9,<urB]do:T[j%b68FG2FhR%aY]$U_='PMe82b5[FLd`TA<c`rNZ*ZZM
%fj"10rMhkei8NcR'b$)q*"5Y?c*'L'-?JqPXGRCJ^s^7\nE/*3`g^j7"sr$RrN.r3fU@8CC>,ouQ8Q$BUd-"fN0In$8eJ2_ZjM/@
%J_,,$&@<J*cm&c7"Hi;Y:%a%F306^_s.&8D#T1+N5Zs>)-Ac7l5`:u-3F\6WQ,Ip?AYUoImPadaUMl-H,.Zao9=2*_=+I._;D!`!
%,q/n_3eYr9P0+APQY1Mb%Xa5K)k+fEpDn0:hnD48_a7Vh3iYbki'QV:6jehb`Bbl&/O;;nOV&sK3-<"p:fgtMkZ&uoO;:`t;1JI[
%CU7<=rOe!\Gf35Je-U/%`;`H$nP0ZJr&!W0-i1AhOO[jA][R4Y75XNWX0#[fY53YK)BMi6Vje`MgpusHUT7XpYog8A%ZYJUM:"?!
%aJ?>$OJ>8=PTFujW!1V.?4X5OG0q-s3!M[(=6=8*oa_QPDN@945eBJIN59`LQ6:rKQaVPi/LBA7@BmHi<#Gkid&h"4=>Y6:6`bcC
%j%/#>8`\.08)Jm(j_K[JfV?P%W?,A,h[6CQ1'Q>f+WU]?G`91PooX08-a\0%+Z[nW:qpb$gQ2fZ&uu-&&_EP&NpL,BfB?sq/^QD^
%LXutJM;]Ko(8?0Ur3q=*6$[HY7=jY_<(\dHIsZ'SfC5.7KK5BqQe,o26c*oO8o*c2,dHe#d#::WpF&$bjnXV/o*c0&=]0;seeuDu
%B5$VkHLp;oIN,=n!JVcrSmZ!`U!c3Z]m0_+[e&Fi5mcu54k+nUIfK>TUuhj>G)pLU4f9/hLVcAmj03s(UPXj'!;c*#$X`kfSBGPA
%K?Wg)RS\*8^`Q`/BVOOM6[mR)+)ZI`ji`L9>8L,76JXt,,dW,\F!GEaWWor/''MGU/jTXj\4!4F*-mTAXh+X5S<mC/PVrV.qUe[)
%B5#HZ)PGn.O<[,?8e*WEH.lA,4GVQV5f7-Mk9*pH64UIE3`tPlptKFW^uNtJ:O_._0bUZI8XTpU&3`SDlWb@l\d"0?23;09Z1$M$
%V-d_U*d'C^WXuJ8;BY.lGf\1E!_V\qYq*3^O+%aPbZ9&K+lA=iWS)eBlS8h<iD6Pa@m1terM6i\O)*\Xi\D\-Lrpm:CFO_hA@F9A
%UHof&P=2GgK?5#L.pX*I9L<I,J^u02+\/mP&ma`uaDH/rQF^->Sf09/9d7@k`*Xq7YS93GU!f6,Ks-_Y<bA<S0/dbd"/TP]/e3SN
%(pXb\U.aUVKr:(84mg+l^ZWSFhZd1[k,cu;+Mbnq.l_/C9fHiZV\+>Z0V)OCH!Nq$'U)YX$sSegY^2Zl$#F+/00Q+^k;b)tc?>nJ
%4dipZ(KtN1K"7Oq9<OgYfQE?,9s4\'DDpo'>1^0:2C0En1+fjcA4*L7SNVuP37kaW9=qf*_ldi"kcgf$;bYuKlsF?UZ+3BiMmhLf
%PpD3PgkT`KHq\5JqnpOh%ag>'V6c"]]QG2YM-<@Z\N&A63eT$8?_\-@J<&oq`@t<bU)<)SYV:Da/h><jAl@Ii.HmiV/gg\/I0A.?
%G(R%lC(gmqM=jQQ5a%d6GX0Wu+i]'El*1ud@c,\3;J['"n!`6];r._m1gH<>ORdNRl7j<!]H5\?kpg6i2"d>-S#(LoNgi57cbn)o
%?9SK$XeLnse%AFLe*:n6EGN:+\4"dPoGZ\(jL3I24[<MPQ*C,oXhsJ1'A0dE@CqMFAHhSrH1#a%%A_6.>E(LMG0W#2*jj8JD3%h!
%pUrgXLl(&q(!=,8F,q?rM0Of9j76T4^(ok_jB&clc5XIQU!4J?IZm^3*1O:RTP0,kann(k>a7t:ISDp&!7Rf*%$"W)FG0/27_;\U
%_XD2FW4M.$9U(4EVA*qZ8YAYT5=BIW[A8NaZM!V&]L,V6"4,A<Rn_/-?";R@p>KFImh(NlcUtI/jN(fER(;'^`qK@&W^kN1WlZ2[
%&r4g><Qe0?O-lk6JVRc4UfkcdScP6HW"c$IELf0Jh3*75A`:T26=dk/qP/<9Wmk%\d$;(Dj_0u:[AOa<:PhJj[TL!Q>eQZ"f)-,k
%'1oaCCp]<;+>7G50mi),ZBc?o,'[?feed_dVgtM^d4RG7DYHTY2VBn3aiXhZ[8M!'Z+EPf"fUEk^BKjV\+Laj8o'&LD\:Mf4S[9"
%A\scQC)omaMrt8TP,t.(R++h9P*e`qP#i$eQ/Imb^+tJkSp'VueVET:=i6)n3JkOa<5pnPlo*4QYL#h!8NB^.0C)$tN&f7n'HRi7
%WsFk0F=>Xq"dV:P-T:7O!9'NHWWEs@VC;O6^e"#/BJWf-M"$M$%3I)(KBOe@;6N]o#K9K;XnjJPSh&5gXV;)QrObOK_[[m=VdgOu
%mSH-m1;ASi3nmuc_DHSpSpT[$.sH?>^qC[I'lkUG"U`j?TlQ'i%XDQj"78SbW)a8c&WW2[L"<aHDJnS'CP>SuC'U/a766BnfQj<p
%0=b!nSb`P[;JegC9t0V9lnk8e:'6Xn0[1NdS5;0d_%=j%l,cHVOsF?c)\d&AM&0E3V+/hV>PL$iiP;-BBG[B#7>("Oc&9i[HECIq
%M!3P)lDtd6$hp/qMr]mP=UEP157de%,4`o`#eaV)dj6I.TjTrTBJ<^;gF@<hLm$bCdea;T0cl1Hk'5&o<"_HSocdO6>.W_[VOVDW
%;;cUgqEJ#Y4sP47BXZ'IMRpNOfGJrtB'\[Ee+8B/4K)e.KO3.AN*jn0LcDCo+;\oRe>B\Klr3to;W%,dCuVVFS[1ls%V5dYi&a^<
%1%qp5l9`I@#W+2qaQeIHlD('j5c'ZHV_mt2c;,J&DqEhM?(SN]NM^gRnIqjd2*oEuhJ$"T^&@jQN4io94n<pK_]1/3R-%.64"QR$
%>-9%Oelm-gK^ea.i3XFdp=`T(fI!BXd)oL]5q)QfF+%AHp&M#-JI-ina,CDF`/cu`\3nlF?!jQ1gtN./Wc@-V[C0Q#D'M0=W;>84
%_HP6i:ee3=!H+jUB\PF+Xl?p+;_OSQO%0nur'`S)6LIdXnKTs/>1,jVe`g%Hi_2NfoG_X(V,@T(<^(X`AlK*?c.+&/6*sR,m]W`M
%iqT`hV=u:-`:1#uBK\[I=m>C+2XgGUQ!iEiN>tZ4a?,(I;'sR<bG[iVC)%!h#?GMki]tJ&&M!U>%hIE/&&&X08nhcM@ZFo5g-NAj
%kH1us;.dc#II(Wm(I;_Zko["aN-TcpS`E&eQn%`A1$B4Ue2Y'1kM2mj6=I[]mefON`@R#*/lgh,@,@SR$3H8jT4bn5]sDLKMC-iV
%68,[`UeIOh^E5t+9C!`Se[S(jGOhsD^5%\%<7]*eo=ena(o`c&5S%/eM1F0t=(pF/?Ts=hW=$/7l)M%PpSF?c6jd=,3GL8AW6^TK
%NZR7pTERcYTpHTE=2X85<UqV]n_34`<Sl=mB;@5%BfTX]bgrr`LEq"@<P8ZnPYeESl\JZHr!@".84-\*OjNcb<Q^*)a:SA8/\u0m
%.>ZuK?]Es=fq0?C>V!9@G/EBVhG)`3F^6;4oY(#i(*m:S,W]Uubu?@YL2"/sWl1]scPfK.WJW@H3q7fJ$[jF"+6l.QS\9ZrjbOB2
%QJMh<DhM[dpA#eKQPWC&GM?S,D2t"4Mu@!C&4[8+5uhL(eCq8LeN%R:+1B32VN<HHR!3+p??h`!9?_BE76_V0QRO?'[1^7F25/4"
%UbSN#8(nhi3E5Ujk%-!DE66!E`V5q.G(45ZKf#CW<b#/tC=@e]X<(U)'KoPK12%Z/fH7dG8atYc;_"8nL't;KCf_@V4@7r;jNrHV
%eSQ2^9b-X5Os!3MqX$9-A(P]@Z5RE6\YZKuq864jWcT*r119Im(7J:jn@?TMT(UY\#2#pO%9/H&Tck/O"l%=D)4T'IQS*3:m/nAO
%TU',EG,7\6&R3\A4j^m^io+44-IB\T/gY1p?Z/I@o1BZ8h)6>>LRcL7#spFaM8^W(+1^tA84lmsJ(PmQQ<M:Rf-nE=&Rukj\=E0Z
%p9)^oh1NC12CHuNf_T,+g8EdC[,`b1[bCLb=cf@s<Ip<8.5^Cf.'n!umW!d)?meXtl8CcB2>-=iS@0Am)DEr:a=f%99&%TX`Z43t
%\`IM]Y,GH!&J[R%s,c@Cck&c6"A[VVZ3"J@,Kh:O(=EP$YK0Tabsq<Ur-R6n]*g/_UN>26@r'd<F`'$N4K7+)EERtV_X/<8)5l<S
%0K)>,Lm+6c6CLNUfaT=+&aEn;0o1>i,d6rhs&Mb_7X*Mp:n&>3@0@,6)(M>4ND@f:C#.kUkV97th;JgMX2;[-BO<RB'#pru3T`eT
%Y,1+iZ*Q=o]^i`^+%[TS;79kiD\.]_UU7C,LS)!R*n7.;gK8"Nl"THBl$s&*Jm;Z8ALqr]Od+^Rld]rT^m?XL"OV+/U0(_95[>dD
%BaR"`4eOF\_R5_0_u6uW*tPo#mW!(n2tpHtAI_CcH24/f&R\?qS"/7BSK4a*J^&Z&-nc_U51d"U9p88ikB;PA4CtZ2&bT!b"Bo?X
%Ec"3[5E1]bl6Fc4rJ-/F^Lp/)ja<Q),??>MFEL[_W0_"dbZE,*K^*aA$>5;jL7foY>m;rR*(fh'9[1=W>ACL;\NWC(eet7N`(I:e
%k$<]WFJc^u[)'!H<+5`KAKG9,k9r`rb!j_jdWSDQP5Ok,PWSffjN<<pCA-'sQqZrj[Si&unm7MeMWL[?,qG6aD_sns$4;gHUKS_,
%noRIQ.;o:9W3l09[AOVB%RE/;I/<%AC%i7$EGYi%L+#h1Otn9/(,e5%JBLA=O;*n7a5uoS%RY:==Ho5:#f@^J.`YMJ[]Sm$l?<:M
%ob-J8d3*e/;.6Y`9tLZULGL*cU(Fb.%k?J%FsQ](2oU'6*2+R>16Y.J&fjkT&Y*l@m*!A$6@EYudQIX?'jdT6mO'iPia8#k7*-Yr
%LL,L/N!Bhk/jP%Bl,m>C7n7H`T&">dQnH-T]22!3[3)R]<jPADE(Y]0gqK>#^^eHl0)J%NagO'H?FB5CU?&AP36@L*[@'X2]eQ;&
%/g*Kcc4Xe'2%&_(ARde6!m,a$AmMB'd?<ueOBcQS#-o=@0Erg]Ao+gN.V>s*%2?pg;<nLE0bmDT>L/&qZL4^_Lj2BKni;/($0+W5
%#<bm(D37j)3j#DG\ptIQM0^1"""[CY]FLU8GpMF"$"j#!G2"6E$>4,RCAm+PJVIfh,`^,,iS:@!6T]%"rlT@K!kg?U<*R[VY8Z==
%C0UVI^oWj+JS:8t=*@i3"hBZ'mYF#%W+lM4dOc.78Rq5!2+5.m^U7F.Zc;^gc+/7A?&CB&:1tAU6?#q%TMjb`WT"re+1BT=O".Xu
%D6_:tq<]SW<?HPL9nVJ(;H-3Bb$RP+NdrND-6\;8_VcnZQW?R[EZ7Jhdptc1g?);i$4LJZ>:Q_tj&4"@9l!=sN921p=<ubp&M6GD
%9X8Os>bgjX^:d3_YF+>!jt3,[b]&aEs40YdeK-Hjee&Xe3\qsH=i@r;2A#/dN3t4q-%VQ_Na_*QEY[oMCNksDPO+BBJN0_Vq.,TI
%lVY]D>$'EcMmJkpipC)gSH)r/TcN+ZS)NHEA]Y&bd#uE[TX1JSDOkh%nqcns5sRtg+++%89gM,^W1$H0+h*\/Zgi=imBMH,;Pue-
%=Id&,RZA@>Rhj*icbXCJPQKVqWk+J@F:KQ0+ToimKs)nI:K!n*k5tE\a&Qni3g(p4X.,"'P/OZQX[7aC+[9+lQZL8tQnEcC;?s:A
%1tEsHTmBn9@JKp%@'oe.X>4P,Y,uHd\7]Ss!2JY5[MKU-Y"$!<cPd\bY?Q:5ke*s?')sM`mSZq-HUU89o;8/7I"[aVeR"BZ$BYi;
%[,.snQ5lcX"Aon\YHAt'-s\PQ3fAueW#@%j"I::fJ(q90&co2lH0Cd#g3iGS76k=s]_!7'R_4b)-FO(]>)LY0WmV*PEI-6Vj'SU\
%lO'h1UZ70i=Kbm\7^R7KZqJM=O)i6CH!CC<A%bj_C)HUP,]\CHGkN6t&"!ujo8'$9),<m/d<^hFVS3d^X,GE*SD1U&N!o#V2F1t$
%`^gJ^(n;:.$)O]t2.[pb'g-<.^RSaRmu`&.R`b#%?@;Gf@MIF"qrF>8$OJYL0OdZ/k7$H3LAcM,]pPDTdTch/jV)(l%54T?D:o4?
%k?1?R*E7'ekV;;(*FnNVk_ANIG>k:P>.;F*\j^,s463FJ>':Gr)HO?^5uZM7hU\Ft'\[_PS_@D5b?IZ:')#M3TgYKiTOt/0f(ePX
%h.)MfTrT>om<T?l-tNIT@:E*l_h"-iNs4gfjV"8a'HrVn16O3'!Ld#pa<d!Zm/hF?S<Mtc3K3a'p4pNLH<kY6P3]ju'i!!nm:JVU
%kZ"D#]+TAEAsma?Zchmt(l_Ff7;U0hkiNt+XYM.fdl(W@2:?=l3\C8s-?>Wq<n+hIEKB.i(=X/Pma82;UL=QW>4Z6sV1atP>QYH[
%W(UnmClT`qLnHc0nJ(QIWp[@G'=_Mm^sM*&XW(=M@K>DOf+jD.[,64qMgtrocD%5t?F)Z3;0uR3E7m@*-*O!sDEk><a"BFcAej8h
%%Z/8AQ)GjGUpQV$$TPn9Ucj/MLUq+d/cTM.BClse&G72hmGq)WMCE^KbNZQUW!l$s6Nt^Pa!/lH(PcN0Xug60X9hV_)CsW`+%nim
%NK-+Z\jfrJa]W[bda+@H&G9iKFB<uol%q9,7[.1-osUBCD@OX!W3dC+4D:N$=7)p,b\?9JR)U^WJm^p_GG]\I;G!$s4mTLP8Rc#a
%0%`JggD+*cN_7DUAcF`(i>PPq!!?el4m_Ua&[bY=BZ+taP%/2B$[IDg*[Njj_u_0PGU0VhN(+gs1?I*D%ju!I-!ZGCk:VAa5i'DK
%BasuFmiSuC1b";"VFr/%g;B8Aa9:CS>^MH<3hdM`LuB^%d?&R0$ct)gYY)=J#469Z25D!XNG)/C]66pZhl).(fHc#/4kaT=#cJFP
%4*S#RWbLLUf.?V>8M</qUq1\:4VL^DD:kR)\OW%4nZEV=;n-2D`ZBE"C.C3/=<emic2La%^g.&):%ek)pXfZ4(g8Q.\U:UeFP+Ef
%8^;>:Y*W/e!]cPK?0uKrpJ?YHZk92;'>)g:j[s.?Yh/hm]T=0JkEaoh<L9n*2e]]2p`ad[nL'6W6j5bQbL,a3I&PAOW(JJ1^44d'
%H\epZjB//AN3g"S1Zh0Y0"!*iU)6$.GtXg]pS+S4%8aLJYF0k6hEO_3CRUm8Ngmrgh1KFC$XKcAAi(cS&9(_j`%mO&KC:6Z;j:an
%a7[n$p#\Q:K4/liq/Q_c>rV=SF6kX$67^5[IfF,Sfe^!Od0XA'pXlc]2US.rDCct`TOW\lWus$_mj3p%Blb[QfRA,r<90^#;'Jk`
%HpXTaP0dOqIVfJS*LoH3]]<d%cO5_Qd!B<:-C2u8e\)NF"):#pa<T$FVL84PHX\SI<G(bi'C@N/gLNgDV02CWBQE5EBLm`h5^11$
%Wj[X(Q#!;@aL79*;?k$@$6%M/fQQe-:hb6q.X9dS+)WS%U0TPj#>+;%h*l.`G:K:?.4GJUe3I0%6uhej\[Uj02cO+b=N]&E/-agh
%]e>^oIJ\qGg4M%NWlhWWW[^IBWbp3+Vt+>8DQk\C0KD_t\(a`V/Tq,nraUGo+P[2YbC8%c5Cf0p"h)tI%M^UWer.mX3nTamk=1M#
%Kr!.4Ym67+e5l"+>C=iB`UD99]^;=T>_tA,(WglV1@jbNq!bu)O\]flUihik0.$"R&]p-8LI_Od5G>dK'Z_%F1Nh;0RhQ7>\-qOa
%gLl$fTt(HH`RCTIRe3ZqF-tpTbYl%]XdYeNa4Qg6Dl$i?``7K``Tt+?daR*nW3D./odn:+m@2M`jCiDQn:K'L"FL9GrMh:DiXWHC
%E(g55rC8GAe'7gAO7t%AHc13*r1A:k#TiT)cV]VK*LC!q`GL*D,gaBp`%uo?m=T2!Bf43)5=Y!i`2ciDPbVa_EMI>E'l)*(hdoi?
%BC/S$0m(JRWmGD+gjAA7d8WrNi_X0XGSeDHLi=_f\00KeO#ii`CS_rf\OO>l,@/m,E=/</m[\d8=[[tdM%6(hTd^]9.[%U.I4CeD
%`uq=<s'?us8D#pGdLjfbpT9&ULXMM=8m`Q0h`2H7EIkj'QuBLtKG)Vh\6R_<+fL$:]LR>rX"-JB^pXWDe?#Ak_l.+RoIrh3a>m0<
%9!-3f8;+r4f<_*d?olnVh@gt@')c_ujf<U;0rkFT%32]U+;u>:@]W_tE.an_<9$%TdlXHP-&D2RUr&8'PORc$g!]mb[r%^rAY?TQ
%%28PKk7'N9<h4uT<\n&qh4I5`2"aTkr$#3MPngZUT+RXq-18Rs.?oID;3&oaRbu5W>l$Ga9OJ?R'"FS[Sl#$YID0>a9N"<t5Y3fl
%L'7B:[M1+[)bE&D<K:MD8Mpa,Of?]/(#OKV?Q5F''hTQiYQ3#2S<&I%7)o:aU43Y)C':%,JjOc=Y?P<3>,\Or3en5B]%Ne)2OB%O
%HDn=iFfDU)3eA/i8`D4^JR%riA-jqJ$o<PFj1E9[C[A/Cp#!<6L)^1&&^J993(]%F->=;J,8u1K/J4`&2,%?-cHC?97Y'qI-$3R^
%aA_,@c(X^1]=Z.Phs`;89ojj6l0@CD:k!VZ?ocjrC6gHdqp8ft%9/t4),*Q]`3iLEpa6cFUZl4V.\LHoJF)g!.]H7iE5PIK"*=uf
%giP$qH61dJ_"odNnNp^u^Khn]bfMDn8u)"sp4Q7R=o1;BEajX4MKm<H!I[KKTSQXsZE."YNf#N2.V^H.P3-(Y1:=.-CME`%pL4i/
%a;^nGqp&'i+ha6iV71jX("*^eVR_JdEjHH^D?i])Bc6`WoQ,1FAPNh:;[DY.cKE%XX[J.Lq0bLW[h\6%P^AJM=jUK7[Jf;K7iC$k
%`M/-QT[_o"e,ms;m29'58dt9r_2Lk&M%VLbEALk]-NJ'7m6K@2IHnN>ci<80rl`(Pp:J*<qYbVFs8&3<^]!QK?\/1BN<FdX7Ir1(
%rpoNlqtB>oro**S^\Ge*]RTsNO8o11hgNVcJ+<0'\b**$YLraX-'ft7F1*;$De/Si;V4J5S2a:SkG2LP>Fp51N57'DMZQ_QC=pX<
%!'1g=Wf$W2MG3MlE62&`SPk6B'rB]=8l;/o6o<Q%;W2884#fAi>oUuaBXV\MOSJ"(A;M;FT=Y6Wparh;%0eGBP/\D4N#[WqI-seb
%W#.HXftFi!Z_XV=9S](P>aA[-\u&d=7d5ncp34=.j8@/9Fj0ILA!"SC?<X)fQqQ6h/i9;28ZOk3+Q+_@pDgDXl3-,lS:]DsR,^i)
%%h5ca[hCb,\'AL)4$Z6aVR7Nea\4a4.1$R]D,h6okm_$X:7EA!72rNrK%MsX$o"ha/_5budqtL(`.._h"O;p"P9j/$ptBfNa$<uO
%X'=AF#i3%'T1]MH]5c"cP/mC0;n>aU-)hNh)W'Jq"[%R#iTfD5JlQW-!>gRpqs$@NdJt+j'&)T>\Hmr)O40]!TM<*eKXdu"a?f"s
%pR]]/XTdUhWlDAOJZW>5i)CS*eRS<Z#T:=6#`Eqp8VUb4%`,e%hZfNn/qj*S![T=HPH%"l34J)?L=)X7\W\tEH_^nBWarM)`g[Ik
%+p+XAk^N9D;@77Q(aG9o<O_2m'a%IX>4Ea@@GdoiAB4,pK]HRaDE!mH]'h6M]0=.G5u72Y9g*Bnn?Ocu=2W-aS51;-hSI.uE-@<@
%<eglXPK*foSto>U)A?t-J:Hl$*AWi)BaIA]HRPLtU?Hm8/3&U;DM4a?n-Mm'*5$?V("M'Y)9<uH?`Ri@4+uMo?"1YAkFSiYW_Nm5
%020n`0<EP3/Wedq+e<[@B%PIZl`j9ORsbbP%KW/Q.dO!3d*nFIY-l(l82['oO<`5XTX#830[tI#FhqSrpbfDi/5H],8P!CpMf%bM
%%P-rT,=m)oA3?Y-2m%m@nA<m8]39ak(SON72H">MMk7.`d(Ki-lipRhk=mql*ruo<1`8IgN`kpTq+=Z-W)"rg?0R\'7NOnJ/$(9r
%!-RjqF58cd,EY'AC;f<Ba0GlR2lHVU3FY.jZ0?V!JJ4$\9%gd;\VHuki+cgSGEXjX=F,BP3I;J/c2iY<WJ;cP^#iX-df)G[bDJKM
%[<I-EC>RX$gqg#t]1%S(>+9#@n%?,?aXWr@JbYL".m&lH?8[IM/BSSUEHgJ]4gP=N??L-B$'`gc9Jo77$jl$p8LTsY,LZpRm(%*"
%Q8+g@[<'[Mrm<@npA6c:hod-G.S]4hh-D;kUX@%PRT:V>[TAH^'qYapKV"Q-lge"RW*"8._1:414D1+C.k]alH/+&^XYO4c1t?`>
%4jnN06ATG.[U#./;?a+'iuj^sK:XGd,*Q1;S^jh"+n'.>6K/Q4-UAi"kV]V\<JBJLLOZLAoZ+=tdaR+O'E+3aHq!57q?SY_$KPUR
%Mr1a,$ISA.i^MTb[;pEoW=uG`ri:a@k`qlP!>C7!_cX%Ho,)CZ=Xp3uJ)23G4up*,-2hu[n8j/'(k&[^ieT%Oe!Rf+WRIK>GEAcO
%)u6Ok"(G7K@*/gBXJ_k5kn2C(4QLUFA[])7jSSgI@Hut$;n^6)XU[J\M0#QtjA/T0"&I,1@AA-N*9mWRDs.JKh0*2l<-dNFgqje]
%rqSS!7?q=D_ZQfcaA=\<fA_$3SK#(<$W(clWKW]YPq4qI53L(gr/>dl$7TUCBD[5f"&&9@Z1\fhB/R?K_P&L5._8!hTttAsBaJ#@
%9i4'>F)bWJD[Nh9)AD`pDbj%ljGp%+hEu3Q;Q;K`PB)6[%>oQ$n:DrF::kH*bQMk%pUk9gjea4-p$N"/VM&/,a\Tj,9(,W7Knhg+
%;m22q[+/K--q6D<9DSdL]FhE8Z3b&h3ldHLLe4G&bJUWB,84!jUKEsBdeE3,gi4T103Rr6OuW%OC2ZbFN:K=WU3V"Y;iO?R^F[sM
%8L3L!1hZQtaf7/Qq+tW/iS_m2ghleQWpDdKr=2$G%$;rn6LJj*r90OY_3V=P)o=kE?F_fY*Z9V&6u<]q>%@W?5%<Cj_n"3CRKWJ;
%]6/Vk)mH:U@sr[MW%k,t++NuWTD:MB.4CknL'duM2U4KRJ.M4"\&5Lmb[D]7L6kYqSAe1j-'c)KI9OtLfln"TT,"6NKrTSTWMf4Q
%d7)n7WPQp-PXLOHY@,sQjC.qNO>F9Ac/%+^<3>o(cTX7`WN%O*Th\f$am!WSfr]?K'p&taEK\7sc@8"[fuD?:KW"X":Y\+T2Wd0H
%;#iMqF1?0!90Pl'_^_-qIeDNt(#k1jkoTMc-h$.!3/qE7;d(3&?ED!7nKlIqE5"QZ0WZ4@e04/EZjHqZC#PYVnj^!QSK1T[]EYP*
%8oHoY-n-L>6Y0uFbFSD?JsZg1&PDb5AW*S5pF45'T7pcNaB*TFe/!3UkesNSke@%(9g(ebQukKU/J%[TPSD3e0KJp6O@hU</c/q!
%Umie2H$p4RM%b[=[GoHi=WF`9%Sg^Jm%.L%*Z-W^JYC7J%"(5R!=aO?_T+"7T6PR=%33c]F3>qDJFnj6?tKQ5s5Bhmn?>Fs&h?h#
%msH7`>Ged+YG>.W(Wjpd-?[p<ZA$$!'aO2'*1r46k<h_n3@<%c6Cr+o\HtQnM\r,4PAXD6>DcbjT".HIlc(/2Q0)m1*P>HY5(^b3
%o:D/T^*g7C3oI*BEjQe=;qS#<ii74hQGjg"UB.@cVL$604KT`OJt5jHJP[<MA9IY!+L-qfrSgcg;(u=$#u,\nKp%Q8b7l)R?"T.p
%maIF!(+grpfOL=sp>Cas36BVjRpFY'n3](b.6DG];9ca!r-EsjjISO0$q0r(ReHFp0<0Tum&gU@/`66p$:>60(d*#G4AjGhld[@X
%khS86C6E]u^$hF%Aa6^nn?0m@nr;JG\,KNL]i`MHH8=a[h<D:NY9t/Ce\'u?;8UO?Ao01k<T9k'KjUVEga"mg"b%DuM1T?5bAohg
%\PETabki9oIC(`dc^dI`;=p1B-X%^cRES48T9u^/Ff]hOgI,Y]4SkX6[s?;J`n9nD[Rfo7o)QhfG$@^d4_8-[Y<@9V>.aNICDH12
%S>O<]05]KiPF_-.6JX#"s6c4KrA+]jpIf@d_LGg=Xifh:Tp.upHFA8I%o.*(fj^"?FJsaTgDl$2c.66=-J3"/JNhh8VMZA5BAW#U
%P)jC`ZJY%d"IJu!rS9r!Zj7]KI*8=mosn6hggBeIL]-sDC3$pUH=&S2Weq#2J-Ud/2/pU7IX>>h`s^8bFP_K8E>=ilmHOVYr4O5a
%H2e4FRFObXL/U[S`\Cm?*C6Y5#u-sL6Z,J$FpGm!JFT;h\\ff]Yl8`o=8n_GdQM?!pWk662HC`a[19_p"[6dUhS[;#SqO$^25Giq
%Lch<j-X94D,lG[2gAZ-!\`YL+WbHp]r-)G?Wj:\[:BBY:^_J]D,GeZ%[k?pCJmN(JHi>kRQ`5$RN8$Qt6B(e0MU;a*#B2:O-\h=%
%CJn$FjQrTS92RmP89lJlV30B!FQnUlY.I;0Pr5F0\>KSS;G5kekpiJB0JNQA@MP'k<Xa2B:st`[q/ln29<R8#:L$2uKn;+*eZkg+
%Z#_nq_IUX]=_M)$B1QngF3Y+F\J3VWJnOU)'gI`pL*S)fF2=ar\sm`/T/I-B&/Ft#BX:((-t,r)ch/q?oL_ZIO;&bajGlq`TpqPF
%W3VnmA>V@iEV4V*hD"WtgqXJ6@`]km3oi.NkQOonT.#k&Uk_k;H)7t._Zlr,8lPUdWQNo)UV[$Z&k*P\dDsDjEYfEP,i(!hhK`W%
%ZaI\\F^BIg';eU76HlJ)[PhB#6a*51?_;m^:3;RKZ'c!E'(CJ0;HQeMV'L@\Q3(ZIN\SL(aScNRcMbGk-0'Sd?hY'afp)m#5C_5T
%QueZ:G99kNs5.0A6g^4r`I4LQ)'FqGG>6l>'\qU3Y2J4eZfotI<FplAYhc]H6cVaf[b!dC/fn;)$le3H]i]+4DNIk?18F",h2p-e
%KT+)kr)SaQm7FQQHBgTCa1Z7TLhq]bphoMe'bJERgJ"Z6j1LkE(UBrV'rrt<YA90ifYtFJXTX;g)i6\$MhXb,4iL@'-)O<(2WY__
%&pG1<YDLlrV-t&8`k/WR@j/c@moIH._@WsR?>Ct&g65:Nf3/Ph:1NC'=XF?#6j^K;73$Q+]^ag@:E2<Krr:dY;'!`F!FORfiSAqO
%\_DMiTZl&!Y$DB@(i5OO>FB";?=:&(h-1En4`W;pMkOHd;`o/*N&I-C_U#J8Ol>7*2)*>D0kbB6i+S50i$4KQmr$6FG;)b[SmKdS
%Y8/6*cgKsWA/+YaQjX6JAZ7MO-.:Y[a8"Gpm=m^4aMt))pDp;'FSaI]0>CX!^No(c?TMI@C<d>iqYT;/3+M%q<scBl1E<BNV0$7g
%a8cg5aut,Cdf0t_6D@N+(D"r8\2RW-l?+i0HtUYk>X2uZE[1_@W_^qpHpW0h?#\+dB_Qt%K>lM-j:f*GeS?qJlMeIX-_;Q:_5QgA
%g_lDYf`s[_TWR=CEC*`M4?[K'mM+&=mHa380biEh,&"aXBR0Ul!om6"I-j!T_g=AeQG/,GPi=fQk:=b1jq3=)^;:ZDRd&DLi@E-0
%MT=]<c<$C,%*?d&ceXE&T1BAR"6%_[Yk7AQcG:f2+QOCmmmZO9rkHsN4rc*Ah[NB\=L$iAI1$YeUYE%opYAXN.lk!2Xbhi-[,%>q
%[IEY7eQ6[1m:[J^OX@(&Z.5800`jH:)%V$rNeVT<8=6+1#F#*(:1UNpA,gUt66\98/N8<<=;m,AiE4_rY#@_i^AJCXG+Th09*-ed
%\]/Se/%%\$X;XIP_%gutpNS\t2`+lc^;H(9\pkW#7M#%geH?rlnn/]&VGeFn[`5F$Wa``_FY\<kTSd)=C?6I:BPC<GKhb<d&?>bU
%,UBTKq,CN[?1ESs(BTaiC,Sj,\/EtO6kAeu05sZ+7&eMMA9":fg2jj)j<."eSn-B5#U?aN,31.uVC(3S4$8Z6P5%l.XfTDV(2_VP
%=WjRXm6Pq=.LN#lDYFd)(#TQKPQBb=g!fF*d8fqE<j5J'9N/[$p]f6bg_PBe[W*j.3VMkZBE\_0@;G<!,K6rEa%DQbh[rct(<n&5
%HCFBn=^T5<FS,%@9ro"HoNfj!?A!s3i$jH%qsJJRXL4#m58bI2o'dD8f)(l?*Nm*Fi@F8p@")G.&lc:MOTK5Smk(q`\+3t*[U84]
%HWJs.NmSo9n]u(`=Z[6nT"PWHhn!./^=7'jH1e_q3Zig$%Z5/SRQm+:n05In!j?5QV7YD=T68e')Aeb@,HSh14JSTS?Ots-.:+[s
%WcZii?S8M5rVb!ero?sWj40pp`>tehH3C*O^76`5]IRuK^3]Fcs6E0VX,XgH+ujPeS!e^g6B(hjB"l:n.9B#gq<7/DY9/bW4NTd9
%q.RqIeWaB'6<1>F.i>=4m\0L8p)iu<]KVG]\+qVjs.3H+b%SleTNkET##.MHV($Ih,foc)S"FfH[_aM"d&Z8,G.m.h-lM_r$QR;<
%((m7,30cYD[prTeQO9d+*VT!1SfOV/];2T3DgA`;AjB5uH&=B^T/(6bM&KQL)hYcbgt0JG8]=R%,S,dXTh/5jn]$/$%d]+O'd4j?
%I\-*!>!PE<a*8/GV!nU^qe=B6f\0DJdH64$r4S>oY1amFrRfY1gKuZP?7d2D<dMX<AXTSaRf'Hleqm$BZO"T#GW,F*Agc[A;A>Jb
%32qdResB$j_YjgM1&4F`gG#%K*S#"[(<q_D91E"MQI./>pK:Nl1YH5C>+E1<R+fu6`QRj;FF;RD`RQaZcW5<AF_b&09I"O($TJ1(
%`?#U+QL("LJ#!KEj7!2Fj,%m*jj+ciB=)ebgi^E^eghE6'iTNWA:B<#16pTe0LVY@U;:"q^6)s/:]A&[SqCu_YMj"^P"7TflA64/
%Vb`foJ\GXXls0M#1Y%Ib)%M_=pa7)$T;LiNY'8;cn8<K"qAB#qj#Z@]+O+(eU2giLO@48(i!3-k-R_ci(DcdJ\4:\omj;k5K[<sT
%8#OGX]ei%?,TXjsZng-&($0l$U%f*gX]W(Uje<r5*Y8TN7i7lAdjeZU,U4D@!dU5BatZie:S8TR>nm?T]WtMK4?<7urpeC4H"^-#
%#6i0^'VEHjJ;A7VYnL)ZqL.,@+\Hrl&n.AYE,In@:;/20E)'asi]4g\S=\jSWpu)7#"/%M5t&59=!GhIjs>^5[Y5ASZP[psPh7-&
%2SJZ`a5-g#"!;^YTCD(45L&DHi8$QO<+<<tXGE-IPrC)'/rf:j,)8+N';EX!3]W`=_2)rLNO:io5df!KJX3NR+9JAqY"kE:I_*ER
%)kQl!i\e<b:ut2ks0Q1CLC-KI4<"bMa_MD1??CJFe#B>BM)>\L$M?/@Hj?8JR35++eItsHb00^7)daF4`5<iZF+R$$Hd^k`*Zj-0
%j:?87epU1G@VMMAN+K"C92\A$(9@aLo-c&2[M,Qq<sg,<K^d&r@4^UflSk,7:rl;$34UA]pYS%!4hl!t=\-@9d`TJ!rY$@0o-YF4
%`EFe#]atUt*o;TIGq?Wgrf;VmFg.Kr#;K3UV**G!ikaHI,8/gk8;l)mY2tJ%VHb3-X!q,Ka7!LkL4gLV95Fp/NnXO@V.7%T<q@5o
%?oA70N-gIp_N79hD*P7KNtj3WN(2\J#=utGfPL?BjRe@O^>KI?Jiq?CAqoe7+ueZfY8e2&^K27M"Wm=.fTo?/*1dNpAYhE@.Y-e;
%YU;*eYW0c&efE$HY;+GNmAn4<9f&a'n1@.4Y?6HipJSneU3@Z$"?)HNq/nXrl&P.4Z4fIMXk+ZTQ7joho[K+@3]JGH-Od&d6Ej?3
%jVo4R<'89_l`>@3pO+$t>A[:d!Tc'V-,LWm;4EWdJE_sR9dn"u4(=5I)c1Q/4.2f,KFg6PPp-R=/C\eU6aG8)cBB\NV'F`q-SGQ6
%T]&",'.p(a$k<<[VA#m0jeiiHIKp,3VU?=T)aRdsTtutB]XKZ*1;(e,&NFd#JQe2?l)/.gBpOmDXLB;Tc\^mnFKqo+I5>C]9M\*%
%P#tktE%"QC(-+fQHq)h^dA?i9l'\L_,<Lq,cOAEj`:1#L3P&k8^$gggS1k8cEZu;+^;+M^d`[f%=ZBG(,.kT2$JX7T=fUFc3%Df1
%A<1>CL9rDrClWf44Q;4en9Y%2$?&g,3]Rn0DX#gnAn]*CO>?>$[=lFVPPRT:^AFZaDkp:DRT'YBJui:Wr!NhiO%opD<%"*=%6a:<
%T<".8OMZ!9\IGG@$7,ad'YS4R%fJZ>JOn0AI:4^*;G\6@7(.h4d"2u$*@gP;Q0q9pkH=9O1i,@Sp!E3!];jMQL:B,2H56?LdZ^?t
%elEm20lN0^c;#8Up9l0g\'^5?d)c3FMdQ]!Vl_hQ\P>dk1_O+D[]ZDc.:.rB2(]QF8d*6RF+f`/E?^AHRK\.UZ1\Xl/[JWDpfJ,n
%((Em^bq<+*ftqNREp<!ZbQ+RhkCAp,V@4%eOLT%#ll^2K>Zu0)$bG<_5eUr*5=4Ts:CFuF8Je$COHV!_QDNi#,qUeoa>(i\3Zc][
%-Z/+uBR0KCe*_E"J4l#;JWLs1qGcf`&G:YsN'7[o!kK:a`%`,qO:%%3*X=kOf:D&OdT"S1%g-P)$kJ]0>*RI7bl_H*ao(ZW+:C'7
%B^/4]P2lmKijAQYkjY5ihu5>lo$n(ef>Nj1$$j3coCQ=!p.Nb4qeqOCo$Tl4R\[k:M*$m4<rl]74"0]O7mo1K-jF^=rJT2eM^jC4
%-Al2&$WkmKPWfO^*U'He9k:-e$?<e&*o<^WZ="9(AQ_ONfAS8[=>j^;lV4b9kGUnd)mIdL/ZX]V&AM6u)#P'"Kds-%X@"6rii"R7
%*Emb^AGia3d8?o?O)E<1'bo.-Ut72\*Yg#'U9&P7jLuS_b&CA=+\<Z2`bP:ba^^*7[>KnEX^J0$`@09:JY]_bJ.SO&;?-"!$4418
%@R[(s9AbQi2[eKS-@;0^rd#E/maV8\33qCE):VF.js6fQdI3AP4g^;]R#f8-gOH!Yj7S92"]+fE85GHdnRH[GBI04\1h5XL$=\\s
%oXG7V-b%ZiFOhqhRHThG(aA'ciNT*?-:0b33j2LdQ[8!@PN<66Pk,/p;7P@k422qu=V[-fZ;]jH4(35&JfZ_LduGtF"T)I)R+.Ht
%TpX;"O`+Mol'n1t-qJ!fN[_ti[QuhX)QPNRY/Hdhn=!A9MDdRV"sAjQ#/V>L!4P(+&(/rt.d`I,.2<[G,K<)ZJ:D%ddO8j,:crhn
%K4Y.hKad]D>o?sa+D5aa]d3_'BTVjRo@XimRURN?@.Q]-q"7>2_C!Hs$`2L4h*a^`DQ"3m3C@q+'UGG*P=c!a-0ieET[/cN%Vk&W
%Wa_P%#RbYiH829\H[0r92BP'cjWj+ihk.'.dZl?#:`1PA4;af2s%#NLXbFHoS3L;Ykf8dNI20*@$R.o;Y=@7#Iodl^P:%VV3(9@F
%LuSR6kS3<`.bNhN+.R*X-oj!Gc?hmG-;tgR'qKl$%HC2dN=ttaeTGeMTLlQeRRFiQ'`jWKa2NJ&[)FeqKOl-/O_K\*C/`f%DPE<S
%>aZCeL1W@?q#U9#(H&U\)SC&-bPYE=D^u[A69jppGY4)T3GKWFMtfRgliVGl#3nCHAnBA;cK=%j'kM>r5"G7jG';+e26CP@122R]
%2.m%F,-jde0I#3V4eLjfJHO*+29ME9%VMsk[mObSU1MHDP9:;_U(k2C8[_/!L@,@o/um*Nft=&,fRi,;V%:V&^`S5X4kjOS+6D_p
%\d;GrL&5iE><rGqDiD2;_,hjPi`Gt646$EiSLMPZ5X$2P/u,h0CsZ95U^.L$+.kZgeuW^*>rm5S3j\8?>[d/r0q].+Z-Q's#qM?:
%q[IZD9\fjY--<QF$&k@to*aQZV"KgWZ@\8I&a9j]$_'<UiNu)Ce3@59AogRP.Ye>MDYV"HHZ,UYWlUst(-t/c`.Rj+)]U3*l%K"M
%l$VgIA<GZN`OIUD+4qK=4L@c<q;ce%(7U;jjX4d@6BY:t+0J%N5@qtIb#J(RHAp,nptE(F`P[mZ//'74b`Zo[3_HInP*849ZQ<"r
%@C_md-n>__[h]F@U%`iB;JY(7eEnTVDr%QCT6HtO8T*hDMY5PX9]t]LmT-f@J\G@n+"W_]ee@JM$DEnY9bgBp(.PE^M,N&\Xn#lM
%GlNW.4!g7VPJmup[4htQ#$_j^##7eJ:9$sB+Us_d8X7XhZ19f>V%K]"Wf;fV6G<XaQOe(3aC)hh?6XBPH(LhQaj/edgm%#U?p4o+
%#tpep4fNZnF^uarR;&<+qT71P5-/lLjUQus&.gG_6"o`R&sKhq.7>>X\fU6J@n=5DDWno;'A\qnY.li6=\3>NATk!u`3<R<>I@%E
%\@ICLHn>ZKYe<nS$C/U%lO_(Se.kE&][1bnh6-Dio$K!#;E?deM81t/Y(q%&<S]renAJ*s2\d:tWjEA[;28nj8U-lumRqrmo7]pA
%D#+eQV.u8!S>*_Y59I`8@\$JHWhGTcap4e+W%)g],c`./=F!td.,DLY^aY+HUrmQfcPGP0O]&mtRK(,Y8i3B?-oa),=t"h+/smf#
%ONFQ@EmTDNdr;(T?*\"oUG;]7F+)mE0e[up?Ha>);+"dqcE8NTNTFls!Db!@p$d;)5KrWnr@PVtCsE9Heo5snN:]HX_FbSL%UZ.E
%qY6YOTsce]EFYZ0raq&!H:b,5d#=9_MW@Bt"6tIB(9moR3Zj?t[j"ePKH)os7E`jbZ4pSG69f"?,62%ZTT0^PIJPlm[=[?NTd1#+
%U.QD@\@h"":4F2kegaNDBdr)/3X7t]$9pE<o^&AGY)HCqB5LM*EuQBaM9eAO74QUG$nJ'N6q#K5ItA8BTdOSCe*6$tV=CqbTLU9U
%0*;7r[:*DAZ_?om2&P,Gb''/DYkcXlQ;tl8];9&FIDMb`g\'C;HFle/DA8+Y.d'X9W0an'Fut/%lm\j/?%6l%N7sPu;9?LTTgH0/
%`)RtH@5a_l2[BY[s#<i#Oq*'NXpILk]k)i<3[Q0l-8N::4rTZBI&Pi+[7r8W*#Y9,O<^p5g'V/N$5#-GD5\A?N_SNac>#odi]!Y5
%^XK)Op>;l18e2ej'4S>K6mlj$HKNXG/f#X"3p)5j+i<!@WlC2[()1PkTMue*BeKpRraFi80*C9pAC9T<n\bmh;tu%@j?Zg#Jo&n_
%oP&WXHVp@Z;d2SBkK\]#e\i6S<:o\GcW:X82^`>UE[bj_`7;*^Dostk0HPDUgRkVnI`ggL+_k$u1n2R>LC-FQ<*XI<BiMcL<GKmT
%Hf69sX\j,3gS^!h*Z?V)r9Fn_5Ql75Ao'd]lu;H0eGQc#&ljf\rAsD9[LS5fFN$be5FHr[J]Afu'AeM7/c;nZejdbJk986Y-->s]
%AhJ,BZ'GbJ$\I*q\lC]P?'6sCHq<cA946Qgp-DIdaU*4M965-H;`"Z(`\s5Fqkdk@U2Iph=LN\'_?>G2Z<$R&alS2BT#LJb2o'%L
%E<?J!<THg3A9a^h\HhN5(]j(=XA4K[0T;Z0P!u5WkG%F!a'%R/E_6o]2[7.=h?WQhEI\kW,)"^o$SY$1-GW>V7V:]"Pq`(3rKY7R
%h&UFpm&ldMpTKX`\'+l*O>KAo3EkWQ'c]q0nN]+?j*;"REk:U!*(?ke$f-HH4)l9,qFoN]XTpsc#sC#nWSSjhhO5+rLGl:cpFBVj
%%VJak2d7C\g"-qL?KdTC+OuX\FiYu/A3kA3EHWi?Y//%Y?9ljjPa^qX-,\j+Z5=slPCj&%:]n(F^[T=E32D*ij$&:b9Dr1Sj02-6
%SE5jM_j$4D,>BFR]!SYUeb!t"8's%Y<e$*7"c[=51)VR\;f]Z*atc5dc_t7i*l5qI6$cjAdu)e]Qmg(qDBpmmL_d\?s&s.Fpq`]e
%FVS4&N^oJ6LNHJ%Q(0`6K'?<'Q2IQVJT<0+?W^<TmspkN*jM0p=(CQh`jjlOE=OruXZ<:BPba=6DI6dc.h[a&UQ+=,!qboe(EhOY
%Wr-=c%NeR$!W@pt#Fd%/<h`Z[7p/^t]O^P2=ZePkf5/`DekU_Q69Z=iIYaThTQT,IV3ug*6/XQqj3bI6nT3;VDriIA(.HneSD2Ok
%H%f]EEC%JQ?K9LA*hWCpSI6O`!c?mj=YL;0:p.mQAjX_9:H<KqW5Q6rFg+WSlAu:7&3aHYH2u(hk=1Go#Ksq]`Gq@84Epa/Z7<pe
%Ub-,9CstDA[T=oiN(u\Dal>af*Nc_6oMY1(rga9goC61uBjSQjkIVK.:]lG+$8daM:gZO_*%dV%&;nNMBh:\AZps_2PAm&D%RdnL
%an2nG[3-SYkX*J7[#@oIn@VMH<:2!LCC8QHK"c.=OTa[UeA$O9`@+k%;Hlr.:2BHH]LB'57qO4?T7PU0_MdJFHB(XE:R;P=0gR7M
%nqiI07*OeAXSl:Q&VA`)C:$SI[?l`+'(c`<\VDZ_?'niuqb?K3KqOK]M;H]BQ$9!0g2qUd`VoG-5K=@&9&pYa`$"7!9_&Q`/QkG(
%TA+[%6F8<FhEN:erWbJ4kSl:BI7fJ\:[7oBUp-0:C6Fab/(B;*"CoQABMP-ZnT3D")jr0(XkmC,=S9XgPJBC?p`>FDLZA1D6iYOb
%GqbXmGLkO;[8oK;<-cjGl7gl=:9ZgUgVe:N!X^q1XAYI'/sdu&[SUlG+2\<jk1rm_D(kSdLut]1@q0Xe++^MnqHVQm>/$@tLflk$
%qcGGcV?mLDGP!`pe03_Q&/CqTWOpN!0oOk$!@GpM!Z$J`"I>4F_hdL#5T<^:<8OV+@tV+&aQ?o,Nt8M9MQAka[R8$lXU.Xt:Qccc
%.hhsn%NR#0eOq_8XMs[C#o@7-psA?$>W(mZGRfI0VQ&?cMK_#j/loYG]FjF<l!3\8QZPbuIC%U4d2>Q_>V#Mn\>k)j(b47pFAdQt
%+`Wr-U!kI%YJIXk<l$==i<1?=&&&Ep&/k-m%f(fL;F9ZQlc^KU;e+L)5enYlL%mCH=t4^l%5?7g2HU\0RK;!HLEeV,b65HdKFEO1
%1A2/&>Nd(gLR1:SOr+N2hIB4#;D(C1j7Qe3*rFrjoVOj/T>F&YKA3:*ooISE[+&dfK5k8:RlHa+U;_"?.Mb7U1WVp4S5:M/_b)kU
%Lr,rb-`k5Fs5\A$B_?b_c@0e2I^jto>jEJM%%eE,HZ5GRpa:*Ns4pH)#\"c2i1^uc-'?cAZ)&G+e>*i7mP)=,X>Ypugg*P6$RmR*
%::16gLu7G)jCAeh`PZ<cr92,C^m:feVr(AA3QEm'e=G`>O>Qp);t[`\E^=1LA:<qTdtdP*PYJj''_cb7DBjO]WEZXb@KG!X*1+S[
%1K4N_'hE(\LLE9I3t^5rH@[sQjTsKpZkO=[1X,%qS6UYGB\%F$-L&BE/1a@mA2)*c,!-@Q3#kV'X@Fm-E6<4A%*;`f>9dISXCg+h
%.NnSD!T5(NeW:et(%7:$5[7eJ>Q\hMF6"">RFba=mLqF?(H#c;5uFs7\l#T=K7dU2`%I:K9M>\Tl5XNb*i@HHa3tsTEJ:)C.6qTs
%mD=R[,-.NpSn:lK_Db=lZk2>NK?>@%,H3/!-HUfeW!XFdo#@=aRoX[^eGlQ$68^Q>+A$3C<Vp;3kn45!":@'coArM]_$YXd`!04T
%A(8>)7:@MZ7llLfbMGKW!_t)[F@k5iZfdhloa;Q?X@Z)SEc3Y;+M_!ZfV7P+[0bRC3K57fV$AkgWT^+el0#U'%`i]9jT"(5kXJ27
%,,H\4K6k_RVDp#,RYOGBBJd,nlahZeaK,eb><_7<7se3TE=M6$&ZBP$V+K=-0)mAU0D4_.?0X%&6!0H9f$"nQ)VR_&>,bHMWGI^S
%>i`H4[p?S(eUait>nMPr=n^^)<2W[#/6Uh_-Cn[,MSg<^aX-F%Bq2'%i_0BQ9Bd;44t!D&_e&+T8%J$.f1#sS*&@.).cjE-C_1oE
%SthOWjS+?G+RTF8iEc#b('K_UKGOBj/dQHL;*nR":cUXB'Ti*YARMco?"9('<>CJbMeU"l85)5@+]A`l1:-HqWtL&BD'&C2-B_o5
%S-[?)$+dp]TBOTACqU1+rLP1aQej8bA862&X.!4NS-rZG!,SsNjo*5kJTSp5:=bNP9K,Y)8@08op&1`*4%8GIh=?;+:Y3p20U-Mj
%kjE=;=uD*&];K#g[ak>N[nH2(o=F%9Du[Q@l!OE40Nn$jT>1<m?[_b/l"=@PrE"LA?Trl4qOdc_X2"M3[pORTh,iK_&L#'aoU!>f
%orh_.oAS<is53kFl[SnK?Zf1Gigf7oDYRSRqYD<5n[flajo>#HYJ0nS\8\Hk-E["+Qi-`jp3:i,s7Z+eJ+qcchgY;Yhu(BIYAU!(
%hnJpS`J+?ZS$0U(qTBELqes4He[Jn7oA0/tF@T=!Du.Srs-IYQFar4SqhfT)s3"JnpQ&\\'A%X-m?\pp3W=F+o=IieMkBq!0>I>5
%LTeGj?bcO6WS>,qpAQIs0\'s0QbQr\QZH)7^3uAhg>HF4U;BBV,&+&%[<^t4jtdgsp"!9$#&q*K%pQ;Q!g>Ap5/U<oi6Z21&rOU#
%p5$q.0@pLGV-m&^#`>l@*t^6I)5aaO.E:]Qe7Zf%)1mm3%BIIE,%WMAZQT9AXJ;NLZ:/jrNhm>(/SHS)l"93?XIj!DE#)H^bjsb!
%Bq/X+k.;[0#_q?RG=M72eiWE4,(YqJm2t)[kiP)*AsGP%OZd%t@&D2&IClM,6\SrIXJ1QAALJ+_]KMSbX+s7#(4o>BULqaFDQpr,
%\(YZ9*>-/hi7Y]P93[sj*F7hTFCgZ4*0cCH[p6%+oX[>[Y)._@,\_(.l,)"Q";?X^giTL8i)WE`RT[W!p3)]akQj>n_4YfLeRES*
%PoPP`!k[.T$Rgoi?/**d,o0X3fb]MH!nc0OpL`Sd7bY//m2$WG=3YRijQu8S#.r[<*pPD.g?ubNYJ#YOd\UG\75kK<lfJ67RK_5Y
%]g6MF%r<HS-)fb=i?tp"":+/<aSFWda,>rQO$>V]7c1rDnot,]jY+4C#If3g+ti.Q*$JTcLdb;T<Ja5GQKj=dYd%/48h^Su3'346
%d*utJCpC3%M,4hBCoYDr/%VC\+oh$Z(QYn&Vk(ptY>saf@!8eKoZ2oV,Y>Uc&cOMo\hb5"dCrmAIa]+Bcj`;56H<?HCAsJD5.55A
%r"rc,C(KbRTXGAT_\0)ZW@HBPI3UDrg[FI7#MM'(U>_Fo"P&k6P6.)<RbsoCZ.@@n9)"HOa[)$J?_UWJ)7/Fj%rtr$6X+Y9eG5jU
%(S=r-Aoepc;F6!@SS_$56=1SkLc_tX4W3%D;V1r%%++25llNjka68SN4oOe5HM[C'l*il71&[5RP5=Qsd#u-9Td\A7oqhtRpjJ/$
%W?q2AgYou:p'^6kYKt#Q!e5W+IX&5KE":J,YF:Y).nDZD&I0pZ$Fun,ki[_F%I3Z3W")Y+p6]=LR,1Q_%51FW6m1Nt3R[[/D[+4k
%lu%"36VQo?dYGfDW_u-9O`M:B3b;c43&;+#BHFf;oJoG#W&6`s<&hdBDbV:s%EdiRfB,5Vm3=(Yg8B_(As9[Lp[-G"0hU3.!YX13
%.[W%<2rVjf/R?=K>0O;^HK]mkBf>Ce,e7=1o:&QuE,9#Onu:NQQB5Oid5o1Nkp^N[WA:iP4tqu/FcoVf4V"CgC=@n!/1c(gApmiK
%NK!HWK@2$k='\`O>KW,c=ZY(r=B;pt-[RfLbE)^(.N1oaVi`cFJ5K0K.U77q4m35V;K)U5cQ7s]D)JLARZ%:n9__,9`YUkbI%cYI
%RU4K'kg=ucDhnTVqqr0s;ojdu-PJa$>3DDkIi2`V\[hohh_gpSbnqT:<MGR"&g(E-5p`MDHH[>O<$kk.KG(e+[`p9Job<*N8/+9)
%Fl<S7WmBR\,eSitoG9:KBNlPhRq+tZo7J=Q)Ede]g'@u%pjA+nhhUoZ:57e(-t]5r/87/:S\;6N.7sN*<6bu=Js-8DFNtu9mq2md
%*kdh"%Gg%%WZh`'AS"YtJ0mi@P19kC4_ii_Ii?T/bF^g@p43&f0;uN$FgK,WBe$/3Une#C?hC&WX'C?,f3Y*u&im=gN^\7)rlV;Q
%`0]EaF]-bd5U='9UAfS!o&=W>'IL<eD"?j&W>0<->pSYYIO^AV1+GrCVTNoX.@J,8G_/.l*RP]I:kSX(#BfY?Z\2@hJ'5Df'oe%i
%S375ZN"$9%e[C&:^s7@G?2U-b.C%/JI(l:IX+DuRfX%=0%X-&70h4j)*id1Q^K!!L$=O1YC59eLengp%l/:#O#]#,!MQOUN0/HTp
%:r:BYMj,HoPO'!Lc8(KR-f,Tg#:]D6P20$t$(B;@<DbW1-ke6P*"4b4cXhQ.HcM@n[sY1I!<rsf<h:HEQL:AO?uF+E"@D'?fKi48
%@h,8*j)*JH!;:"_FKjn@GRuY#1a+P[</1d:Bc/!<PLdAgXtus3Rr[QFp"GZk1bEi*ZD+6&`fN2.236F7`?m+pV%BnqdQG]T=%*1N
%Xf,;(pIFLE=_0mHjHomg']!l@kb@)8'&e/c1mKVa%7-\!b>,/s[sTnR.6Rp""FHB]WhW*U1<FPJV+9(fWb(ZF(uq7l"H4Ste/Bc`
%$7h[F$.YV8k/?nN)9ELk_1XLD(tZf+Tg]s-U;o,:>ReL`3<HOk4o^[diU&FVM\MH`HbS6ReQ@oL850n:=3$u4_I;oWT"N"4e'mX9
%r42"<QV6nAct]7$I,1pnr]PDik7F;9b-!S#nPs)5q`!#lT9V-hLjDtW6aRO7QWr6N#tE,(o#-EK-heHm;+bP\4Gq=+"OdOX7[up"
%bRTP-0Y4<b=X;:1,%-'9EOV?Q8:+M$gbmjbL#h$$FW>kPV><.##HcPiTN@!u(:foK819gi*;Z=A3n2,3Zj9$7<6\uf3_LFQD6[-E
%iCLpiah,@#'PsV0W,1h[GKM+\iok'6J/KoBPpIQ]0sf/gj&!381ZF6a)F$Wa`R;j@jiqCqe@[Su]*]f9CCa0c`%hhoXGqffA5Ukj
%>+o*"W0,n_e(JZg.`&"hP/VB9H66J"6^6U*<"`>b;Ym5K*I^=P$*CEF[$cQ&n2nHG0"?N^8k#7eN6J;eDF!P#p3Lu&TOid6WCQZ`
%F1+kqR0qABA/NC'SZk:G&*i4!PQTf!7=CbmXVZYN7?:]T4De\%LT(^4K/hIq'n2LVcr,!.q8\Q[]=$(h6GtQbB4-"!KMsh^_F4=0
%/+Hio=<rIQEA7YP)(K<Vbo]E7l?sd&,$?\*?BrJZ)_:)5bWQ,^Fj4Qc,."MT/#C,2:/,M(RRjM+-+mt'g@NIU'+K5/Q&T)ob=C\6
%Am`psjo>De8Y(bhk0j.'U=-5@)@*:;V==oUr(2"]<$_Z<II\?]i!Ue]an\h&/5ZF>Tth3Va^ZF`Usc;r:=cip)$Mm\nD9f^3Ct`L
%(Eo5"8j3t)<iZhV/t0SHg7:T6b.)+bVmn1_Yt<j&+qZaC+4<99]?GX8_2,iILEb<Q>O(VM=$\e^_K2:EnL<t"+WE]Rp6d1*F@<dq
%ll),7ZrhAR);S=`OmEi[eq&mW<g'l6YLfou%Co]BJgX7WMTU1ZbZjj9\uKupeQo*d\u/iYjq-c=bZE2d=]_Mkq!_sO\r-$A<H:Xt
%>3XQab2P&3QHp@Boqprc9Z>?D_@G+LK=31P0A-*:lS?<eg@"=0l/JLrd.Nj>e\R\4:7ZO'n&7:2WZ=Z3H:W:D@Rik4%sD7LiOJNX
%fNPI_rV\<B#GSai<JDnj4.<Kt%`4ucKk(!s45lslpZUp,q=r"s'0EcK;;u,'8GJ\[0\SsbbLVSYVW(>"\0YD#fkiN:+H=Si=GfIV
%C:U,pRqU?HK%ggMr9^PRMSJs\lNXi2K`r9/KcY@[a_LPU'31479SoFd,=SMq#i$SGWV021:2HoP<MrGDRU0o5:=]c\aeSE!*:(oT
%:p!LEc,'uAQIm?!5OoJ'LhX^Q7/P*F1/Us_ac*T`).&M[d)*pe]hO4XWeJ;XM)dY)VbX7HRnB"Z%h#^rG?6p]fX6_(QgbN\i$#Xk
%9!iim9&I8C_;W>KrSuMBd5+5_P\=';o[YKf/n)EAf5`m,*G_8`_+tb9FQ,'u7K\XgXkAtM])[b3mRhoL8EY5_&sCa9F<I)a];cA[
%!sM0$FE>_B=gd#2:)&EqMWd<IAog^:7P/DPbI,oXr+Lm3E?[+)L:/et>`8K^7TMSFRV3H(@DcucX<GCsA\tJ>RtRJ/k5\F]g?K)t
%>?dBu)-\hYPn'*bJ.&Y.i<S2$OUud^]^?-,9g[R@WSR%Y6$+LS%75T6(s5o3:QLtCqj<@-Hc$-/PlC1tUn=.Pn/cgX7efC^%@="X
%5L-g:I)oql,-Uk7iubZn4cd]f;AMF]+S7>k*6TJcZcKmB1lGYP,Ip>*l?OJCegB'WH=RJ--riXG`\KOhdcu,ImGC!:J*.k5=5NtQ
%eb<uHEsX/uV7Al_:.+*[;\h5Z/Qk[uC[7uKWf?5%KR`f4_pjub$V'9fODjq<7_lgZ5@Jgn>JSDg(*;jbk(guqo&9K"/5\gq*(`AD
%SPs#E)5%UD5foVIk)]&87IK,7.'[d190'ql:H/n2N`s0[i6ch:4f5]od1qhpj@Z$pG-hb5dT*A_q!)D#I<bZ65OJ4EVb\,NqVCU_
%%6!4&RT>3dEUHESf_"ZO0*P)E-W[ZoD2+PqU/WuH_,OhA2#i]!.bET>MC>3\d`S_^%'s:lf>U[KW#(4OMi8Q3G!T&.0N:NI#Lt[l
%\**pmYZ[7niDg.oL8dbV7qc6G9G3b*5KNt(^g$8UGY)Y5b1ksEUUafY/>AdXgI0H&8VBfL="$5k(s0HI4Bc*O%nl3tUkb)l@YbfB
%M8m_`goBF1-"SZ]TP(XhX.K,S9V4u[C=gO^;_le/W1TAYZ@t)YFZX!qk.Eu$><X1Il@7^O5T=',F>?9[/HC!N=W#I74_P00B_N6\
%eY/K&2e7'q;Rti'Z@ik`Qr1>)&P:J87RBPmD"lMkHc/H7rtHJ=[Za0Z4WLXe+`bRZDoo:!m3!pE$TH;('HkL\qc0\M:AFXIGJ2T!
%@h4jI>VJU>L$r)&j;_<#Dsm4#5,nsIC,"eY@=24l7B>$t92PlpKM.9)R[enB&XGii7%]#Vd7VKY.`Vm-asEbSiO_^WIZOAGBR-f3
%p@neAi>"l#iHio"*S_KJTtmn<_=En8n03sl?`PYF"0@IoYMYh-?K6$_[]1p"7ab3-hA2*&)q_@D_`=D;bjAI#HE@'N".A?^-`Lh/
%PHEHk3jac68;.%nU`572h$G;r32=Q=c!uKA7b%3&*3qu1GG5Llj+1$2>qs7G?E_EXgjA"bNd33A'-`_"Z4spfS^^_KD+N0=USLu'
%,0E`AB;tR44c(_AYhV*(olF."`g+&G=?0"1gcmI74'Y[EM(+%MF';8n]0(1cJ<Tpkk<-qjHa)+7b:^'c?)?gXijSYP$7R?\%9M?)
%K"JDFoPtkmki5TIhVTHR]bL%\]),a>Hj(>]:2ZJ>>tQ<1)R/Tjp8DWIO'SLr7<2tmIgF62/1mbK4/fB=9LhK@E"RRX.IZ_m[[!l4
%4@tdd+"q'eF?QZk:"-9^:A"MXe%60U1f?.'J?)*IJ@4b'fHs0_l3:cpC>N%PER!=oA@bGIWZqX+L<`p87rb/Mg;NE`4eqt9nf58n
%X&36G-p:U9)39WCl@EZ0K$@-$;pfaPFtZbmnTaNi;LE%^BuZ;A=I/ZGK<,na,Qc52\F]Ss'OOo_9[!G1SAU91EhF*3#t(iN]Deh5
%SFM=H#-?-WB?sT'Jmr7f@<!,2;QbRi$m/?T[<a+cbd;0B]qC16S#e\7>o%8FDQaY_O'8DL$`%WMr4S/H=aQ2aZ[1@F-5icqiLsfG
%1%PRpD09L68_N*d8d<H4:7fka->0ck<8)1*np3c!>G:Db;JeFs<*D)i;AI)d.4Pm=2Oj.J`eJlb[R!Fdf).jGVrS<%1_9S-D-@n@
%;r<-(dR'sjc*:g4lf];5g:^p<V9OOi@_M1'Z=h&,iA!q?%o54`S!mXhR>V$c?n()dJK65U_mhaJQmWe*979O4bMj'keCTJS=TMO)
%jp)MGiA9$%<Et/*F,4h\HfDR*EmYR+_mS2k/0Uk6rG9W;m)`7-BU^G-=Jge[-;AGIp$5q87W2MSOn$hf+'sk1?fI@#rT689,->W!
%j(KTM$LH+NYR7-Bo0su@UVE=Gqh7)Vb'\QG;cBMrU:#l&pU6,S%/ocpT7=&JjED\G9UPFMX1dk)qcB;dR@LZ6a#7u?aJ!agRdFV'
%Nor00=1Skq[n2P?22j0eV);e*SUce1,s+rUPRO2X=#@SaEhi6i#qO2,qEa9[g5W3I$cjL*o9's_%Mp3:RFDX@"_X);I42jsau:mi
%lJ>Xa[\*H;3*D=;nNurf8q10[:95h4e]a-o^J6B:gj_\VOa'Op=`d\*bt[#W:qP4!d<J;A2YX=P!BP(JB6e7T;]JD13/BA$,JDI7
%XgdMMEZI"O9,kLhddgI3UW;1`&EcoWs29NsgI9'bgju5TB6=blf&l%$6+2n4]s)#VV.m#i(0E6%*5^'*W!&&QTWg=UgiA,98:H:4
%S<[S[GY)@h$udHbkJ;ReoW6SoA-l"TNCj9'ldt,8YZ45qgarKf;81=ECLa.:'?Lk]2]FWna^'!'J#$k.!1flD55[OiV8/h.S_>[L
%K3q+f0dnn[$?#>"N`Tot4^@*W[k4d?2:+^BKX1Ah>@JAu*5;>'qhIGSbdW3i*A&UkW"MJg=4+\*V&3N_peO&KnE#K0JdF2IXl9*!
%pcu_P3Hpc-8"*kueNqP1\l$/kSG)pC+U+1;&*rP=@pRcrZil#bOr[%tVD9Rsf8f=)MWZJ;.m^P[)]7^Y$g^!B2/f(%L#,dlnl#m"
%D8^d!LYG&.Nk]h-C9@BEIAg-A@I,n-K+^3h.[n:nhJ6Mql*,3tf1:u]C`@JaSR]l]<#UV1M8i#ET9F-$J).]<0-uBRo5BKfJEii'
%`TQ<d]95O9qod=!E5V8Qh5%Wb9>,\dme!-!q`E"hdIDEsn*4p..Y5k-]="fJoAL?W=Olrr<fV<*2,i`>rq3SqF/0RAG=)4Y[=)rE
%$%)^KYR?68HsA%g6qNt5bULdk@B(8mrH-cd;D@=P(ir[X@:R<@`FQH-A<lK4k\NG:P9oTH'dX'"QEnA=3W^3sdT!1-L#=t+4M-i+
%l(Y&QZ!e^fk$,BEFZneOTH^F70SHFVKWs.hKkf(YLV/+LKiT;0--d)se<2.:d+D^SlAB6+P&JUr`n^'Rnah4^f>8G-U*D]V^5T1%
%_].H.ng"FNS4,TK$QJVr&mW%t4nf1QW*@ngI)a&o)Y$.hp3=^clBC1Te+<2L^RiK#>)=?IRc5K3ol`8j90?j,`jDR[_\?o.n_rY<
%eNg2m8&'Me*/F[aqil&YJC7:R<qg/N.E&E@4aDQJ*'B7)?.uZRK6c\blhUDM\`X^&q.Lr*T"OrO.JGs8-:><,nso+@o/Ygh'$gm.
%DGFX;k:>qlYBkPA0)O'pO*Jue[lW.mJXsiHGYHA+041"M&pY'>?G8Ha5R"u6`QtSdGd,oFp%,'Q:q7TfM&.1S^G4ps_Ieh+N.$pL
%>2"_?pI9*@(Ha@c5rpV/mIZf7ndBGmduGotI,kC`FWXQcA'K8IV>UN5ob\ocgM*GT^fH;gLPeIhF5U0rQHI&MnpXkEOKe.7qEr5Y
%^AYWESP4!Q9&WTaEtM4/!55UL42=X0\8W4UgY(GeOC`WfK3g3V\V1?7`7pPEUCr9CjH_+Q[q?5n0Of2E?K!?V2NP\I%LPkJm?QUF
%Ngnu?Nd%cI8f0#5d1<',N53`034=]L\)edCjh4[d\h@=ios+Y1h"E[B2TfBOfk@\NdJP[+VCJl,g_`Ni$MKTl)bp)@O+"!\pQ@&Y
%F^llTo&qcO@mJA@Jci\@lWuQNIu\`P7E@beBYnAB&Xcj!f<8i\9#qLSI%djc[>U(aO=QScO,r%jT+?UIf%Y;mFh7VIK//Icd^DN>
%eO^ip"oB.@a+0%7'&e/$YO]kbWMF<kG\KRpT&#Zq*p1Xu-bTst32l7%7tko8c1CHO\siD#2[DpfdOROJPBTn-*)&c+O%:GsT$l_T
%NRm4_^:Pi6Wi13H?>).dqG_k.&BR0OP%-*SA>1&<Xf$D3$N):anSc('U=-C-V4r1^*.k%!fp&I1632Gt3Gu,n$GnR$DIs)5b,2?e
%P-HN#VS\3MSH^980/:!Qk+P>qo"Uek73;#_!$O2cD8#7cAE!?aJ>(e:^=$"rA)!=f15bWnDVG\RB7/(5fXb<hbBXB9[GM+d,E9LY
%$:UQlmI@lrJD(V\eK7MB<TILJFQE!6W_4],/goS<nc$G]c(9OtCd5V6G8'61H"9A"469#FqAaK;.d4TD!q!L^;&('U(87OFii[7d
%\3n<?=M<5sLXDqVoQ,8dV5Hm:cjB51m.5f6;q/k<I$,2IYRJ\\#YoDO;+XAk'Ib!4P5JmU?P@(],Ga!Zba6!*g9Ee%<S:9S4+LmC
%;d'%R&UDh\SZT*XX'J?9YFG02M*ct#MHfnmc9$OSm?d@D/ZeZ<6b;[YJ#%?NSg29:BCd/7f2"X.TDstM\%hb4gTS?emKn$FVn[_-
%s6F$Aql?Xpjf@;<d,R=gm.:Ajq;Tpl/d$XZfbsIL#J7R5>&k@7r+L>s3NgR=7U8o($)SLD:?<cOL!uel_4*flZdRSj+=lOl)3Ej*
%GTa.@-up_OKDEeX*6J@NP#&e_F-DfJUke^_h,nP<e"6%U.\F$tf&3jW;UmA!-O"l9G:XsET6l/@!a[)jX&9"L_-c\gqQ:\XJA)"0
%kb&Xj-hI9O03!?iN)7jGZ)`)_C=N8#Ld*R)58fBjIgO9?_+;4g+NTJ%<Gp.Scf]!8Vu6@7jq-97I\+s_*sk@8)@8gHpj^qeJ+eA@
%o?EUD^\ZL05CE@iYJ-ms;Z-t3WA-*<N[JlAAUAGM@Kd&/Q2gj&5Q(>L;%s1tX""]+57rmQ)r>ZO123m!-^V=-`"P'+qm/@7n"T`8
%ENhWe8&'INaHr8eKoS7;19`ljnQq8Nm)N+'mJ<S!qhlQn=KCbD;a;)k"mu:*@=LK>iYP^j/a7)G0FfkTX>qaBJe_I5dP;]cin-GZ
%3I#B`J%T1E#Jb!$kGMCKWd?l*H(2?OAp7;L0mk8]Z`,LrQn2X,93(b<3[g_a;XH6'Hg"f=j!?Bak#Db'BIfe;6u,Z/N\%Lh!AKa[
%(VU3lUdT/cI7&jL@<Kj_KlXaX*E/m7.t+#K,J@@-cQ:A6hSF>eOIe^FL\+j"JE?]^"<o3jKe(IXd'eifWOsT(#NZr5^c4Ad\_cRK
%:/:9;j>:ED[u?%8ifI-1Eq,!=e*hBHqb0Q^#lfcZnktD4ZK)Z9B*&^@<mUA]4H'0VA[&61b`Q.PN6'qmLg!r"^>ZCQn<pJNMO3l(
%dVTjLDaae_UWDlI,d%Q4HjWf^K;GhI#:leN;5`lTGIcmMU8k@qi)7nhdmI";9Mup6<L*<Lgl'sj<aE_Ci\o*5&:4J4QU*[,nqL+\
%QkCjI>j8dh6i^2[,ibOG3dn7](&Wogin%Rg0KD)1O3+%7S6KnJnd\<&:rQRl92`HlQZ$BFas_R'fbf.`T#HSICCW76-M&l,]HL?_
%0aH>.EqX&0NY#k4U-kf1/idEeX=/j%<Fc8ITNT2di]?>?d(AJ/F@YpOOJOh"A@o!C2C[JA;r%YuK5pPWZUKlqBHpaUrnjq<ZF4p3
%dT#fJRbAUY$7%*U'>YA,R#f4[GH:`B`N3B^BTHoADMn2g\@#WT8Y<-fKf3h5G)*-5``B$)9)W`]gg=BUg^abj3hu4$$N8[%E`a<3
%(Jdl"J%o0o,S2S('bUI4gJO,jL\h:aDN9%)%mK14+0P7u\ZCo+5!sZ-)O!S5cB22I+;.qVL!i'S6Sa`t`(IBD<@r/\_i3*tmZeL"
%#*g'J+o$of=i)gjVs5j>+FAL6Qq<KHR<TSQGC$/:Ejdga(+>H&R>BrJGR0!@gZ.s.r/9:q6"Q=BT2AbQ/O`4OgQaE*W]>oc<%u8E
%PYfJ9Ia,\;PlH9edB&*cWW&hJQ$OY_[8VOQ$>OMOZ/_>_@\,Ck6QrD>Cn!T_N-DH\K0OW<IX-,7c)r"5Y1bmMKIeUBo8eNh*7$mE
%F(1+ia%;%,5:n8m8%9@4=1Te><aI&@$a7c&,>*HCNnbauN[F%ke-4/e^38]"iqRAjBqu`n7N`5hZgIl>V#KICfQ-(3?^JCXP=+:I
%%mIq@QW#Zd@Smp2)biqlUWB_5.Fgt/N_i&a-)4qG^]Z)ZpH6L9m*0"Baoa%foW&<'^6)/]bNE[GCPOC6TbGkkHBD6fK!HaTYBGA@
%e98V*hUFsa<fbbbO3\Jc)'%&>G-s*)#%R(N1u+@2I=o@NgB`DB+?Bk?\pSPOPsGH7<;(7XpO!#m<Ze.,9>Q&^)e,&&==-[?L<-#k
%WT?C/Nq-BA5TMHg8p7[5^hLJa[^'TuSf!VDA,f_9WZ".d'ZITI:)j;@Yf;O9^;rr3G7Td\H8MPN%hWueR415Mo"#)8N7GE(An??_
%FJ.alZJf,un_:Z"1?c%:l$%l/Q$lIt$>(k#:TP,/MnorbZq2`rb)lema;9$L(h"\#e3<WQTlkl3Yo"GqKh2_3]4>'`d0eDlmb6aa
%pPt4HB36#-lS#?5F#`[[/K:0Or.ulCDKEW^C'>&B:?E/\S4B4N]clW!pkDNOk4jAaKMa/YG?`G4@DY,d:F6>FJu(JFa?,Ju*VVMU
%8&3ta)RHGO\aD*r)u?MZ&9rpjGFn[o=mY<I,qU(F,M[O(T-kU*W<aFg7-PtH:4DaU"D60DT26o,ronsnf:NVhXa5iR8\%AmF[9;X
%"K]c%:E5>RAf]>(K_VhbPSJNB'^<AIQrk5IM+M"OH:S:d,`H9"$gTS>ZJC$4WHY=r&if<qf>nbXrb"Y>/:hV`p<7U?.XlE-HL9pX
%(0?CA-]hm.']@[0Z6L;CdK')4@?=J"A%42Qhrm)f01>+j-%e&Z8$\/9_=L>4bm&*%(kb<k*HS_Bhn9q6n$[ZmbXAlZeKTNDVNV#5
%=6D^)Yjh4BYe:1(Al27Ij[.8EOsT].<h^8i`sTh<[E&Wg9MRmqbLabZ/tYc9%5mg/W?%hRcSm?Cg$jJC#m4/1Lq%>;e;@1(fe=%*
%B1&eBado0>bAgbma&3sSMD;/e;1SBV;eM%6h*IsdVPJongg<$D&]54q/cH^ub58Z$0d4P69];JpA.5Mtl1rW2-o@c]<'F[<pA:dW
%5MZ,"4HgafB=eHtaSg3P&9T(`s8Vf<V:Uagb0KS_oH2@H5be?P)=NCP8BmIJ1(%l$C<P&HTPkDTm7Wb\.[<j1^>iEJ,1!g\W>CHs
%g2.9%Z1cF)R2M&+qmdL6`#r`#fQ_6@02=+$!^F5Q<B(rGog@jqdLR'/4ToX&H$ql0ILgQG.UNL4bseJ4A`<ChE_+YM%=m1cRLZX`
%<mtdp=?LNL9\D1@(Me^3)#5PbHK]O[gB<jg%,fQcO!q<n6sbV"]Wu?m$>UVWDl8]+35%M?`Kt@m!CidE]hu'EjEC"M<rd;Sk`eJ_
%lo//.+Y.hfe=_1^"k1k_X#SF70iUA1d2l-7(0ApoCg;4Rf/(E)=PjK%Sn;C]6;7;XNE6W(FCUbia>6=BrDksQO>U&$.!:]bHQu$\
%N2S?:1.GQ,RMURi\k;2U]=C'a#2uH^;.H16ZM1$eh]&:IGc^Z%bt?l>FQ<Gl4J_kV=<HjmJa@a7J.d8_jq.Tp-Q>F,Tj#?3$o]R[
%#3C3m?i_TF9C5h2V'KP,C$md&LTu<6o:>.u=fYR_aG?]"D@C\`rim:nW>YBBkZ([<^p%2,!U;/*<m^7$O9Xm^D?n?IV)@b1Yf+3U
%o$DMf2ob6^Lq<>g`I0<+7D)@RnjLKmk:V%#HTCtRfsfB+(@/&!YVS\>+RniMX2$J0Q1r^1%Y>jC<SF)Z,S!1k(UXV\WmAp;0\)F-
%&-qSC8)MDH7l9+[<`um!ADr,iU]t86Gb:W(p&2)'p;8`/<&m-@9Kb&G_G4oaUlDu>c4V=9dr*qt'H(]U<]9,1*^&J'.gG>b:DM`*
%riD.jZ[>(QB[>K':W&PblYX\j*f1(Z>%N`%9`cs%<(BO16ec,\CIM,\Q"kPaZg,!BhGL<AA2Ao#%8^)7PBGdk/]n/j=On;%_3q<i
%B5XE[puRGZf=uT3BP3aj8?+5;c#m0g"TO?]5]P#q]G$C34?:ftN/:I,]SSB;&cHs(QIb:hL4HsuB3#:M+0'-=AGuLD(l3pn`H4rP
%UX-;/N4(e>b?2nm9nDLD_Y4C#]7FE39LGIEp)h^FFbb^UmCW77F.%c#.6UE7["`.P!d#`Pg6:8[)!pX4q]r,i36Q5I83JHF9O?Vi
%8+k$h<!3uOD'8pdM+lBm-5!-DhM:PD\uA[?%::cj#lSD].hM(TV/J.BmXO<FVgYDXm35#*ZpSSuPb#V087achcl?*RV&:0P1*R49
%\M4G&W90179!?G)mSpo(isdm09k=L4P;"2X\YCA!\R:&GK>oh!BJ\RaMI0%65UpA@jg5^HFXgfAS5D\gPk6uI7c"%tgg<!mNKlJ7
%p,iTni1_%hp8G!fmsXsPc9+%uZGCrqBr&'p#X)R2*TVsZNg*hCqSgJ+n]laB2DSE2`Q4ZophpWY.;-NuM@[=eTaSlS@Ff:1'N$E&
%;^P`siTUmt^kF[ZR'%C/JMB#_SRB>Zm6<39-_$dANf/S4]TPsMq>"j67+ZFkONom$=orA4c&:B#:TIW1%QdrOF/&e2R+$p%1CM\2
%iWGl]&Sc2C5aJ6(.[r#;!HIdI"lfaCmcp43FhZWKSSns(Oj07@rc_E_I:E]NWB,SW19)cJ:f`;0T<eWJ72IiUoUi-fK1L&PDt9b]
%Hd5E)q_LT<c'?:S=\##S@&P,_26qYTpTft0-%E-XRFUX8J-$LkZ$7#oo>"3/)!uia%/4/h-;sXr>@o>mQg"ps%8*#X*8[KUS7t\6
%nMl=umf6r(VT6QZC<iJcg?2>Y41Hh-0ZrpiFt4+JXb[KIY&"QiF37=LZ)Nk6>jdR3RHU-+H7K%<;q\/^a=,c(H92)Hm+`K+fDcXV
%oQU4F?+oRqZfji7G33M]>[^h/&KID)Q"&[l"O=lS#YM,O+/aF+Wd*=u0"d61l!=I/iQaAFs3Z`$B!M]/XFY[f>%luF,0S>Z>6Lu?
%U;H0$At$G)ANVHtB(HRFo"1=!RVHPH]El[6KQ%A;MQq&:Mj\^:-1Td+.cVr.dXb([8-;2a<lq1-UG[Dc7Hc7JFsA/!31>@f=4:&\
%7^NF;QuiIY_#O`35!9J2+R"&0_?>Sh'GD#AMS`E"H5'F(EYt?,<*9OL8p<m,Cj8\g2p7Z#1N8uC*VaCmKhS9^oXWG,bM#7+c2&TZ
%dQ&0=i[A@=l@;M8mc02"<+GG@As^bV65H*%:5&*Bm;RDoC^%K?]##j64W.`9H7At#dm^##P@5Z)hm$aCX^B@'2(kSLgK+g5Y)FQ)
%C*!2QJjlF%'Qu72%FP+g!j'qD+9=7K59hI!hd-PY5fmTgi7bWR(m$8l1l?2f%LU&@bj@rgEh3pY;FdWE:d)J9gioQjROU.Qm7r[p
%PYXr1q,RK%JN'>^5E(lg=S4cS&."b27(RE.no?liJ8T*V<QWK+LP:mjY@7tqaSn/sFO]&[#pbZjg7YjA6r1I3F1$+Mh4ti]S?gU.
%^YG=DLNEFPs+]&,O^d-t\0Qr3(+F'LhZ'5Z,R(rC_&5;8!9ck_SdA=':;*guf!nEuTk/YkV/R$gG%6ajc6-CQbSFB=W25Y:N]$2k
%hJOo[B?]($_%EpZJ(mSK<gpO"1k\[A:+g(9FPH:[1_F_XnGH/M%'jV9ANZ4[>l`\R-DC4E*NOEfdd!$?:Mpd"^2l,E+lWJU_=a>l
%H5QjD99domJPmAG%n21cPR</OVI<W`)q2!?[&/:eE(mUSQlc_kqQ%d\'Od_d#,bLtp880c#P"M])BEl2G<ZGM6CX'KQ9hDi;77g]
%TIH(q,%F_kRuWrS]9DHU_KMQCXct:Q0Bbhj+V-1jBGn9L,E+3o!$$Tt]6j^>m9td^ThCS[Zo;blP:^Ia4oD<iN)mCY2!MAm4Ph01
%a'CUn_h+CSQ)HK@VT$`YZ*-o=<DjHr7A^@->n\KR"&Tb&&Tg?BYb[&&'S1d0.fe8]_+'^k1\mRp4bR)nEFDF+04P]/,uiFedNBDJ
%p>1SI$(SAu%5;"ictS*cCLS`"I,MO,NLqJGm",K(+KV$0h#m5-K>bU>UJ-#Y+H6G28hMag57IXk.iXuoOtmD=ja(BaO;Gbo5-jl!
%7;[TT2XD_QXjcI;Z`nMmdB4X(]CV:;*k/]t9LD,9cQ#`*$EL/oPN)0dVPtPHK#<i4RId1p[E8l8c;=u(h`2(tg0t%]7[s7u3o.Z!
%fGts]\'-M`\;J\=5S06N\%,8=7E,Z(hP&OICq+^G,6_"<ps;?96;fNTK#13b7ULhiKSo$-s,'c,i^M'>#Bu1D82eZ["IjocC4;C4
%[@'OcTJJ3fKeYPF/p97AKrA"ISkPSoM`&adCjpboj4:k<Z11oBGlB*p%+:1oW++5PJbps1U<@$&L"?e#NCM9qeK(/D[!'Q_V)*&+
%l6$`lWJargper97WTJVOAI5#%;E"7pQSLY).bqd,Jf@W;"#MKcD3hc2Gs4-KiMH3:JYMNr\EG*jE0hD?&".FEY:n4G<[l([Qk3.'
%Z53"V.D_t6E)OjXaWn>?Iqi)KZ>kdWqB:Wpc7C)2i(c396?`i%02=JQ]";T8;;$:A-b<e\ld-C5)HlJbg7G*M\=t'bDC`#rP^1cT
%-+10lOU=Bbok7jW;DL\+86cqX0A[!n33oMOrLKTf+'uI5"V.had$h,%_/#1EM3N9m@uM.1HW&O<lZ73f;)?m)?FNru72bFEn*8ke
%%nJS7dpB6Xh.eUAWJ6"*$)@35`g0c/11tj:!dFiWls$$S8aQm"D(#_W$_cCWnh;"o^ttCtgQ?Gq;[)-!M%@jnq7`SQrc-u$pN@%Q
%62>4j-[.E25EKK;\p0@(fh8GH1;,h?8KL?+T[9R;r"n='!8geAAR.]]K(LVVa&.1i2L"T7#W;J&*Mu\.%nTHc_Rju'i2:SIf'[Kf
%D-e6oR3!2JV6LMWn$%er_:#YM,Y5CA30k@&1cbN_eesE9Ep<XfVh:C7rmK<SnBFWG:(G%p>11'k(f3m<,_p*r#L%s)<ij.E5,pS.
%W!9$lGH;5K[2P!9_A+4o]U;j!4K+XKS&dMZ,8ufO(u;1X?4)=]Zm`JMZ>g+H;f^&/&B'r<\P:lJUTBN[i"7Xc-*8n&&pk&n:Di7K
%'0TrdO2L!\Pq4AUNoV"q)g,k,b8V:<oh6@EKilj9=L2Uu*ieq6]_*Z*M`XGRo7)NcNVDKSodW%G3q:bn?#tf+8LD`Z^<@+&mu-(Q
%Y0a\%%/npE<V+b?<Qa)!<O:SU.Nr(u(#(2j;rT4lP/et@<U1^5?6"O-pqBre64mgJEK#q^<=WZmS%)n?A\3P#g'bU'D)V\,fNZ_m
%[ghCP_V,Cm0%L%+%X$,B9/_kH1fg.+HFl-Q=6UQq[m`/LjXRUX;QdF\^h6Tk?XbH'I9K*i*B1F6F.;Nm#YBAa?r^Q*.&rq@Pe,c?
%4[c+f2dH%(SdZV#UXA73<?OY_IRd[U@'Eq08P9U)g:gKcFjmXqDF*2KX`YK`s,YkCCW51NK3nR;2i&!+?)?HhXcaggGhjC`22WMd
%AY#4M#S+a_4.f\9TO;kSKlH5ER#"uOD8IPde':jg)GR4<):;pNhKDJPSdp$m93V:B]mPI&n(tN<J$2QB`rm5/E-=Q\H;]Gs"cok"
%bfY5X79%H68Rl`]<Q0WO]iA:C5-O2Ai`!]/+8%sb[3`$:ENC97ROS)h,*PjOEkJ:35/tmY7J9KY)_k&]0k64R^/tr@]\)RSE'b=[
%[Q.<`4/^th3aN:K[C.2V<rGBg.VuJZ*I4SI"#M-6'Fs<Hqr@>D@md^OLn!gQP=6T&7iJNEQUf-h8f-]D9+Po.>!36^Zjdg1Ti=Nf
%5fGTm)UK6ZO'+Wg,HNs?BU<q7]@3*'G6!c-<?cr63mTl&Yd?IY]]F%H88\TWhrKFM<WtLr*`eUXL#E<<cB'#ngO,I(UCF^47.^[L
%&jgDi_s.I9T0u9nq:Vc5-=W@3K@s,i4mf#_KsC\8V.G13R4?s`EID.iLDFk`9!>SH5oL+[8LLK*'p`OeL-XY@&5*]!Off76V)c%;
%5<utK@0V9BM4ku6^DPomQGL8n+Y664Q$U6__&f=_rAH?do:=VtZ>)M"k>(^Sd23*LU(<JtdF":C!\.,EQ[>Lu+^Wm9%t=KU5F=j/
%n9UlF%dGPu=RQ[d+22`6hc6L;.#tHV!gia"Q/a74@g0:fmf9URG?oOA//&jp[`j;(A21Z-9I0-lL6V/DcQk>DWb_i</g[IGP8/Wc
%"Gee-,:!D:P9@f.SI=)b<%Uh(YK2))DbR^g+_G\F5YI.tZ?3]V^_1jFB.caq=L&8fK/37I7;YP6,)n:]0uVjEX>*bOMVDhi:U0dp
%W'mO!<bo5d)s-$`.40;;ig^rYC%PS?+XcIuiP,aG(#2aP>"fd_Z^iT95-*RTm_<1R65V"aCV,FbX<kQk8Vh'F7[pQB?_'e(*?%HV
%b!M)s-1!-D&Lq<]*cA%]A'K.B$%N%@BA1j6:NhGm;c&=agWLurT"dO<EiRNl^.8VHfs,R*@V[b,jh9dK!G;n4Os.BLD^hR883'kJ
%]3(imKdd2I@W4<1S9leeT[9$+:tp]Q$UV"_\O.+(FA3HLV)pNP[Z_G`^ss*:'>oJ&#^?IXlqT*CDAQ'\gARFm6G6u732-s.W4"!K
%Y[5GQUnFSka`c5m@<mba)?8)%:ZdB7r6Y;:bQ(=/.c?6.IkhOD64(L7$h]q!Ap9.E>:VR$QAOR!0RG<KrRJ7pG[bYGOOA:!9\#rB
%H4+lK9GJaKI]'b,0*u?BILbVLV!J,Aj$Zr?l2h(9Wlu`+aC35MCt^2:pe%CHf.8da"53:Id6Rsn'es*NgJ;9B]/mLgmAj!cOGJQ1
%aDT@@$AcWl,-sY@rg^V.-:J_2:eNlOJBiLnH"kl[N5HVlGLkX2a%hM'O^MuAE*?&;m_kO#.3B8REH6C67"*<^6lFen1R]/WXDN@U
%kcc-%'?Zc-`i6.0SoeXagj?Oq0TfXacWF'KiD:Qdo]R\Yd0#(0crXRG=V+B'J5rXi'`GHs'l-ngm-*VX4LSh.#0`Fsm`juf-<*mJ
%Fjo<hB1uZZXER5!qg7encJo%8KK#\T?"Am<m".blV2,9AZp^.3+Y.`h,s0lq5KuQ:aBMn(f3";,\=d#jKO,6JC]8\ejLG))l8&"u
%U]g_6V;Pj=Ym*H$"uG.U#bn.:5#,Y<gS6#s?7:Xu_6r+BfGl5JNLOiTC&YAF:6WP.%P$FM?o>5_8p+MC2D>mlTFJe5cVe,.QW7,t
%en*\u.I5D>pLq<6p4i$=5q4V)/Lh(Wkm>^(i^aM)$Zu%`O(cD=<;D=@f]^drV8Wp/%ehJ?N<&SR"b!/<hkPuU$XgS8C5)$%)ABo$
%]36aeVLXdZ8NE6(e?Qju;4R$ai$^C=0=+O-":ZAH*i&)I;IVabF;*n&>g&5JQKoI3Ug-o9CW.:?%^?Lu2ok;(I(E@NDf]8n8>9=U
%$52!*2h4OPT][b9E9G@t8<VskOA$I05GSotCeEekL[4q"WYhN9]g<M#fd2K"8H**GF.FWCb_Obm&rDK@!K':WF(&2hCh>K']f.Lu
%SnLCK1c^H%0hT)kpK<\_#d3_5B/Cpb$.Dp//oq.p@i7C(/iCZeaUVi:+2'Y^!??&ehSfod'*oh\Dustm"CIH'E6R-S$([=)g`Xak
%WDl=MA?@Vb6#\$"WL0Df(?4MckZ2GW[qN,ui/\'YJhkr;.QRPsVU'2:g5L[.m2^'Z#?_`hTO)"3H#d96:l+eX/=GGhWdWiV0p.f'
%3$>TUV,bQ@P$L\2*djHO1m>!G6bZ)rc:e&/h#l_JLp0-!LC2D"HMC`DKWWa+!'+I'>G7hH!Rg+o<,H)E-&/n>M)3u14g#G!`;cV;
%;a3Z8nS9`q`LFbdIPC9?*2j2mQ8Rh;i8(1OGi(Qo&RFC>W:,aXERFT87S?Q1<m0]i@p>-..fN"sG<hncp8E)<[QkPk``t?Od%O+L
%&h\1F1<mBt7hhQ7_[ZXfI;XB:%3ie++:,DRgM``'&Z$Z&5eEA%ZgLjEITYT9A-lZH/k_#53-ESM9EK3s/.BRoP"60rYt7Vse9W=B
%?YlP$n#;='h"FH5'd'jA)mHan_ZQcl:-eW_lPgXKmNGF#FK$b0Y$u1d>FqIGFXsB&UMdY$5KH\22uX[0I0X%JO*@5e?!sj#ZuGjH
%6sQSs7]?q9e[.\Df.U_:M8r%C6u"4SXEBo`'egRVdK_+g`h`dP[`Zq<bq=mLXMUa-DK'YR_*O3/TbLI2%:oKp)mDKIH:WOHSm;36
%Sd.j,h%PRtLo7g8@b[)`E\Q9o3e)gbG]jhS4Z+)WM)$Y_0f`?Q<G+juVMZ">&q7ZLU^Iou;4S5j4eS@&joc8F20I*S&MaljGt89.
%`On&oK8r!2BLbbN4(J-Vd:`6$a*CL9/XearX:3cJZt@fco>(R%/D3^[9$^!:<E;JM=`KnRY#.Ga#8h!^#G#'5SFpF*Gf>7T'G*UG
%EPOl`RqE/7M^h9ZTsJ?b1QHe0&Zi:r4)b(;GKGnG*=STF^1cYB@te$[cKVU0pq&QSp37L>1`hHf1sZRe2XA^_EjQVZ9]_pIUO^Fd
%E1iknaC8=)$bUqiieYh+g[]r.0>LIApo8P1O!W40at!.d`?NIApV"CboL!3)o<D7WOfNfZ6.VM0@kPV5i)ZM:i<+An;nc95AD'9Y
%C/66e=Qna<E9aiGD5gY@bDVa]@;AG:WAZ-)X]qX?3rN5`Aa%q8(q`3IhBf`=oW)PoW&1.Rq+$4F@_qDGXIM?'0AbKk)&S"-dRu5d
%$GKL/95hDSkrY+);4C\si'E%*f=(O*KYaOE6XF?s,0/hEcpfn%7IbHC;clTnk8(j(=M;D%&=8g86KB,,W&?!m,sVZ+74qt;;6ci=
%L?)A-:R`c+NbA!OJom]5h'UW_r1O9]0p@D]_<mH!bRi<"(YeBaH=KkSGNE](9"FQ$hk^LS(E1"H8<'9BQ!8p04B(UEdor<ifa<3?
%S)^k(c1FlT"hGhac=PTY;J::i-BDc!7mIXK[KI/iS.]Yp6ua4A%o"/OHto_&\sGSnK_1iIPG0:'8==uScpUdMCS%RQ0pgES!FM/D
%.+KC^d&Wp.ER*FGob&qUhT()s?llZrI/bE[O=*gcX=1Cfp]2u1M5:,d(S=2<T!VDAiT='7H7t_#-m`@A;@k\r?_&3B#@o'K*ChJr
%\)!:D%MS+PBP^!\rpOJVE$(![9jL@tfQ@eon8gng?_aXnWbJ!cW?fZ]W.Jb[%TmRsLtW=GSD.6H6]&>pQ#%>T<?/q;Ra[r6doorf
%C`o#F]bY2SZ(Q(m4mrp3_qb@kW+Qt)OFt"rRXM7Dl7S?*KY^X>'+$FR*PlXWm>F$q_kO+^X/:J;CUb26IJ?M:1A>;dGC[15k)=PK
%fLgf);<24$OhBpo`Vt\]Q<UC%Po3.hPK;'D0:RrVpY6.OQr#GIE/^9X.jboaK4H/QFL/Is^l75fPcHEAk")2q7VseUHmnWM_7\(U
%44KWjs*!\.QN6NX\;3oneTQ=E<I[*7%8e-e<;!^hm2&in-.5MUNJii-Uc:d[Ou19n.X$a."\m@#8mh=eON_h]Pm!L"L$S"q!uk'.
%2ptJo5_)cVKZ+2joGse?(S'+t+D*Pc@bXR")!rG6X)n[V$=_m#,*5RY!DkA?X1"$$HjYBCEbA64gg+Y:G:A`L.H32un4+C7MM$mn
%PL^P;Hr2jq,W$nP>[l,;@9o(sg['hp-+(>hfZ>Oaj4`cRlIh9k+9kDdr?uHC0I+Lf7tgSlhCIliOU,&dM4,;C.AmJ)mup_=\KTNq
%oZXItQm-"W*$D8[e=mMGT1q:^8<Yk\--5%4%CkEBL^kDGV)6ep7k&F:ru#/P\;(ZbgOX+f^_-A1\hc<o-rJeNJdap#_Li@D[SaI9
%CU&t#4%,CU;\+LJ+AL]SPYBL]J``Bolaj<1JOuYZl;/qZd]"@7-m+@hd+77c/aA52n:52h>7)qu6<fR"&_B@knBgdLiQ1?%&NEeI
%?VV,U(YQi7`0$fllrkN'\ltd5mTsh0O:%icr&#g4PO>/n8ko(E#,.PB<\Gh`A(K*Q`=ACW2F1["f6Pm9RriPI2k(GrGhtH@YV]_g
%&;AT3ftA0f<=!nc<C[.c(1#Km7'iod<('qmI,kSh8`1gN>#YZ#%)U69fCU1cb%[fT2#971X+<T&:T,ON94XBP\9PaVZra4.L[5CK
%AZ$X!Z&M9cQ\`Lt#0+D+$7^LeegA)8Bm!'-"W3u`Zoj%#IXQ)L?kUmS1OqmM`^SFSr\_ZLokW21ldfTM6%2Z##.HF%gCU*.Ac_P(
%"1/Ia\Xn.N%)M0O/HcZrpJC^9C^m)1X*+@\eNrB3a*DUTF(s_HQ;D*;n5Mn[%Vc$i)j?`*OTph$&QLEh$7/57OD6KHH>)b]h\s`i
%bn!;"$<<fA=q>fg+NgC\#IKZG^!3dPP#f:%;=cbI=cl.I&QPo2%i`.H?FU'f09Rq>U8Dho\`upWPYH^1K3:X8HTql/@gG4U"^Ta7
%rn<M4`eP'3+^+GdhPp'qhhk,?Wu5@ELo?"9#5si=_Wi<`k-:c@*iY-Kfp[S^E0K=^Bs;;2>[1ST-7i1+if"Jn]O6_q;omY,Y@\jD
%l(3qU<.#<,`GD4mGPWj-S&LD(?oQ9D&`GNS[6o0rpja>)'VZA:@?0>odoZk&+h!VC0.<"UTZoK/]2ZXVN#/4,<?RGFbB!7X:j3^U
%pOKVFh0pM$+VMdD_H*5^gPLe!m8V'i.M&=Pm=7_`<<2)$HF(df'Jqi=5s=f8\`b2<oL"%>>l`FfndYGTYYOs%Fe0/Z$t;u_=Cq)_
%Al(Ms/[".jmY<20AW!IC+(JFS!Vqi,PP]E@kD*?kMV>ZrmR^u_+H7'LVH03J)M%o]H\n^$,ZpGIK!S`BM<#NV(p)a)8_["?#iZTg
%DX+sD>0Arg3r*c',)X9Ac*ON5cF#FJ\QIR784[aFFt1mXr6CIO\@^,%@p.jSeaU7JCjE2INF&)7#$Aql1fW'2ekDCu%R@`.(d%"Y
%V0s20keUof`h4,'&;]W+lVc`q/k$-d;WXB&!?koO26TDn)6LT_H;`1CL+eF*PpNH1+!!+\dM?D`<1o-k=qsS"VFm)"G8-+GW*@dh
%d07&IN&/e9WgN*%FQ*QKL`n2#Xo`hp87Vit^U@hGp?)V`c9PGR@#If<c_PASicrM1;q\?B![N+p;0[n',oor/(Ld3^c&f>`Fi3Aj
%<=Q;IdI(j'B2QYTL*)9i6i^.fU^C`CBOSr(Od3G\!>AWrgR?rA#ZYBDS+J2!9&'9e0iF`/H)N2FL/\Uj%8u;tBg[#,M!2^igf[Vf
%GLtQXY%:_5EgtDM+_cMr?'e$:[h^::WH6@Leh>D(gmX_unJ9N$fS2>h%ut&4?h6pfn63q%20$M$'K(KcbR[.IMMcUK2[gq!S/#jN
%J<%8B"0s/f^N3lJ?1F[S+hQ/92RZBF$0@#g"kSim'S,W>IB%p4s6uAoNVH9k'B]eAcX<qAdja&Ag>_-B(0G0U!5Z[Z99Q)o8reTa
%f63]UUuJ[bA0Bc7Q6hCHPiQ>EfT4u@/jU9pnbR8slJdM[U`%je5[\LR[;R2C!<]bUfR4Rq,Io?*aLSZ:Rf0@I]#&BMjejli?JH@)
%3d35FK,20S!oRSi8Q]mX]EGo#(LMlJ)BN9jXO.4*"I!XMQ?UK+_=.n^FX':pm'e4j.(m]OS<C*k6U5u;r=mj7r3rmVF7?1/)EK<C
%=_kaZDU`0]RL(TcYD,a1p+fl(AkDJ.4;^e6h[),-&ru5U/5hNpTY#O[WfbahT"rAD?;*[I4f:dEa%4LlBKo_jS]>kR82JJjaN:U(
%5f'0[oD2cIA`!_(j=+<sZ?r^m4X\)T]#m,_Odb_bbdpd\g*K<ob(?o\f;N1&N;m3d0I-iSR+eaUXD8i8ZOp(='=sH6g\OV*I^p#'
%fCa3?2f6:s7PNU6E&"Vo;[=5FLs)*;Aj8l\BM_LPp-)]u-<>,0Enmik72oXVmNo)jJ,70t_4uW\d^lOIb:**>RVk/4)q#[Fg:,@'
%mX""^TEmkqO<h4)<lYB`mTNjk5S4=TJ%l0Q#K9P9a[4<"B%,%D.NXPUDsUZ4_DaPH@KSr,9W^%%\50HApD;#@h,VdtU=q"K"&dWA
%fVLB\^[@qBB^nTX,?[@mCN$DWEi%thb95l*oZ_FCg*UP45*"4rPO,31^hZ@F'8#-,MJ0h25]_M;FC)BFKo]0m`+fIQCiMRE"I.<o
%fOMi=4/djP5F!i/TJC5t3"LscT]ku<U>4N_f'C>k+40?Il[&$rcsu+Xa+Jof;Uck[DaFK[d"mYH<:Nde0)@$%,;DMG%k8J`GX=H8
%/F@%:P&p*M2=>,.;c0b8LLtM-A5JAWF[@+HAALbdKWp+D^e;M92o6sqSP[W'q$:2qcq:j&3(Ok5aR?gj[6F\+g.T.deMK.8a12k\
%E@Gf!/I><i7,QUjn,5Z"f3VS*TTE>ldY."R&X\hoBgcCa[f+^gDl*G/[t8(uAAS6#.(d.nM5.9;*h*m0:om[;.%Bb>=l1/V!J$hB
%=#[>XgR#>lLD':8>gHJXT96VFjbqIXoMh@2OX8se$&;37S;agl%<VAVg/U/A[+.Y1Vf6;o;Du5o+'pQk@QYskOs"/;KM<?oS"Q;c
%c4ZcpI4kWgl#lL&lUh1X)T\t$8o0a1GWe3gA)@YUmIa'NUHUl[9rc"'Xc"]=aSA'>,@&2F?c>AOGFLfe[`*i7)\f#qe'g_jGJ15^
%?\C_Uhd23dKi92,$"V*Lk2u+mqXl(%2^(c(9"H;&S>6-FNq:i7^Y5"@d;F/VYiIpEbGfj7o+7U;?FX!"dC?tr0;<fPrW^j)NL%/;
%hs/go#02=2a%gbYQ:=2GlR<%u:G!ljjLi$0Fm@iE4Eue'c?UQ^\"AhZV\H+6,:R/0h:PNk%]m?PL5+/$"LS1qr$?1.Yq7J[8CRBM
%c'O]:jhXO=,h]5L"HPjiTnl:<:m]^RO>:D66JjtDcsa+J0,q*uL6!NLmX9]YqAQ(l:5r&mjoXdBDHL+DG[8DT@iMM#n'Z=F6^ODC
%ldYQG'gJ8@=O13TLT^!=FmHPpV*^TOS+CpMCYrllK3X/JK+Y)l4T]ABeqq.AK3t)=\C^>@Z&&OhLeb49V.3cT&\O+$[`>V1Z1d\n
%k>RDKa6Ie177kdKK7.:"/a%d,Z3P<<JF)YA:AUA,pqY@mc_jSdeS,POd93VY4GdX:DZ]tJ!L]IplH>36>o!f^^0H03qDk->>791,
%`&Jb<dH8U7\p?79bk941CU;B*9=u0i8@!ZYo`3c`+"5bG>?I^13@D]>qc8G2&GnWMGp(`)'+XrQE]%%5,:H*]f>/<%o:G]u/$L^7
%\D8OF\gY[?UEHWGY:bKA\Rj%+X5d8m!3"WNqHIOGls>4p+B^fGgRt:ndj@@EVb4/,BeI7dXr.kU?E/b/3H4I@`-aV0A/@B^nPk48
%BkT5k@l1h8o(<ZbJ,HkEr0udjXWpu[b+^36c`6lfFJG3s!3i"\N%P(X3AIE8X01#p=i)%CE4h`/aWcU1D9jdkb-hl,?$4eB)4RQq
%C<qNZCa0OY]IpWW`9f%_Ys&D?Rg@O?#>+X:a9)#BX)\'eUG>5uF7-lgamsMj<MsZqOQ0SNd=Dn<dT1udi>A:m3u$4)ZQ:+Og7FS`
%G]h\g0tJ.[j^+2<@C=_dPJ*F665Mr<CNCk^X3_Us-%/i4Z]1AlS<@aNV"<rj$8S<jkor0gEEn8_.-U0U0=!0m+PnM<Y/,`K0(6RA
%oCmRcs5C`].a[p@c'8bNY+J=/!Q05#koiq09)]ab18I:;Z9$tXV=l&>EH$cW@^Cbk>>-9).XI-lXEG&1((\Q[MFbb@HE-8KP[,IA
%iMt.3Ehah3e'V5O;,MdVNnA<qE-7T/b1;NS<#9F9N#$e/Cj#\]TVhP1f04TK]$RH\FB)+3NU45Q<.P["o_5<>'mrkE.V#;CH=BEE
%%+cq$jRl4;VlV-e;C-gkW2hF?Qt^<>8@^Q?G9M#P<K^Tl,_:Nuc](pgRoOITE'E;2EZ_#^:qX<(Oq6!]`OpZf8EFmTHbX>YIo'kC
%m4)FAT8Of[K5%!j;Z3CgY]CSb6Jt4!oDT.XRR3#O!aBZFWMIu`g!fI%FOmD6,XkaTDmpq+D\pgc<D!n!a(,)/.Aah%1XhuEJpO;S
%l)Bn7%?>Kb4t9/TXs#2le0IXkFgr)a:WIC87Y/\HdjJK4GP;\D!'f:LFq3U6\RNS'eJXT>f?MhC-i0WWAUtUu*tC5=E2sm:?_9Ls
%'C_eqjlT-3\:h)Q^HWai?\/'Hp&8[M&LCCe7OcS$P`e-q\1=^A;JPLo,=dNVjs^2K1W@&Vr$mQ>mo(Zl\AY>UI=1KlO8%!ehU.gd
%+6r`qRu:2K9T.ML_$E.6jLl2tSk,dckTQic4cpQjkTW6Tk0\h"cE3&QLhY+F]M=4pj(g)L`Jb)%_l$t/VAtNDq*plSNki5+g`N!X
%bY$%<*/3;U$gCG_khYiVIPu$\UP-%2k`gUup_aNhibK%";.HLT,V.+OdM!K.Ir^&!N>Ut]9'4U#@KQElmbU&41AO1Yp<HpUIgGIa
%)sTfK"4Q'@p](CA%5JB=%ZhWk,O#g=aVhTM0L:A`kt$/%!N>@>fH=_c'`0?0;U*_IU`4#uQ%Pmn1B9$-j119`oNQV$Wt_\0K_aXA
%Bnj>:7eH9iA4[FVG(#cWoPj]eVtA@aE)kB5.:od&[J&0=DFFA=3&+1mq<!`6V!ADlcT$^=c7".r1%Or)'SOZUs7,^,+"r-DimfEK
%r9!+YQS74nnaY]gT0.W$r8I\Rp!jj3f.iIA5QB9'0AjD.=)VDnq<GrZJ,@EIcecB\oB!Pc6.NM$J,Yq(0CJc1kAT7jI/BBLT=t*E
%(S?'feieN_0;$"-rSmA0]XrOF^OH.EQQLHNgc,2kIspk_j'TNJq9?DIk4?@#q/$&hl-k+&B;H-KkP1.BqOj<AjR#-UpsOrSpq]b]
%A'ud0SMn8BI,<%*?bUpbqn9cO>#?ehs5O(KlE`/D[!rk06W&/YgCO<m?%%+<<PRJlehnjm_*m(noUfL)qW"4Ak5%mQo;Ae+HMQ;[
%^#3s]rSm4&f3dm\H?/I9,Be.W5JMI7g#L8bs751BbA[17HbDpakbgf:)'FH=rYF6(9o`2@eLhQ%\e4*8ot=@u4FlRg?aQci'f>[k
%(se2?AXhfmDCf'k6IEd8_O[U>Dh4Ekf6;45&]H^4Z)KeNjj;gSM)^#Q6+e>?'iDJOT]MA6mt*D[71V(=(\eR=m=k0)X%F_B5Bdk0
%kAp#kMC1nM`6HUK$S;#6\Qd"cf,$P&]RIlrF74VIO#oGkmXnk15/-mb([paC-g/_HRWhLE0SjES]D$YJ2Slk.pggE,c_(=9k#_KZ
%]o@>EoBTI2J,A>c[pS!0f5PdJSep6J$Le#Yp>Kn=oG\nPb;Z'L?MAmAs180hm='T8X'0sjpWAJ;05b3qLN:!1!/4GMeC2*_&#(9:
%lX!Gld!2khY+j[aEg<5SqtbA\$f!l=B!:"&i-F;S1\T/Nq;2,^p'S(#r2m0t\%V@gHNemN$I\*\YM;[p]cqj=-\k5*r8*VNKJct6
%"EM,,P+9SbAF!Mi2f&+VH7nXOc^e:uqV9i=EdbbU^%mWcF*G@m5Q4t4QD=QYgKs\QH_m]cBtUcRY0t"nM7=R%&!8E/n)GE-$o!]$
%g?fA*mS^[QH8hRf21$Q2(\dUcc7O!`m`f(KH,9*hlXu_Pp\spda58D#.PtO_gFGL#YM;0!ml3EK(udK+bSam\,_Jo:DNMp1Zb/SE
%\q5*YqJ-:?k4cX+@JVY+2>Z3s&2/P38K\tX@]N@B(io165L)N:9*SLhhUcZ\r&eo]oQ_GTSK!+B41a2&T&.9)o^pigplj(U[I8M9
%rI(t@ke-E6J"2*tr2T\@3H(P(q"j+,B@!I5Vn[]Na-Zi&p;O'ml9G*V5CW.^X-].hDr.].?N,6Ll12m(0>I;Qo=$A+?i90[^EVX6
%o7in:oU#UN5QBg5rXFS>do6~>
%AI9_PrivateDataEnd
